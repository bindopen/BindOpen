<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.Framework.NetCore</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions">
            <summary>
            This static class extends .Net core dependency injection namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBindOpenDefaultHost(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BindOpen.Framework.Runtime.Application.Options.ITBdoHostOptions{BindOpen.Framework.Runtime.Application.Settings.BdoDefaultHostSettings}})">
            <summary>
            Adds a BindOpen default host.
            </summary>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.GetBindOpenDefaulHost(System.IServiceProvider)">
            <summary>
            Adds a BindOpen default host.
            </summary>
            <param name="provider">The service provider to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBindOpenHost``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BindOpen.Framework.Runtime.Application.Options.ITBdoHostOptions{``0}})">
            <summary>
            Adds a BindOpen host.
            </summary>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBindOpenHost``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BindOpen.Framework.Runtime.Application.Options.ITBdoHostOptions{``1}})">
            <summary>
            Adds a BindOpen host.
            </summary>
            <typeparam name="SHost">The class of bot to consider.</typeparam>
            <typeparam name="S"></typeparam>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBindOpenService``3(Microsoft.Extensions.DependencyInjection.IServiceCollection,BindOpen.Framework.Core.System.Diagnostics.Loggers.IBdoLogger[],System.Func{``2,``1})">
            <summary>
            Adds a BindOpen service.
            </summary>
            <typeparam name="Serv"></typeparam>
            <typeparam name="SServ"></typeparam>
            <typeparam name="SHost"></typeparam>
            <param name="services">The collection of services to populate.</param>
            <param name="loggers"></param>
            <param name="funcSettingsConverter"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.BdoConfigurationBinder">
            <summary>
            This static class extends .Net core dependency injection namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoConfigurationBinder.GetBdoValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configuration"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoConfigurationBinder.GetBdoValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configuration"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoConfigurationBinder.GetBdoValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="type"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoConfigurationBinder.GetBdoValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="type"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.NetCore.Services.ITHostedService`3">
            <summary>
            This interface defines a BindOpen bot service that can be hosted in generic .Net core host.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.NetCore.Services.ITHostedService`3.Host">
            <summary>
            
            </summary>
        </member>
        <member name="T:BindOpen.Framework.NetCore.Services.THostedService`3">
            <summary>
            This service represents a BindOpen bot service that can be hosted in generic .Net core host.
            </summary>
            <typeparam name="Serv"></typeparam>
            <typeparam name="SServ"></typeparam>
            <typeparam name="SHost"></typeparam>
        </member>
        <member name="P:BindOpen.Framework.NetCore.Services.THostedService`3.Host">
            <summary>
            The BindOpen bot of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.NetCore.Services.THostedService`3.#ctor(BindOpen.Framework.Runtime.Application.Hosts.IBdoHost,BindOpen.Framework.Runtime.Application.Options.ITBdoServiceOptions{`1,`2})">
            <summary>
            Creates a new instance of the BdoHostedService class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.NetCore.Services.THostedService`3.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts this instance.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.NetCore.Services.THostedService`3.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Ends this instance.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.NetCore.Services.THostedService`3.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
    </members>
</doc>
