<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.Framework.Core</name>
    </assembly>
    <members>
        <member name="T:BindOpen.Framework.Core.Application.Arguments.AppArgumentHelper">
            <summary>
            This class represents the application argument parser.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Arguments.AppArgumentHelper.UpdateOptions(System.String[],BindOpen.Framework.Core.Application.Options.OptionSpecSet,System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Retrieves the arguments from the specified argument string values.
            </summary>
            <param name="arguments">The argument string values to consider.</param>
            <param name="optionSpecificationSet">The option specification set to consider.</param>
            <param name="allowMissingItems">Indicates whether the items can be missing.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the log of argument building.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Arguments.AppArgumentHelper.Check(BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,BindOpen.Framework.Core.Application.Options.OptionSpecSet,System.Boolean)">
            <summary>
            Checks this instance.
            </summary>
            <param name="optionSet">The set of options to consider.</param>
            <param name="optionSpecificationSet">The set of option specifications to consider.</param>
            <param name="allowMissingItems">Indicates whether the items can be missing.</param>
            <returns>Returns the log of check.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Commands.Command">
            <summary>
            This class represents a command.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Commands.Command.Kind">
            <summary>
            The kind of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.Command.#ctor">
            <summary>
            Instantiates a new instance of the Command class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.Command.#ctor(BindOpen.Framework.Core.Application.Commands.CommandKind)">
            <summary>
            Instantiates a new instance of the Command class.
            </summary>
            <param name="kind">The kind of command to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.Command.#ctor(BindOpen.Framework.Core.Application.Commands.CommandKind,System.String)">
            <summary>
            Instantiates a new instance of the Command class.
            </summary>
            <param name="kind">The kidn of command to consider.</param>
            <param name="name">The name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.Command.Execute(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.Data.Common.RuntimeMode)">
            <summary>
            Executes this instance.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>The log of execution log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.Command.ExecuteWithResult(System.String@,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.Data.Common.RuntimeMode)">
            <summary>
            Executes this instance with result.
            </summary>
            <param name="resultString">The result to get.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>The log of execution log.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Commands.CommandKind">
            <summary>
            This enumeration represents the possible kinds of commands.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Commands.CommandKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Commands.CommandKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Commands.CommandKind.Shell">
            <summary>
            Shell command.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Commands.CommandKind.Reference">
            <summary>
            Command with reference.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Commands.CommandKind.Script">
            <summary>
            Command with script.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Commands.ShellCommand">
            <summary>
            This class represents the Shell command.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Commands.ShellCommand.FileName">
            <summary>
            The file name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Commands.ShellCommand.ArgumentString">
            <summary>
            The argument String of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Commands.ShellCommand.WorkingDirectory">
            <summary>
            The working directory of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ShellCommand.#ctor">
            <summary>
            Instantiates a new instance of the ShellCommand class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ShellCommand.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the ShellCommand class.
            </summary>
            <param name="fileName">The file name to consider.</param>
            <param name="aArgumentString">The argument string to consider.</param>
            <param name="aWorkingDirectory">The working directory to consider.</param>
            <param name="name">The name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ShellCommand.ExecuteWithResult(System.String@,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.Data.Common.RuntimeMode)">
            <summary>
            Executes this instance with result.
            </summary>
            <param name="resultString">The result to get.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>The log of execution log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ShellCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Commands.ReferenceCommand">
            <summary>
            This class represents the data reference command.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Commands.ReferenceCommand.Reference">
            <summary>
            The task set of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ReferenceCommand.#ctor">
            <summary>
            Instantiates a new instance of the ReferenceCommand class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ReferenceCommand.#ctor(BindOpen.Framework.Core.Data.References.DataReference,System.String)">
            <summary>
            Instantiates a new instance of the ReferenceCommand class.
            </summary>
            <param name="reference">The reference to consider.</param>
            <param name="name">The name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ReferenceCommand.ExecuteWithResult(System.String@,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.Data.Common.RuntimeMode)">
            <summary>
            Executes this instance with result.
            </summary>
            <param name="resultString">The result to get.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>The log of execution log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ReferenceCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Commands.ScriptCommand">
            <summary>
            This class represents the script command.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Commands.ScriptCommand.Script">
            <summary>
            The script of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ScriptCommand.#ctor">
            <summary>
            Instantiates a new instance of the ScriptCommand class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ScriptCommand.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of the ScriptCommand class.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="name">The name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ScriptCommand.ExecuteWithResult(System.String@,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.Data.Common.RuntimeMode)">
            <summary>
            Executes this instance with result.
            </summary>
            <param name="resultString">The result to get.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>The log of execution log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Commands.ScriptCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Configuration.Configuration">
            <summary>
            This class represents a configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Configuration.Configuration.CurrentFilePath">
            <summary>
            Current file path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Configuration.Configuration.CreationDate">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Configuration.Configuration.LastModificationDate">
            <summary>
            Last modification date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Configuration.Configuration.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.#ctor">
            <summary>
            Instantiates a new instance of the Configuration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.#ctor(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.DataElement[])">
            <summary>
            Instantiates a new instance of the Configuration class.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.#ctor(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.DataElement[])">
            <summary>
            Instantiates a new instance of the Configuration class.
            </summary>
            <param name="filePath">The file path to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.Set(System.Object,System.String)">
            <summary>
            Sets the specified value.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.Get``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.Get``1(``0,System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">The calling property name to consider.</param>
            <param name="defaultValue">The default value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.SaveXml(System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Saves this instance.
            </summary>
            <param name="filePath">The file path to consider.</param>
            <param name="log">The output log.</param>
            <returns>True if this instance has been</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.Configuration.Load``1(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Xml.Schema.XmlSchemaSet,System.Boolean)">
            <summary>
            Instantiates a new instance of Configuration class from a xml file.
            </summary>
            <param name="filePath">The file path to consider.</param>
            <param name="log">The log to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="xmlSchemaSet">The XML schema set to consider for checking.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The Xml operation project defined in the Xml file.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Configuration.ConfigurationBundle">
            <summary>
            This class represents a configuration.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.ConfigurationBundle.#ctor">
            <summary>
            Instantiates a new instance of the ConfigurationBundle class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.ConfigurationBundle.#ctor(BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue[])">
            <summary>
            Instantiates a new instance of the ConfigurationBundle class.
            </summary>
            <param name="values">The values to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration">
            <summary>
            This class represents an usable configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.UsingFilePaths">
            <summary>
            The using file paths of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.UsingFilePathsSpecified">
            <summary>
            Specification of the UsingFilePaths property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.UsingConfiguration">
            <summary>
            The using configuration statement of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the UsableConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.#ctor(BindOpen.Framework.Core.Application.Scopes.IAppScope)">
            <summary>
            Instantiates a new instance of the UsableConfiguration class.
            </summary>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.#ctor(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope)">
            <summary>
            Instantiates a new instance of the UsableConfiguration class.
            </summary>
            <param name="filePath">The file path to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.#ctor(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String[])">
            <summary>
            Instantiates a new instance of the UsableConfiguration class.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="usingFilePaths">The paths of the using files to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.#ctor(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String[])">
            <summary>
            Instantiates a new instance of the UsableConfiguration class.
            </summary>
            <param name="filePath">The file path to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="usingFilePaths">The paths of the using files to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.#ctor(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.DataElement[])">
            <summary>
            Instantiates a new instance of the UsableConfiguration class.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.#ctor(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.DataElement[])">
            <summary>
            Instantiates a new instance of the UsableConfiguration class.
            </summary>
            <param name="filePath">The file path to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.SaveXml(System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Saves this instance.
            </summary>
            <param name="filePath">The file path to consider.</param>
            <param name="log">The output log.</param>
            <returns>True if this instance has been</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Configuration.UsableConfiguration.Load``1(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Xml.Schema.XmlSchemaSet,System.Boolean)">
            <summary>
            Instantiates a new instance of UsableConfiguration class from a xml file.
            </summary>
            <typeparam name="T">The usable configuration class to consider.</typeparam>
            <param name="filePath">The file path to consider.</param>
            <param name="log">The log to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="xmlSchemaSet">The XML schema set to consider for checking.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The Xml operation project defined in the Xml file.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Contacts.Contact">
            <summary>
            This class represents a contact.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Contacts.Contact.Email">
            <summary>
            Email of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Contacts.Contact.SmsPhone">
            <summary>
            Sms phone of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Contacts.Contact.VocalPhone">
            <summary>
            Vocal phone of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Contacts.Contact.#ctor">
            <summary>
            Instantiates a new instance of the UserContact class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Contacts.Contact.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned object.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Datasources.DataSourceService">
            <summary>
            This class represents a data source service.
            </summary>
            <remarks>The data source service stores sources by data sources.</remarks>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Datasources.DataSourceService._DataSourceSet">
            <summary>
            The data sources of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Datasources.DataSourceService.DataSourceSet">
            <summary>
            The data sources of this instance. 
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.#ctor">
            <summary>
            Instantiates a new instance of the DataSourceService class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.#ctor(BindOpen.Framework.Core.Data.Items.Source.DataSource[])">
            <summary>
            Instantiates a new instance of the DataSourceService class.
            </summary>
            <param name="dataSources">The data sources to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.AddSource(BindOpen.Framework.Core.Data.Items.Source.DataSource)">
            <summary>
            Adds the specified data source.
            </summary>
            <param name="source">The data source to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.AddSource(BindOpen.Framework.Core.Data.Items.Source.DataSource[])">
            <summary>
            Adds the specified module instances.
            </summary>
            <param name="sources">The data sources to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.RemoveSource(System.String[])">
            <summary>
            Remove the specified data sources.
            </summary>
            <param name="sourceNames">Names of the data source to remove.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.GetSource(System.String)">
            <summary>
            Gets the specified data source.
            </summary>
            <param name="sourceName">The name of the data source to consider.</param>
            <returns>The data source with the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.HasSource(System.String)">
            <summary>
            Indicates whether this instance has the specified data module name.
            </summary>
            <param name="sourceName">The name of the data source to consider.</param>
            <returns>The data source with the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.GetModuleName(System.String)">
            <summary>
            Returns the module name of the specified data source.
            </summary>
            <param name="sourceName">The name of the data source to consider.</param>
            <returns>The module name corresponding to the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.GetInstanceName(System.String)">
            <summary>
            Returns the instance name of the specified data source.
            </summary>
            <param name="sourceName">The name of the data source to consider.</param>
            <returns>The instance name corresponding to the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.GetInstanceOtherwiseModuleName(System.String)">
            <summary>
            Returns the instance name otherwise module name of the specified data source.
            </summary>
            <param name="sourceName">The name of the data source to consider.</param>
            <returns>The instance name corresponding to the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.GetConnectorConfiguration(System.String,System.String)">
            <summary>
            Gets the specified connector configuration.
            </summary>
            <param name="sourceName">The name of the data module to consider.</param>
            <param name="connectorDefinitionUniqueName">The unique name of the connector definition to consider.</param>
            <returns>The specified connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.HasConnectorConfiguration(System.String,System.String)">
            <summary>
            Indicates whether this instance has the specified connector configuration.
            </summary>
            <param name="sourceName">The name of the data module to consider.</param>
            <param name="connectorDefinitionUniqueName">The unique name of the connector definition to consider.</param>
            <returns>The data source with the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Datasources.DataSourceService.GetStringConnection(System.String,System.String)">
            <summary>
            Returns the connection string corresponding to the specified configuration.
            </summary>
            <param name="sourceName">The name of the data source to consider.</param>
            <param name="connectorDefinitionUniqueName">The connector unique name to consider.</param>
            <returns>The connection string corresponding to the specified data module name.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Entities.ApplicationEntity">
            <summary>
            This class represents an application entity.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Entities.ApplicationEntity.Scope">
            <summary>
            The scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Entities.ApplicationEntity.#ctor(BindOpen.Framework.Core.Application.Entities.ApplicationEntityScope)">
            <summary>
            Instantiates a new instance of the Entity class.
            </summary>
            <param name="aScope">The entity scope to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Entities.ApplicationEntityScope">
            <summary>
            This enumeration represents the possible application entity scopes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Entities.ApplicationEntityScope.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Entities.ApplicationEntityScope.System">
            <summary>
            System.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Entities.ApplicationEntityScope.Platform">
            <summary>
            Platform.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Entities.ApplicationEntityScope.PlatformModule">
            <summary>
            Platform module.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Entities.ApplicationEntityScope.Business">
            <summary>
            Business.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Navigation.ActionPriority">
            <summary>
            This enumeration lists the possible kinds of actions.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Navigation.ActionPriority.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Navigation.ActionPriority.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Navigation.ActionPriority.Medium">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Navigation.ActionPriority.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Navigation.ActionPriority.VeryHigh">
            <summary>
            Very high.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Options.OptionNameKind">
            <summary>
            This enumeration lists all the possible option name kinds.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Options.OptionNameKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Options.OptionNameKind.OnlyName">
            <summary>
            Only name.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Options.OptionNameKind.NameWithValue">
            <summary>
            Name with value.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Options.OptionNameKind.NameThenValue">
            <summary>
            Name then value.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Application.Options.OptionNameKind.OnlyValue">
            <summary>
            Only value.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Options.OptionNameKindExtension">
            <summary>
            The extension of the option name kind.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionNameKindExtension.HasName(BindOpen.Framework.Core.Application.Options.OptionNameKind)">
            <summary>
            Indicates whether the specified kind has name.
            </summary>
            <param name="kind">The kind of the option name.</param>
            <returns>Returns true or false.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionNameKindExtension.HasValue(BindOpen.Framework.Core.Application.Options.OptionNameKind)">
            <summary>
            Indicates whether the specified kind has value.
            </summary>
            <param name="kind">The kind of the option name.</param>
            <returns>Returns true or false.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Options.OptionSet">
            <summary>
            This class represents a option set.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSet.#ctor">
            <summary>
            Instantiates a new instance of the OptionSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSet.HasOption(System.String)">
            <summary>
            Indicates whether this instance has the specified option.
            </summary>
            <param name="name">Name of the option to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSet.GetOptionValue(System.String)">
            <summary>
            Gets the value of the specified option.
            </summary>
            <param name="name">Name of the option to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSet.GetOptionStringValue(System.String)">
            <summary>
            Gets the string value of the specified option.
            </summary>
            <param name="name">Name of the option to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSet.Update(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance with the specified string value.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Options.OptionSpec">
            <summary>
            This class represents an option specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.#ctor">
            <summary>
            Instantiates a new instance of the OptionSpec class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.#ctor(System.String[])">
            <summary>
            Instantiates a new instance of the OptionSpec class.
            </summary>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.#ctor(BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Instantiates a new instance of the OptionSpec class.
            </summary>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.#ctor(BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Instantiates a new instance of the OptionSpec class.
            </summary>
            <param name="dataValueType">The value type to consider.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.#ctor(BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Instantiates a new instance of the OptionSpec class.
            </summary>
            <param name="requirementLevel">The requirement level of the entry to add.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.#ctor(BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Instantiates a new instance of the OptionSpec class.
            </summary>
            <param name="dataValueType">The value type to consider.</param>
            <param name="requirementLevel">The requirement level of the entry to consider.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.#ctor(System.Type,BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Instantiates a new instance of the OptionSpec class.
            </summary>
            <param name="type">The type to consider.</param>
            <param name="requirementLevel">The requirement level of the option to consider.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.IsArgumentMarching(System.String,System.Int32@)">
            <summary>
            Indicates whether the specified argument matches with this instance.
            </summary>
            <param name="argumentstring">The argument to consider.</param>
            <param name="aliasIndex">The alias index to consider. -2 not found. -1 Name matches. otherwise the index of matched alias.</param>
            <returns>Returns True if the specified matches this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpec.IsArgumentMarching(System.String)">
            <summary>
            Indicates whether the specified argument matches with this instance.
            </summary>
            <param name="argumentstring">The argument to consider.</param>
            <returns>Returns True if the specified matches this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Options.OptionSpecSet">
            <summary>
            This class represents a option specification set.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Options.OptionSpecSet.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Options.OptionSpecSet.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Options.OptionSpecSet.Condition">
            <summary>
            The condition of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Options.OptionSpecSet.SubSets">
            <summary>
            The sub sets of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.#ctor">
            <summary>
            Instantiates a new instance of the OptionSpecSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.#ctor(BindOpen.Framework.Core.Application.Options.OptionSpec[])">
            <summary>
            Instantiates a new instance of the OptionSpecSet class.
            </summary>
            <param name="optionSpecifications">The option specifications to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.#ctor(BindOpen.Framework.Core.Data.Business.Conditions.Condition,BindOpen.Framework.Core.Application.Options.OptionSpec[])">
            <summary>
            Instantiates a new instance of the OptionSpecSet class.
            </summary>
            <param name="condition">The condition to consider.</param>
            <param name="optionSpecifications">The option specifications to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.GetHelpText(System.String)">
            <summary>
            Gets the help text.
            </summary>
            <param name="uiCulture">The UI culture to consider.</param>
            <returns>Returns the help text.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.ClearOptions">
            <summary>
            Clears the options.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Framework.Core.Application.Options.OptionSpecSet)">
            <summary>
            Adds the specified set of option specifications.
            </summary>
            <param name="subSet">The sub set to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Framework.Core.Application.Options.OptionSpec[])">
            <summary>
            Adds a new set of option specifications.
            </summary>
            <param name="optionSpecifications">The option specifications to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Framework.Core.Data.Business.Conditions.Condition,BindOpen.Framework.Core.Application.Options.OptionSpec[])">
            <summary>
            Instantiates a new instance of the OptionSpecSet class.
            </summary>
            <param name="condition">The condition to consider.</param>
            <param name="optionSpecifications">The option specifications to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddOption(System.String[])">
            <summary>
            Adds a new option specification.
            </summary>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddOption(BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Adds a new option specification.
            </summary>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddOption(BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Adds a new option specification.
            </summary>
            <param name="dataValueType">The value type to consider.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddOption(BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Adds a new option specification.
            </summary>
            <param name="requirementLevel">The requirement level of the entry to add.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddOption(BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Adds a new option specification.
            </summary>
            <param name="dataValueType">The value type to consider.</param>
            <param name="requirementLevel">The requirement level of the entry to consider.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.AddOption(System.Type,BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Application.Options.OptionNameKind,System.String[])">
            <summary>
            Adds a new option specification.
            </summary>
            <param name="type">The type to consider.</param>
            <param name="requirementLevel">The requirement level of the option to consider.</param>
            <param name="nameKind">The name kind to consider.</param>
            <param name="aliases">Aliases of the option to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.RemoveOption(System.String)">
            <summary>
            Deletes the specified option.
            </summary>
            <param name="name">Name of the statement entry to remove.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.HasOption(System.String)">
            <summary>
            Indicates whether this instance has the specified option.
            </summary>
            <param name="name">Name of the option to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Options.OptionSpecSet.GetItem(System.String)">
            <summary>
            Returns the item with the specified name.
            </summary>
            <param name="key">The name of the alias of the item to return.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Scopes.AppScope">
            <summary>
            This class represents an application scope.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Scopes.AppScope.AppExtension">
            <summary>
            The application extension of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Scopes.AppScope.ScriptInterpreter">
            <summary>
            The script interpreter of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Scopes.AppScope.DataContext">
            <summary>
            The data context of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Scopes.AppScope.DataSourceService">
            <summary>
            The data source service of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScope.#ctor">
            <summary>
            Instantiates a new instance of the AppScope class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScope.#ctor(System.AppDomain)">
            <summary>
            Instantiates a new instance of the AppScope class.
            </summary>
            <param name="appDomain">The application domain to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScope.#ctor(BindOpen.Framework.Core.Application.Scopes.IAppScope)">
            <summary>
            Instantiates a new instance of the AppScope class.
            </summary>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScope.CreateItem``1(System.String,BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{``0},System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates the instance of the specified extension item.
            </summary>
            <param name="definitionName">The unique name of the definition to consider.</param>
            <param name="configuration">The configuration to consider.</param>
            <param name="name">The name to consider.</param>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScope.CreateViewer(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind,System.String,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates the instance of the viewer of the specified extension object class.
            </summary>
            <param name="libraryItemKind">The extension item kind to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="viewerKey">The viewer key to consider.</param>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScope.SetAppDomain(System.AppDomain)">
            <summary>
            Sets the specified application domain.
            </summary>
            <param name="appDomain">The application domain to instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScope.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Scopes.AppScopeHelper">
            <summary>
            This class represents an application scope helper.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Scopes.AppScopeHelper.Check(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Check the specified item.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="isAppExtensionChecked">Indicates whether the application extension is chekced.</param>
            <param name="isScriptInterpreterChecked">Indicates whether the script interpreter is chekced.</param>
            <param name="isDataContextChecked">Indicates whether the data context is chekced.</param>
            <param name="isDataSourceServiceChecked">Indicates whether the data module manager is chekced.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Services.DataService">
            <summary>
            This class represents a data service.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Services.DataService.#ctor">
            <summary>
            Initializes a new instance of the DataService class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Services.DataService.#ctor(BindOpen.Framework.Core.Data.Connections.IConnection)">
            <summary>
            Initializes a new instance of the DataService class.
            </summary>
            <param name="connection">The connection to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Services.DataServiceExtension">
            <summary>
            This class represents a data context service extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Application.Services.DataServiceExtension.Execute``1(``0,System.Action{``0})">
            <summary>
            Executes the specified function.
            </summary>
            <typeparam name="Q"></typeparam>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Services.IDataService">
            <summary>
            This interfaces represents a data service.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Application.Services.WebRequestResult">
            <summary>
            This class represents the result of a Web request.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Services.WebRequestResult.Value">
            <summary>
            Value of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Application.Services.WebRequestResult.Log">
            <summary>
            Log of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Cases.BusinessCase">
            <summary>
            This class represents a business case.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Cases.BusinessCase.BusinessCondition">
            <summary>
            Business condition of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Cases.BusinessCase.#ctor">
            <summary>
            Instantiates a new instance of the BusinessCase class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition">
            <summary>
            This class represents an advanced condition.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.AdvancedBusinessConditonKind">
            <summary>
            This enumeration lists the possible view advanced condition kinds.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.AdvancedBusinessConditonKind.And">
            <summary>
            And.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.AdvancedBusinessConditonKind.Or">
            <summary>
            Or.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.Kind">
            <summary>
            Kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.Conditions">
            <summary>
            Conditions of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.#ctor">
            <summary>
            Instantiates a new instance of the AdvancedBusinessConditon class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.#ctor(BindOpen.Framework.Core.Data.Business.Conditions.Condition[])">
            <summary>
            Instantiates a new instance of the AdvancedBusinessConditon class.
            </summary>
            <param name="conditions">The conditions to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.#ctor(System.String,BindOpen.Framework.Core.Data.Business.Conditions.Condition[])">
            <summary>
            Instantiates a new instance of the AdvancedBusinessConditon class.
            </summary>
            <param name="trueValue">The true value to consider.</param>
            <param name="conditions">The conditions to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.AdvancedCondition.Evaluate(BindOpen.Framework.Core.System.Scripting.ScriptInterpreter,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Evaluate this instance.
            </summary>
            <param name="scriptInterpreter">Script interpreter.</param>
            <param name="scriptVariableSet">The script variable set used to evaluate.</param>
            <returns>True if this instance is true.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition">
            <summary>
            This class represents an basic condition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition.Argument1">
            <summary>
            The arugment 1 of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition.Operator">
            <summary>
            The operator of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition.Argument2">
            <summary>
            The arugment 2 of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition.#ctor">
            <summary>
            Instantiates a new instance of the BasicBusinessCondition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BasicBusinessCondition class.
            </summary>
            <param name="trueValue">The value that expresses that the condition is satisfied.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition.#ctor(System.String,BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator,System.String)">
            <summary>
            Instantiates a new instance of the BasicBusinessCondition class.
            </summary>
            <param name="arg1">The argument 1 to consider.</param>
            <param name="ope">The operator to consider.</param>
            <param name="arg2">The argument 2 to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.BasicCondition.#ctor(System.String,System.String,BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator,System.String)">
            <summary>
            Instantiates a new instance of the BasicBusinessCondition class.
            </summary>
            <param name="trueValue">The value that expresses that the condition is satisfied.</param>
            <param name="arg1">The argument 1 to consider.</param>
            <param name="ope">The operator to consider.</param>
            <param name="arg2">The argument 2 to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Conditions.Condition">
            <summary>
            This class represents a condition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Conditions.Condition.TrueValue">
            <summary>
            The value that expresses that the condition is satisfied.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.Condition.#ctor">
            <summary>
            Instantiates a new instance of the BusinessCondition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.Condition.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BusinessCondition class.
            </summary>
            <param name="trueValue">The true value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.Condition.Evaluate(BindOpen.Framework.Core.System.Scripting.ScriptInterpreter,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Evaluate this instance.
            </summary>
            <param name="scriptInterpreter">Script interpreter.</param>
            <param name="scriptVariableSet">The script variable set used to evaluate.</param>
            <returns>True if the business script value is the true value.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator">
            <summary>
            This enumeration lists all the possible operators of conditions.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator.Exist">
            <summary>
            Exist.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator.EqualTo">
            <summary>
            EqualTo.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator.LesserThan">
            <summary>
            LesserThan.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator.GreaterThan">
            <summary>
            GreaterThan.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Conditions.ConditionOperator.DifferentFrom">
            <summary>
            DifferentFrom.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Conditions.ScriptCondition">
            <summary>
            This class represents a script condition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Conditions.ScriptCondition.Expression">
            <summary>
            Expression script representing the condition.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.ScriptCondition.#ctor">
            <summary>
            Instantiates a new instance of the BusinessScriptCondition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.ScriptCondition.#ctor(System.String,BindOpen.Framework.Core.Data.Expression.DataExpression)">
            <summary>
            Instantiates a new instance of the BusinessScriptCondition class.
            </summary>
            <param name="trueValue">The true value to consider.</param>
            <param name="expression">The expression to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.ScriptCondition.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Conditions.ScriptCondition.Evaluate(BindOpen.Framework.Core.System.Scripting.ScriptInterpreter,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Evaluate this instance.
            </summary>
            <param name="scriptInterpreter">Script interpreter.</param>
            <param name="scriptVariableSet">The script variable set used to evaluate.</param>
            <returns>True if the business script value is the true value.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntity">
            <summary>
            This class represents the business entity.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntity.Detail">
            <summary>
            The detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntity.ImageFileName">
            <summary>
            The image file name of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntity.#ctor">
            <summary>
            Instantiates a new instance of the BusinessEntity class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic">
            <summary>
            This enumeration represents the possible basic business entity unique names.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.Picture">
            <summary>
            Picture.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.Video">
            <summary>
            Video.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.News">
            <summary>
            News.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.RssNews">
            <summary>
            RSS News.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.Resource">
            <summary>
            Resource.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.SocialNetwork">
            <summary>
            SocialNetwork.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Business.Entities.BusinessEntityUniqueName_Basic.DataSchema">
            <summary>
            Data schema.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.AccessibilityLevel">
            <summary>
            This enumerates the possible levels of accesibility.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.AccessibilityLevel.None">
            <summary>
            None can access.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.AccessibilityLevel.Inherited">
            <summary>
            Inherited.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.AccessibilityLevel.Public">
            <summary>
            Anyone can access.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.AccessibilityLevel.Private">
            <summary>
            Only authentized people can access.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.AccessibilityLevel.Restricted">
            <summary>
            Only allowed people can access.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.AccessibilityLevel.Payable">
            <summary>
            Only people who bought for it can access.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.AccessibilityLevelExtension">
            <summary>
            This class represents an accessibility level extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.AccessibilityLevelExtension.ToAccessibilityLevel(System.String,System.String)">
            <summary>
            Gets the accessibility level corresponding to the specified string.
            </summary>
            <param name="levelString">The visibility to consider.</param>
            <param name="defaultLevelString">The default visibility to consider.</param>
            <returns>Returns the visibility corresponding to the specified strings.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.DataOperator">
            <summary>
            This enumeration represents the possible data operators.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.ListDeclaration">
            <summary>
            Declaration of list.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.Contains">
            <summary>
            Contains.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.Has">
            <summary>
            Has.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.In">
            <summary>
            In.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.Equal">
            <summary>
            Equal.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.Different">
            <summary>
            Different.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.Lesser">
            <summary>
            Lesser.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.LesserOrEqual">
            <summary>
            Lesser or equal.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.Greater">
            <summary>
            Greater.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataOperator.GreaterOrEqual">
            <summary>
            Greater or equal.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.DataSortingMode">
            <summary>
            This enumeration represents the data sorting modes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataSortingMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataSortingMode.Ascending">
            <summary>
            Ascending.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataSortingMode.Descending">
            <summary>
            Descending.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataSortingMode.Random">
            <summary>
            Random.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.DataValueType">
            <summary>
            This enumeration represents the possible data value types.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Any">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.CarrierConfiguration">
            <summary>
            Data carrier.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.DataSource">
            <summary>
            Data source.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Date">
            <summary>
            Date.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Dictionary">
            <summary>
            Dictionary.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Document">
            <summary>
            Document.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Entity">
            <summary>
            Entity.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Integer">
            <summary>
            Integer.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Long">
            <summary>
            Long.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Number">
            <summary>
            Number value.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Schema">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.SchemaZone">
            <summary>
            Schema zone.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.StringValued">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.DataValueType.Time">
            <summary>
            Time.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.DataValueTypeExtension">
            <summary>
            This class represents an extension of the DataValueType enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Framework.Core.Data.Common.DataValueType)">
            <summary>
            Indicates whether the specified value type corresponds to a scalar.
            </summary>
            <param name="valueType">The object to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.DataValueTypeExtension.IsScalar(System.Object)">
            <summary>
            Indicates whether the specified value type corresponds to a scalar.
            </summary>
            <param name="object1">The object to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Framework.Core.Data.Common.DataValueType)">
            <summary>
            Returns the object type of the specified data value type.
            </summary>
            <param name="dataValueType">The value type to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.DataValueTypeExtension.GetValueType(System.Type)">
            <summary>
            Returns the value type of the specified object.
            </summary>
            <param name="type">The type to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.DataValueTypeExtension.GetValueType(System.Object)">
            <summary>
            Returns the value type of the specified object.
            </summary>
            <param name="object1">The object to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.DataValueTypeExtension.GetValueType(System.Collections.Generic.List{System.Object})">
            <summary>
            Returns the value type of the specified object.
            </summary>
            <param name="objects">The objects to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.InheritanceLevel">
            <summary>
            This enumeration represents the possible levels of inheritance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.InheritanceLevel.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.InheritanceLevel.Heritable">
            <summary>
            Heritable.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.InheritanceLevel.Inherited">
            <summary>
            Inherited.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.PersistenceLevel">
            <summary>
            This enumeration represents the possible persistence levels.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.PersistenceLevel.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.PersistenceLevel.Singleton">
            <summary>
            The information remains alive.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.PersistenceLevel.Scoped">
            <summary>
            The information remains alive until the session ends.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.PersistenceLevel.Transient">
            <summary>
            The information remains alive until the request ends.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.RequirementLevel">
            <summary>
            This enumeration represents the possible levels of requirement.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RequirementLevel.None">
            <summary>
            No special requirement.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RequirementLevel.Forbidden">
            <summary>
            Forbidden.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RequirementLevel.Optional">
            <summary>
            Optional.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RequirementLevel.OptionalExclusively">
            <summary>
            Exclusively optional i.e. if the data item is a group then only it can have value.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RequirementLevel.Required">
            <summary>
            Required.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.RequirementLevelExtension">
            <summary>
            This class represents an extension of the RequirementLevel enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.RequirementLevelExtension.IsPossible(BindOpen.Framework.Core.Data.Common.RequirementLevel)">
            <summary>
            Indicates whether the specified requirement level means that it is possible.
            </summary>
            <param name="requirementLevel">The requirement level to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.ResourceStatus">
            <summary>
            This enumeration lists all the possible statuses of resource.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.ResourceStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.ResourceStatus.Created">
            <summary>
            Created.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.ResourceStatus.Updated">
            <summary>
            Updated.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.ResourceStatus.Patched">
            <summary>
            Patched.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.ResourceStatus.Deleted">
            <summary>
            Deleted.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.RuntimeMode">
            <summary>
            This enumerates the possible modes of runtime.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RuntimeMode.Normal">
            <summary>
            Normal. No exception and error messages are displayed.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RuntimeMode.Debug">
            <summary>
            Debug. Exception and error messages are displayed.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.RuntimeMode.Simulation">
            <summary>
            Simulation. Everything is executed empty.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.SpecificationLevel">
            <summary>
            This enumeration represents the possible levels of specification.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.SpecificationLevel.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.SpecificationLevel.Definition">
            <summary>
            Definition.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.SpecificationLevel.Design">
            <summary>
            Design.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.SpecificationLevel.Configuration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.SpecificationLevel.Runtime">
            <summary>
            Runtime.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.SpecificationLevel.All">
            <summary>
            All the information specification levels.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.SpecificationLevelExtension">
            <summary>
            This class represents an specification level extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.SpecificationLevelExtension.Has(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel},BindOpen.Framework.Core.Data.Common.SpecificationLevel)">
            <summary>
            Indicates whether the specified specification level list contains the specified specification level.
            </summary>
            <param name="specificationLevels">The specified specification level list to consider.</param>
            <param name="specificationLevel">The specified specification level to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.SpecificationLevelExtension.Excluding(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel},BindOpen.Framework.Core.Data.Common.SpecificationLevel[])">
            <summary>
            Gets the specified list excluding the second specified list.
            </summary>
            <param name="specificationLevels">The specification levels to consider.</param>
            <param name="excludingSpecificationLevels">The excluding specification levels to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.SpecificationLevelExtension.Excluding(BindOpen.Framework.Core.Data.Common.SpecificationLevel,BindOpen.Framework.Core.Data.Common.SpecificationLevel[])">
            <summary>
            Gets the specified list excluding the secong specified list.
            </summary>
            <param name="specificationLevel">The specification level to consider.</param>
            <param name="excludingSpecificationLevels">The excluding specification levels to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.UpdateMode">
            <summary>
            This enumeration represents the possible update modes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.UpdateMode.Full">
            <summary>
            Source fully replaces Target.
            </summary>
            <remarks>Used in full update.</remarks>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.UpdateMode.Incremental_AddItemsMissingInTarget">
            <summary>
            Adds Source items that are not in Target.
            </summary>
            <remarks>Used in incremental update.</remarks>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.UpdateMode.Incremental_RemoveItemsMissingInSource">
            <summary>
            Removes Target items that are not in Source.
            </summary>
            <remarks>Used in incremental update.</remarks>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Common.UpdateMode.Incremental_UpdateCommonItems">
            <summary>
            Updates Target items that are in Source.
            </summary>
            <remarks>Used in incremental update.</remarks>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Common.UpdateModeExtension">
            <summary>
            This class represents an update mode extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.UpdateModeExtension.Has(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Data.Common.UpdateMode)">
            <summary>
            Indicates whether the specified update mode list contains the specified update mode.
            </summary>
            <param name="updateModes">The specified update mode list to consider.</param>
            <param name="updateMode">The specified update mode to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.UpdateModeExtension.Excluding(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Data.Common.UpdateMode[])">
            <summary>
            Gets the specified list excluding the second specified list.
            </summary>
            <param name="updateModes">The update modes to consider.</param>
            <param name="excludingUpdateModes">The excluding update modes to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Common.UpdateModeExtension.Excluding(BindOpen.Framework.Core.Data.Common.UpdateMode,BindOpen.Framework.Core.Data.Common.UpdateMode[])">
            <summary>
            Gets the specified list excluding the secong specified list.
            </summary>
            <param name="updateMode">The update mode to consider.</param>
            <param name="excludingUpdateModes">The excluding update modes to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Connections.Connection">
            <summary>
            This class represents a connector.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Connections.Connection.Connector">
            <summary>
            The connector of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.Connection.#ctor">
            <summary>
            Instantiates a new instance of the Connection class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.Connection.#ctor(BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector)">
            <summary>
            Instantiates a new instance of the Connection class.
            </summary>
            <param name="connector">The connector to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.Connection.Dispose">
            <summary>
            Disposes this instance. 
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.Connection.SetConnector(BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector)">
            <summary>
            Sets the connector of this instance.
            </summary>
            <param name="connector">The database connector to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.Connection.Open">
            <summary>
            Opens this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.Connection.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.Connection.IsConnected">
            <summary>
            Indicates whether the instance is connected.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Connections.IConnection">
            <summary>
            This interfaces represents a connection.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.IConnection.Open">
            <summary>
            Opens a connection.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.IConnection.Close">
            <summary>
            Closes the existing connection.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Connections.IConnection.IsConnected">
            <summary>
            Indicates whether the instance is connected.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Context.DataContext">
            <summary>
            This class represents a data context. A data context contains all the data related to a user session.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Context.DataContext.Id">
            <summary>
            ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.#ctor">
            <summary>
            Instantiates a new instance of DataContext class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.InitializeLifetimeService">
            <summary>
            Initializes the life time service.
            </summary>
            <returns>Null to remain the object's life forever.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.Merge(BindOpen.Framework.Core.Data.Context.DataContext)">
            <summary>
            Merges this instance with the specified data context.
            </summary>
            <param name="dataContext">The data context to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.Clear">
            <summary>
            Clears all the data of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.AddItem(System.String,System.Object,System.String,BindOpen.Framework.Core.Data.Common.PersistenceLevel)">
            <summary>
            Adds a new item to this instance.
            </summary>
            <param name="name">Name of the item to add.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
            <param name="item">Item to add.</param>
            <param name="persistenceLevel">Persistence level of the item to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.AddSystemItem(System.String,System.Object)">
            <summary>
            Adds a new system item to this instance.
            </summary>
            <param name="name">Name of the item to add.</param>
            <param name="item">The item to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.AddSingletonItem(System.String,System.Object,System.String)">
            <summary>
            Adds a new singleton item to this instance.
            </summary>
            <param name="name">Name of the item to add.</param>
            <param name="item">The item to consider.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.AddScopedItem(System.String,System.Object,System.String)">
            <summary>
            Adds a new scoped item to this instance.
            </summary>
            <param name="name">Name of the item to add.</param>
            <param name="item">The item to consider.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.AddTransientItem(System.String,System.Object,System.String)">
            <summary>
            Adds a new transient item to this instance.
            </summary>
            <param name="name">Name of the item to add.</param>
            <param name="item">The item to consider.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.ClearItems(BindOpen.Framework.Core.Data.Common.PersistenceLevel)">
            <summary>
            Clears the specified items of this instance.
            </summary>
            <param name="persistenceLevel">Persistence level of the item to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.RemoveItems(System.String,BindOpen.Framework.Core.Data.Common.PersistenceLevel)">
            <summary>
            Removes the singleton items of a specific type.
            </summary>
            <param name="contextSectionName">Name of the context section to consider.</param>
            <param name="persistenceLevel">The persistence level to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.GetSystemItem(System.String)">
            <summary>
            Returns a specific system item.
            </summary>
            <param name="name">Name of the dynamic item to return.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.GetSingletonItem(System.String,System.String)">
            <summary>
            Returns a specific singleton item.
            </summary>
            <param name="name">Name of the dynamic item to return.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.GetScopedItem(System.String,System.String)">
            <summary>
            Returns a specific scoped item.
            </summary>
            <param name="name">Name of the dynamic item to return.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.GetTransientItem(System.String,System.String)">
            <summary>
            Returns a specific transient item.
            </summary>
            <param name="name">Name of the dynamic item to return.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.GetItem(System.String,System.String,BindOpen.Framework.Core.Data.Common.PersistenceLevel)">
            <summary>
            Returns a specific item.
            </summary>
            <param name="name">Name of the dynamic item to return.</param>
            <param name="contextSectionName">Name of the context section to consider.</param>
            <param name="persistenceLevel">The persistence level to consider.</param>
            <returns>The dynamic item with specified name and type.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.Save(System.String)">
            <summary>
            Saves this instance to a file.
            </summary>
            <param name="filePath">Path of the file to save.</param>
            <returns>true if the file has been well saved. false otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Context.DataContext.Load(System.String,BindOpen.Framework.Core.System.Diagnostics.Log@)">
            <summary>
            Loads a data context from file.
            </summary>
            <param name="filePath">The path of the file to load.</param>
            <param name="log">The log that receives the log of this loading task.</param>
            <returns>Returns the data context loaded from the specified file.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Dto.IDescribed">
            <summary>
            This interface represents a described DTO.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Dto.IDescribed.Description">
            <summary>
            The description of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Dto.IDisplayNamed">
            <summary>
            This interface represents a display named DTO.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Dto.IDisplayNamed.DisplayName">
            <summary>
            The display name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Dto.IUnique">
            <summary>
            This interface represents an unique DTO.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Dto.IUnique.UniqueId">
            <summary>
            Unique name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement">
            <summary>
            This class represents a carrier element.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.DefinitionUniqueName">
            <summary>
            The definition name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.Specification">
            <summary>
            The specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.#ctor">
            <summary>
            Initializes a new carrier element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.#ctor(System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification,BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration[])">
            <summary>
            Initializes a new carrier element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="id">The ID to consider.</param>
            <param name="aCarrierUniqueName ">The carrier unique name to consider.</param>
            <param name="aSpecification">The specification to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.#ctor(System.String,System.String,BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration[])">
            <summary>
            Initializes a new carrier element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="aCarrierUniqueName ">The carrier unique name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.#ctor(System.String,BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration[])">
            <summary>
            Initializes a new carrier element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.#ctor(BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration[])">
            <summary>
            Initializes a new carrier element.
            </summary>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.SetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Sets the specified single item of this instance.
            </summary>
            <param name="item">The item to apply to this instance.</param>
            <param name="appScope">The application scope to consider.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.GetStringFromObject(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="log">The log to populate.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.GetObjectFromString(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the object value from a based on this instance's specification.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification">
            <summary>
            This class represents a carrier element specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.DefinitionFilter">
            <summary>
            The class filter of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.DefinitionFilterSpecified">
            <summary>
            Specification of the DefinitionFilter property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.#ctor">
            <summary>
            Initializes a new carrier element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new carrier element specification.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.DataElement">
            <summary>
            This class represents a data element.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemizationMode">
            <summary>
            The itemization mode of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemizationModeSpecified">
            <summary>
            Specification of the ItemizationMode property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemReference">
            <summary>
            Item reference of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemReferenceSpecified">
            <summary>
            Specification of the ItemReference property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemScript">
            <summary>
            The script of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemScriptSpecified">
            <summary>
            Specification of the ItemScript property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.Items">
            <summary>
            Items of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.FirstItem">
            <summary>
            Items of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemXElement">
            <summary>
            The item Xml element object of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.ItemXElementSpecified">
            <summary>
            Specification of the ItemXElement property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.Specification">
            <summary>
            Specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.SpecificationSpecified">
            <summary>
            Specification of the Specification property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.Item(System.Int32)">
            <summary>
            Returns the element with the specified indexed.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.Item(System.String)">
            <summary>
            Returns the element with the specified unique name.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.PropertyDetail">
            <summary>
            Property detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.PropertyDetailSpecified">
            <summary>
            Specification of the PropertyDetail property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.EventKind">
            <summary>
            The event kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElement.EventKindSpecified">
            <summary>
            Specification of the EventKind property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.#ctor">
            <summary>
            Initializes a new data element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new data element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Create(System.Collections.Generic.List{System.Object},BindOpen.Framework.Core.Data.Common.DataValueType,System.String)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param name="objects">The objets to consider.</param>
            <param name="dataValueType">The data value type to consider.</param>
            <param name="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Create(System.Object,BindOpen.Framework.Core.Data.Common.DataValueType,System.String)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param name="object1">The objet to consider.</param>
            <param name="dataValueType">The data value type to consider.</param>
            <param name="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Create(BindOpen.Framework.Core.Data.Common.DataValueType,System.String)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param name="valueType">The value type to consider.</param>
            <param name="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Create(System.Type,System.String)">
            <summary>
            Creates a data element of the specified kind.
            </summary>
            <param name="type">The value type to consider.</param>
            <param name="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.NewSpecification">
            <summary>
            Creates a new specification of this instance.
            </summary>
            <returns>Returns True .</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.IsCompatibleWith(BindOpen.Framework.Core.Data.Elements.DataElementSpecification)">
            <summary>
            Indicates whether this instance is compatible with the specified element.
            </summary>
            <param name="specification">The data element specification to consider.</param>
            <returns>True if this instance is compatible with the specified data elements.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.ClearItems">
            <summary>
            Clears items of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.SetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Sets the specified single item of this instance.
            </summary>
            <param name="item">The item to apply to this instance.</param>
            <param name="appScope">The application scope to consider.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.SetItems(System.Collections.Generic.List{System.Object})">
            <summary>
            Sets the specified single item of this instance.
            </summary>
            <param name="items">The items to apply to this instance.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.AddItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Adds a new single item of this instance.
            </summary>
            <param name="item">The string item of this instance.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
            <returns>Returns True if the specified has been well added.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.AddItems(System.Collections.Generic.List{System.Object},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Adds items to this instance.
            </summary>
            <param name="items">The items of this instance.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)">
            <summary>
            Switches the single value value1 with the single value value2.
            </summary>
            <param name="value1">The first single value to switch.</param>
            <param name="value2">The second single value to switch.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)">
            <summary>
            Updates the value value1 with the value value2.
            </summary>
            <param name="aItem">The item to consider.</param>
            <param name="aNewItem">The new item.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.RemoveItem(System.Object)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="aItem">The item </param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.GetDefaultControlType">
            <summary>
            Gets the default control type of this instance.
            </summary>
            <returns>Returns the default control type of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.GetItems(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets the items of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.GetItemObject(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets the item object of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the item object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.CheckItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="aItem">The item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.GetStringFromObject(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="log">The log to populate.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.GetObjectFromString(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the object value from a based on this instance's specification.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Checks this instance.
            </summary>
            <param name="isExistenceChecked">Indicates whether the carrier existence is checked.</param>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Repair``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.Clone(System.Collections.Generic.List{System.String})">
            <summary>
            Clones this instance.
            </summary>
            <param name="elementSpecificationAreas">The data element areas to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElement.GetTextNode(System.String,System.String)">
            <summary>
            Gets a text node representing this instance.
            </summary>
            <param name="nodeName">Name of the tex node.</param>
            <param name="indent">Tabulation indent to include in the text.</param>
            <returns>Returns the text node.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.DataElementAreaKind">
            <summary>
            This enumeration lists the possible kinds of data areas.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Elements.DataElementAreaKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Elements.DataElementAreaKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Elements.DataElementAreaKind.Element">
            <summary>
            Element attributes.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.DataElementSpecification">
            <summary>
            This class represents a data element specification.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.__Arenames">
            <summary>
            Names of the attribute areas of the DataElementSpecification class.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.GroupId">
            <summary>
            ID of the group of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.GroupIdSpecified">
            <summary>
            Specification of the GroupId property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.Aliases">
            <summary>
            The aliases of the entry.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.AliasesSpecified">
            <summary>
            Specification of the Aliases property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.AreaSpecifications">
            <summary>
            The area specifications of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.AreaSpecificationsSpecified">
            <summary>
            Specification of the AreaSpecifications property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.IsAllocatable">
            <summary>
            Indicates whether the instance can be allocated.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.IsAllocatableSpecified">
            <summary>
            Specification of the IsAllocatable property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.AvailableItemizationModes">
            <summary>
            The available itemization modes of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.AvailableItemizationModesSpecified">
            <summary>
            Specification of the AvailableItemizationModes property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.DefaultStringItems">
            <summary>
            Default string items of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.DefaultStringItemsSpecified">
            <summary>
            Specification of the DefaultStringItems property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.DefaultItems">
            <summary>
            Default items of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.MinimumItemNumber">
            <summary>
            Minimum item number of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.MaximumItemNumber">
            <summary>
            Maximum item number of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.IsValueList">
            <summary>
            Indicates whether the value of this instance is a list.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.ItemRequirementLevel">
            <summary>
            The item requirement level of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.ItemSpecificationLevels">
            <summary>
            Levels of specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.ItemSpecificationLevelsSpecified">
            <summary>
            Specification of the SpecificationLevels property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.ConstraintStatement">
            <summary>
            Constraint statement of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.ConstraintStatementSpecified">
            <summary>
            Specification of the ConstraintStatement property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.DetailSpecification">
            <summary>
            Detail specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.DetailSpecificationSpecified">
            <summary>
            Specification of the DetailSpecification property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.DesignStatement">
            <summary>
            Design statement of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.DesignStatementSpecified">
            <summary>
            Specification of the DesignStatement property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.#ctor">
            <summary>
            Initializes a new instance of the DataElementSpecification class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new instance of the DataElementSpecification class.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.AddDefaultItem(System.Object)">
            <summary>
            Adds the specified default item of this instance.
            </summary>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
            <param name="aItem">The default item of this instance.</param>
            <returns>Returns True if the default item has well been Added.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.SetDefaultItem(System.Object)">
            <summary>
            Sets the specified default item of this instance.
            </summary>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
            <param name="aItem">The default item of this instance.</param>
            <returns>Returns True if the default item has well been set.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.SetDefaultItem(System.Collections.Generic.List{System.Object})">
            <summary>
            Sets the specified default items of this instance.
            </summary>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
            <param name="defaultItems">The default items of this instance.</param>
            <returns>Returns True if the default items has well been set.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.NewElement(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Creates a new data element respecting this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="detail">The detail to consider.</param>
            <returns>Returns a new data element respecting this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.GetAreaSpecification(System.String)">
            <summary>
            Gets the area specification with the specified area name.
            </summary>
            <param name="areaName">The data specification to consider.</param>
            <returns>Returns the area specification.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.Repair``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.DataElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement">
            <summary>
            This class represents a document element that is an element whose items are documents.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.ContainerElement">
            <summary>
            The container of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.ContentElement">
            <summary>
            The content of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.Specification">
            <summary>
            Specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.#ctor">
            <summary>
            Initializes a new instance of the DocumentElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.#ctor(System.String,BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement,BindOpen.Framework.Core.Data.Elements.Entity.EntityElement)">
            <summary>
            Initializes a new instance of the DocumentElement class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="aContainerElement">The container element to consider.</param>
            <param name="aContentElement">The content element to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.#ctor(BindOpen.Framework.Core.Data.Elements.Carrier.CarrierElement,BindOpen.Framework.Core.Data.Elements.Entity.EntityElement)">
            <summary>
            Initializes a new instance of the DocumentElement class.
            </summary>
            <param name="aContainerElement">The container element to consider.</param>
            <param name="aContentElement">The content element to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.#ctor(System.String,BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration,BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration)">
            <summary>
            Initializes a new instance of the DocumentElement class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="aContainerItem">The container item to consider.</param>
            <param name="aContentItem">The content item to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.#ctor(BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration,BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration)">
            <summary>
            Initializes a new instance of the DocumentElement class.
            </summary>
            <param name="aContainerItem">The container item to consider.</param>
            <param name="aContentItem">The content item to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The scalar item or the entity name to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Document.DocumentElementSpecification">
            <summary>
            This class represents a document element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElementSpecification.#ctor">
            <summary>
            Initializes a new document element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new document element specification.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Document.DocumentElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement">
            <summary>
            This class represents a entity element that is an element whose items are entities.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.EntityUniqueName">
            <summary>
            The entity unique name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.Specification">
            <summary>
            The specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.#ctor">
            <summary>
            Initializes a new entity element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.#ctor(System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification,BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="id">The ID to consider.</param>
            <param name="entityUniqueName">The entity unique name to consider.</param>
            <param name="aSpecification">The specification to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.#ctor(System.String,System.String,BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="entityUniqueName">The entity unique name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.#ctor(System.String,BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.#ctor(BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.SetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Sets the specified single item of this instance.
            </summary>
            <param name="item">The item to apply to this instance.</param>
            <param name="appScope">The application scope to consider.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.GetStringFromObject(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="log">The log to populate.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.GetObjectFromString(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the object value from a based on this instance's specification.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification">
            <summary>
            This class represents an entity element specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.EntityFilter">
            <summary>
            The entity filter of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.ClassFilterSpecified">
            <summary>
            Specification of the ClassFilter property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.#ctor">
            <summary>
            Initializes a new entity element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new entity element specification.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.NewElement(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Creates a new data element respecting this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="detail">The detail to consider.</param>
            <returns>Returns a new data element respecting this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Entity.EntityElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement">
            <summary>
            This class represents a meta data element that is a data element whose items are data elements.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.#ctor">
            <summary>
            Initializes a new meta data element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new meta data element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.GetStringFromObject(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="log">The log to populate.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Complex.MetaDataElement.GetObjectFromString(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the object value from a based on this instance's specification.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>The result object.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement">
            <summary>
            This class represents a entity element that is an element whose items are entities.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.ClassFullName">
            <summary>
            The class full name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.Specification">
            <summary>
            The specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.#ctor">
            <summary>
            Initializes a new entity element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.#ctor(System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification,BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="id">The ID to consider.</param>
            <param name="classFullName">The class full name to consider.</param>
            <param name="aSpecification">The specification to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.#ctor(System.String,System.String,BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="classFullName">The entity unique name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.#ctor(System.String,BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.#ctor(BindOpen.Framework.Core.Data.Items.DataItem[])">
            <summary>
            Initializes a new data entity element.
            </summary>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.AddItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Adds a new single item of this instance.
            </summary>
            <param name="item">The string item of this instance.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
            <returns>Returns True if the specified has been well added.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.SetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Sets the specified single item of this instance.
            </summary>
            <param name="item">The item to apply to this instance.</param>
            <param name="appScope">The application scope to consider.</param>
            <remarks>Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.GetStringFromObject(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="log">The log to populate.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.GetObjectFromString(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the object value from a based on this instance's specification.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification">
            <summary>
            This class represents an object element specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.ClassFilter">
            <summary>
            The class filter of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.ClassFilterSpecified">
            <summary>
            Specification of the ClassFilter property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.#ctor">
            <summary>
            Initializes a new object element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new object element specification.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.NewElement(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Creates a new data element respecting this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="detail">The detail to consider.</param>
            <returns>Returns a new data element respecting this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements._Object.ObjectElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement">
            <summary>
            This class represents a scalar element that is an element whose items are scalars.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.Value">
            <summary>
            The value of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.ValueSpecified">
            <summary>
            Specification of the Value property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.ValueTypeSpecified">
            <summary>
            Specification of the ValueType property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.Specification">
            <summary>
            The specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.#ctor">
            <summary>
            Initializes a new scalar element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.#ctor(BindOpen.Framework.Core.Data.Common.DataValueType)">
            <summary>
            Initializes a new scalar element.
            </summary>
            <param name="dataValueType">The value type to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.#ctor(System.String)">
            <summary>
            Initializes a new scalar element.
            </summary>
            <param name="name">The name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.#ctor(BindOpen.Framework.Core.Data.Common.DataValueType,System.Object[])">
            <summary>
            Initializes a new scalar element.
            </summary>
            <param name="valueType">The value type to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.#ctor(System.String,BindOpen.Framework.Core.Data.Common.DataValueType,System.Object[])">
            <summary>
            Initializes a new scalar element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="valueType">The value type to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.#ctor(System.String,System.String,BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification,System.Object[])">
            <summary>
            Initializes a new scalar element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="id">The ID to consider.</param>
            <param name="valueType">The value type to consider.</param>
            <param name="specification">The specification to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The item to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.GetStringFromObject(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="log">The log to populate.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.GetObjectFromString(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the object value from a based on this instance's specification.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification">
            <summary>
            This class represents a scalar element specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.ValueTypeSpecified">
            <summary>
            Specification of the ValueType property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.#ctor">
            <summary>
            Initializes a new instance of the ScalarElementSpecification class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new instance of the ScalarElementSpecification class.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.#ctor(System.String,BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new instance of the ScalarElementSpecification class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="dataValueType">The value type to consider.</param>
            <param name="elementRequirementLevel">The element requirement level to consider.</param>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.#ctor(System.String,System.Type,BindOpen.Framework.Core.Data.Common.RequirementLevel,BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new instance of the ScalarElementSpecification class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="type">The type to consider.</param>
            <param name="elementRequirementLevel">The element requirement level to consider.</param>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.NewElement(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Creates a new data element respecting this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="detail">The detail to consider.</param>
            <returns>Returns a new data element respecting this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Scalar.ScalarElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement">
            <summary>
            This class represents a schema element.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.ParentZone">
            <summary>
            The parent zone of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.ImageFileName">
            <summary>
            The image file name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.BusinessEntityUniqueName">
            <summary>
            The business entity unique name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.BusinessEntity">
            <summary>
            The business entity of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.Specification">
            <summary>
            The specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.#ctor">
            <summary>
            Initializes a new schema element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the SchemaElement class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.IsDescendantOf(BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Indicates whether this instance is a descendant of the specified parent schema element zone.
            </summary>
            <param name="parentZoneElement">The parent schema element zone to consider.</param>
            <returns>True if this instance is a descendant of the specified parent schema element.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.DeleteElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement)">
            <summary>
            Deletes the specified schema element.
            </summary>
            <param name="aElement">The schema element to consider.</param>
            <returns>True if the operation has succeded ; false otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement})">
            <summary>
            Deletes the specified schema elements.
            </summary>
            <param name="elements">The schema elements to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.DuplicateElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement,BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Duplicates the specified schema element to the specified parent schema element.
            </summary>
            <param name="aElement">The schema element to consider.</param>
            <param name="aSchemaZoneElement">The parent schema element zone to consider.</param>
            <returns>The duplicated schema element.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.DuplicateElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement})">
            <summary>
            Duplicates the specified schema element to the specified parents schema element.
            </summary>
            <param name="aElement">The schema element to consider.</param>
            <param name="parentElements">The parents schema element to consider.</param>
            <returns>The duplicated schema element.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.DuplicateElements(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement},BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Duplicates the specified schema elements to the specified parent schema element.
            </summary>
            <param name="elements">The schema elements to consider.</param>
            <param name="parentZoneElement">The parent schema element zone object to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.MoveElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement,BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Moves the specified schema element to the specified parent schema element.
            </summary>
            <param name="aElement">The schema element to consider.</param>
            <param name="parentZoneElement">The parent schema element zone to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement},BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Moves the specified schema elements to the specified parent schema element.
            </summary>
            <param name="elements">The schema elements to consider.</param>
            <param name="parentZoneElement">The parent schema element zone to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Add a new schema element zone to the specified parent schema element zone.
            </summary>
            <param name="parentZoneElement">The parent schema element zone to consider.</param>
            <returns>The created schema element zone.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.CreateElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Add a new object to the specified parent schema element zone.
            </summary>
            <param name="parentZoneElement">The parent schema element zone to consider.</param>
            <returns>The created schema element.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.AddElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement,BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement)">
            <summary>
            Add a new schema element zone to the specified parent schema element zone.
            </summary>
            <param name="parentZoneElement">The parent schema element zone to consider.</param>
            <param name="aElement">The schema element to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.ApplyVisibility(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Boolean)">
            <summary>
            Apply the specified visibility to this instance.
            </summary>
            <param name="accessibilityLevel">The visibility to apply.</param>
            <param name="isRecursive">Indicates whether the protection is applied to sub schema elements.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.Lock(System.Boolean)">
            <summary>
            Locks this instance.
            </summary>
            <param name="isRecursive">Indicates whether the protection is applied to sub objects.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.Unlock(System.Boolean)">
            <summary>
            Unlocks this instance.
            </summary>
            <param name="isRecursive">Indicates whether the protection is applied to sub objects.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.Clone(BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Clones this instance.
            </summary>
            <param name="parentZoneElement">The parent schema element zone to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="E:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.PropertyChanged">
            <summary>
            The event corresponding to a property that has changed.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement.RaizePropertyChanged(System.String)">
            <summary>
            Occures when a property changes.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification">
            <summary>
            This class represents a schema element specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.SchemuniqueNameFilter">
            <summary>
            The entity unique name filter of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.SchemaRequirementLevel">
            <summary>
            Schema requirement level of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.SchemaSpecificationLevels">
            <summary>
            The specification levels for entity specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.FormatUniqueNameFilter">
            <summary>
            The format unique name filter of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.FormatRequirementLevel">
            <summary>
            Format requirement level of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.FormatSpecificationLevels">
            <summary>
            The specification levels for format specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.#ctor">
            <summary>
            Initializes a new schema element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new schema element specification.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.NewElement(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Creates a new data element respecting this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="detail">The detail to consider.</param>
            <returns>Returns a new data element respecting this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement">
            <summary>
            This class represents a schema zone element.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements">
            <summary>
            The serialized schema elements of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.SubElements">
            <summary>
            The sub elements of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.#ctor">
            <summary>
            Initializes a new instance of the SchemaZoneElement class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the SchemaZoneElement class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.BuildTree">
            <summary>
            Builds the tree of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.AddSubElement(BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement)">
            <summary>
            Adds the specified sub schema element.
            </summary>
            <returns>Returns the added sub schema element.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.GetElementWithId(System.String,BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement)">
            <summary>
            Gets the schema element with the specified ID.
            </summary>
            <param name="id">The ID of the schema element to consider.</param>
            <param name="parentSchemaElement">The parent schema element to consider.</param>
            <returns>The bschema element with the specified ID.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement.Clone(BindOpen.Framework.Core.Data.Elements.Schema.SchemaZoneElement)">
            <summary>
            Clones this instance.
            </summary>
            <param name="parentZoneElement">The parent schema element group to consider.</param>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet">
            <summary>
            This class represents a data element set.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Elements">
            <summary>
            Elements of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.ElementsSpecified">
            <summary>
            Specification of the Elements property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Item(System.String)">
            <summary>
            Returns the element with the specified key.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.#ctor">
            <summary>
            Instantiates a new instance of the DataElementSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.#ctor(BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem,BindOpen.Framework.Core.Data.Elements.DataElement[])">
            <summary>
            Instantiates a new instance of the DataElementSet class.
            </summary>
            <param name="description">The description to consider.</param>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.#ctor(BindOpen.Framework.Core.Data.Elements.DataElement[])">
            <summary>
            Instantiates a new instance of the DataElementSet class.
            </summary>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.AddElement(BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Adds a new element.
            </summary>
            <param name="dataElement">The new element to add.</param>
            <param name="referenceElementSet">The reference set of elements to consider.</param>
            <returns>Returns the new element that has been added. Returns null if the element has not been added.</returns>
            <remarks>The new element must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.AddElement(System.String,System.Object,BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="elementUniqueName">The key of the element to add.</param>
            <param name="item">The item of the element to add.</param>
            <param name="valueType">The value type of the element to add.</param>
            <param name="referenceElementSet">The reference set of elements to consider.</param>
            <returns>Returns the new element that has been added.
            Returns null if the new element is null or else its name is null.</returns>
            <remarks>The new element must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.AddElement(System.String,System.Collections.Generic.List{System.Object},BindOpen.Framework.Core.Data.Common.DataValueType,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="elementUniqueName">The key of the element to add.</param>
            <param name="items">The items of the element to add.</param>
            <param name="valueType">The value type of the element to add.</param>
            <param name="referenceElementSet">The reference set of elements to consider.</param>
            <returns>Returns the new element that has been added.
            Returns null if the new element is null or else its name is null.</returns>
            <remarks>The new element must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.RemoveElement(System.String)">
            <summary>
            Removes the element with the specified name.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.AddElementItem(System.String,System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the item of this instance.
            </summary>
            <param name="elementName">The element name to consider.</param>
            <param name="item">The item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Indicates whether the item has been set.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.AddElementItems(System.String,System.Collections.Generic.List{System.Object},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the items of this instance.
            </summary>
            <param name="elementName">The element name to consider.</param>
            <param name="items">The items to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Create(System.String[][])">
            <summary>
            Instantiates a new instance of the DataElementSet class.
            </summary>
            <param name="detail">The detail table.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Create(System.String)">
            <summary>
            Creates a new instance of the DataElementSet class.
            </summary>
            <param name="stringObject">The string to consider.</param>
            <returns>The collection.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Create(System.Dynamic.DynamicObject)">
            <summary>
            Creates a data element set from a dynamic object.
            </summary>
            <param name="dynamicObject">The objet to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Create``1(System.Object)">
            <summary>
            Creates a data element set from a dynamic object.
            </summary>
            <param name="aObject">The objet to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.HasItem(System.String)">
            <summary>
            Checks if this instance has an element with the specified key.
            </summary>
            <param name="key">The key of the element to check.</param>
            <returns>Returns true if the instance has an element with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetItem(System.String)">
            <summary>
            Returns the item with the specified key.
            </summary>
            <param name="key">The key of the element to return.</param>
            <returns>Returns the element with the specified key.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetCommonItemKeys(BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Gets the common keys with the specified set of elements.
            </summary>
            <param name="dataElementSet">The collection to consider.</param>
            <returns>The names of the common object elements with the specified set of elements.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetItemsWithGroupId(System.String)">
            <summary>
            Gets the items with the specified group ID.
            </summary>
            <param name="groupId">The ID of the item group.</param>
            <returns>Returns items with the specified group ID.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetItem(System.String,System.String)">
            <summary>
            Returns the item with the specified name and group ID.
            </summary>
            <param name="key">The key of the item to return.</param>
            <param name="groupId">The ID of the group of the item to return.</param>
            <returns>Returns the item with the specified name and group ID.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetGroupIds">
            <summary>
            Gets all the element groups IDs.
            </summary>
            <returns>Returns all the element group IDs.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetElementItem(System.String,System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the item of this instance.
            </summary>
            <param name="elementName">The element name to consider.</param>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetElementItems(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the items of this instance.
            </summary>
            <param name="elementName">The element name to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetElementItemObject(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the element item object of the specified element of this instance.
            </summary>
            <param name="elementName">The element name to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetElementItemObjects(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the item objects of all the elements of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetAvailableIndexes(System.Int32)">
            <summary>
            Gets the available indexes.
            </summary>
            <param name="maxIndex">The maximum index to consider.</param>
            <returns>Returns the avaible indexes.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetTitleLabel(System.String,System.String,System.String,System.String[])">
            <summary>
            Gets the specified title.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
            <param name="parameters">The parameters to consider.</param>
            <returns>Returns the specified label.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetDescriptionLabel(System.String,System.String,System.String,System.String[])">
            <summary>
            Gets the specified description.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
            <param name="parameters">The parameters to consider.</param>
            <returns>Returns the specified label.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.GetTextNode(System.String,System.String)">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <param name="nodeName">Name of the text node.</param>
            <param name="indent">Tabulation indent to include in the text.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Sort(System.String)">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <param name="groupId">ID of the group to consider. Null if all.</param>
            <returns>Returns the sorted list of data elements.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet">
            <summary>
            This class represents a set of data element specifications.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet.Items">
            <summary>
            Specifications of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet.SpecificationsSpecified">
            <summary>
            Specification of the Specifications property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet.#ctor">
            <summary>
            Initializes a new set of data specifications.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet.#ctor(BindOpen.Framework.Core.Data.Elements.DataElementSpecification[])">
            <summary>
            Instantiates a new instance of the DataElementSpecificationSet class.
            </summary>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet.GetItem(System.String)">
            <summary>
            Returns the item with the specified name.
            </summary>
            <param name="name">The name of the item to return.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet.NewElementSet">
            <summary>
            Creates a new element set from this instance.
            </summary>
            <returns>Returns the element set.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Source.SourceElement">
            <summary>
            This class represents a data source element.
            </summary>
            <remarks>A data source element can only have one item maximum.</remarks>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.Specification">
            <summary>
            The specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.#ctor">
            <summary>
            Initializes a new data source element.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.#ctor(System.String,BindOpen.Framework.Core.Data.Items.Source.DataSource)">
            <summary>
            Initializes a new data source element.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="dataSource">The data source to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.CreateSpecification">
            <summary>
            Gets a new specification.
            </summary>
            <returns>Returns the new specifcation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.NewItem(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets a new item of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns a new object of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.GetItem(System.Object,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the specified item of this instance.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <returns>Returns the specified item of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.HasItem(System.Object,System.Boolean)">
            <summary>
            Indicates whether this instance contains the specified scalar item or the specified entity name.
            </summary>
            <param name="indexItem">The index item to consider.</param>
            <param name="isCaseSensitive">Indicates whether the verification is case sensitive.</param>
            <returns>Returns true if this instance contains the specified scalar item or the specified entity name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.ToString">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.GetStringFromObject(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="log">The log to populate.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.GetObjectFromString(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Returns the object value from a based on this instance's specification.
            </summary>
            <param name="stringValue">The string value to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to populate.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification">
            <summary>
            This class represents a data source element specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.DataSourceKind">
            <summary>
            The data source kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.ConnectorFilter">
            <summary>
            The connector filter of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.ConnectorFilterSpecified">
            <summary>
            Specification of the ClassFilter property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.#ctor">
            <summary>
            Initializes a new data source element specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new data source element specification.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.CheckElement(BindOpen.Framework.Core.Data.Elements.DataElement,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check the specified item.
            </summary>
            <param name="dataElement">The element to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.NewElement(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Creates a new data element respecting this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="detail">The detail to consider.</param>
            <returns>Returns a new data element respecting this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Elements.Source.SourceElementSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Expression.DataExpression">
            <summary>
            This class represents a data expression that can contain a literal and script texts.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Expression.DataExpression.Text">
            <summary>
            The text of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Expression.DataExpression.Kind">
            <summary>
            The kind of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Expression.DataExpression.#ctor">
            <summary>
            Instantiates a new instance of DataExpression class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Expression.DataExpression.#ctor(System.String,BindOpen.Framework.Core.Data.Expression.DataExpressionKind)">
            <summary>
            Instantiates a new instance of DataExpression class.
            </summary>
            <param name="text">The text to consider.</param>
            <param name="kind">The data expresion kind to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Expression.DataExpression.CreateScript(System.String)">
            <summary>
            Creates a new script expression.
            </summary>
            <param name="text">The script text to consider.</param>
            <returns>Returns the script expression.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Expression.DataExpression.CreateLiteral(System.String)">
            <summary>
            Creates a new literal expression.
            </summary>
            <param name="text">The literal text to consider.</param>
            <returns>Returns the script expression.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Expression.DataExpressionKind">
            <summary>
            This enumeration represents the possible kinds for data expression.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Expression.DataExpressionKind.Literal">
            <summary>
            Literal expression is considered as default. A literal mode can then be applied.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Expression.DataExpressionKind.Script">
            <summary>
            Script expression is considered as default.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Expression.DataExpressionKind.Auto">
            <summary>
            Literal expression that can be script if it begins by "=".
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper">
            <summary>
            This class represents a helper for objects.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)">
            <summary>
            Returns the key representing the specified object i.e. in lower case and empty if null.
            </summary>
            <param name="object1">The object to consider.</param>
            <returns>Returns the key representing the specified object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)">
            <summary>
            Indicates whether the key representing the specified object i.e. in lower case and empty if null.
            </summary>
            <param name="object1">The object to consider.</param>
            <param name="object2">The object to compare with.</param>
            <returns>Returns True if the keys of the considered objects equal.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)">
            <summary>
            Returns the string representation of the specified object.
            </summary>
            <param name="object1">The object to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.GetString(System.Object,BindOpen.Framework.Core.Data.Common.DataValueType)">
            <summary>
            Returns the string value from an object based on this instance's specification.
            </summary>
            <param name="object1">The object value to convert.</param>
            <param name="valueType">The value type to consider.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.GetStringAtIndex(System.Object[],System.Int32)">
            <summary>
            Gets the string at the specified index from the specified index.
            </summary>
            <param name="objects">The objects to consider.</param>
            <param name="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.GetObjectAtIndex(System.Object[],System.Int32)">
            <summary>
            Gets the object at the specified index from the specified index.
            </summary>
            <param name="objects">The objects to consider.</param>
            <param name="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)">
            <summary>
            Gets the result of the serialization of the specified object.
            </summary>
            <param name="object1">The object to serialize.</param>
            <param name="updateObject">The update object to consider.</param>
            <returns>The Xml string serializing the specified object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Gets the result of the serialization of the specified object.
            </summary>
            <param name="object1">The object to serialize.</param>
            <param name="elementSet">The element set to consider.</param>
            <typeparam name="T">The data element attribute to consider.</typeparam>
            <returns>The Xml string serializing the specified object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,System.Object)">
            <summary>
            Gets the result of the serialization of the specified object.
            </summary>
            <param name="elementSet">The element set to consider.</param>
            <param name="object1">The object to serialize.</param>
            <typeparam name="T">The data element attribute to consider.</typeparam>
            <returns>The Xml string serializing the specified object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.GetObjectAtIndex(System.Collections.Generic.List{System.Object},System.Int32)">
            <summary>
            Gets the object at the specified index from the specified index.
            </summary>
            <param name="objects">The objects to consider.</param>
            <param name="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})">
            <summary>
            Using the specified item executing the specified action.
            </summary>
            <typeparam name="T">A type deriving from data item.</typeparam>
            <param name="item">The item to use.</param>
            <param name="action">The action to execute.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper">
            <summary>
            This class represents a helper for object notation.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper.CloneDataRow(System.Data.DataRow,System.Data.DataTable)">
            <summary>
            Clones the specified data row into the specified data table.
            </summary>
            <param name="dataRow">The data row to clone.</param>
            <param name="dataTable">The data table that receives the cloned datatable.</param>
            <returns>The cloned data row.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Json">
            <summary>
            This class represents a helper for object notation.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)">
            <summary>
            Gets the result of the serialization of the specified object.
            </summary>
            <param name="object1">The object to serialize.</param>
            <param name="objectName">The name of the output tag to use.</param>
            <returns>The Json string serializing the specified object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Data.DataTable,System.Boolean)">
            <summary>
            Gets the result of the serialization of the specified data table.
            </summary>
            <param name="dataTable">The data table to serialize.</param>
            <param name="isFiltered">Indicates whether only relevant information is put in the xml string.</param>
            <returns>The Json string serializing the specified data table.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Json.FromJson(System.Data.DataSet,System.String,System.String,System.Boolean)">
            <summary>
            Updates table of the specified data set from JSON string.
            </summary>
            <param name="jsonString">The xml string.</param>
            <param name="dataSet">The data set to update.</param>
            <param name="tableName">The name of the output data table.</param>
            <param name="isAppend">Indicates whether the update consists in inserting a new row.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Json.FromJson(System.Data.DataSet,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Updates table of the specified data set from JSON string.
            </summary>
            <param name="dataSet">The data set to update.</param>
            <param name="jsonString">The xml string.</param>
            <param name="tableNames">The names of the output data table.</param>
            <param name="isAppend">Indicates whether the update consists in inserting a new row.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Json.GetJsonNodeValue(System.String,System.String)">
            <summary>
            Gets the value of the specified Json node in the specified xml string.
            </summary>
            <param name="jsonString">The xml string to parse.</param>
            <param name="nodeName">Name of the node.</param>
            <returns>The value of the specified Json node in the specified xml string.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Xml">
            <summary>
            This class represents a helper for object notation.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Xml.ToXml(System.Object,System.String)">
            <summary>
            Gets the result of the serialization of the specified object.
            </summary>
            <param name="object1">The object to serialize.</param>
            <param name="objectName">The name of the output tag to use.</param>
            <returns>The Xml string serializing the specified object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Xml.ToXml(System.Data.DataTable,System.Boolean)">
            <summary>
            Gets the result of the serialization of the specified data table.
            </summary>
            <param name="dataTable">The data table to serialize.</param>
            <param name="isFiltered">Indicates whether only relevant information is put in the xml string.</param>
            <returns>The Xml string serializing the specified data table.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Xml.FromXml(System.Data.DataSet,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Deserializes the specified xml string and puts the result into the
            specified data table.
            </summary>
            <param name="xmlString">The xml string.</param>
            <param name="dataSet">The data set to update.</param>
            <param name="tableNames">The names of the output data table.</param>
            <param name="isAppend">Indicates whether the update consists in inserting a new row.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Xml.FromXml(System.Data.DataSet,System.String,System.String,System.Boolean)">
            <summary>
            Deserializes the specified xml string and puts the result into the
            specified data table.
            </summary>
            <param name="xmlString">The xml string.</param>
            <param name="dataSet">The data set to update.</param>
            <param name="tableName">The name of the output data table.</param>
            <param name="isAppend">Indicates whether the update consists in inserting a new row.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.ObjectNotationHelper_Xml.GetXmlNodeValue(System.String,System.String)">
            <summary>
            Gets the value of the specified Xml node in the specified xml string.
            </summary>
            <param name="xmlString">The xml string to parse.</param>
            <param name="nodeName">Name of the node.</param>
            <returns>The value of the specified Xml node in the specified xml string.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Helpers.Serialization.XmlHelper">
            <summary>
            This class represents a Xml helper.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Saves the xml string of this instance.
            </summary>
            <param name="object1">The object1 to save.</param>
            <param name="log">The saving log to consider.</param>
            <returns>The Xml string of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Saves this instance to the specified file path.
            </summary>
            <param name="object1">The object1 to save.</param>
            <param name="filePath">Path of the file to save.</param>
            <param name="log">The log to consider.</param>
            <returns>True if the saving operation has been done. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.XmlHelper.Load``1(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,System.Xml.Schema.XmlSchemaSet,System.Boolean)">
            <summary>
            Loads a data item from the specified file path.
            </summary>
            <param name="filePath">The path of the Xml file to load.</param>
            <param name="log">The output log of the method.</param>
            <param name="xmlSchemaSet">The XML schema set to consider for checking.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The loaded log.</returns>
            <remarks>If the XML schema set is null then the schema is not checked.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.XmlHelper.LoadFromString``1(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Loads the data item from the specified file path.
            </summary>
            <typeparam name="T">The data item class to consider.</typeparam>
            <param name="xmlString">The Xml string to load.</param>
            <param name="log">The output log of the load method.</param>
            <param name="xmlSchemaSet">The XML schema set to consider for checking.</param>
            <returns>The loaded log.</returns>
            <remarks>If the XML schema set is null then the schema is not checked.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Serialization.XmlHelper.LoadXmlSchemaSet(System.Xml.Schema.XmlSchemaSet,System.Reflection.Assembly,System.Collections.Generic.List{System.String})">
            <summary>
            Loads the specified XML schema set.
            </summary>
            <param name="xmlSchemaSet">The XML schema set to consider.</param>
            <param name="assembly">The assembly to consider.</param>
            <param name="xsdResources">The XSD resources to consider.</param>
            <returns>The XML schema set.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper">
            <summary>
            This structure represents a string helper.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.__PatternEmptyValue">
            <summary>
            The pattern empty value.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.__NoneString">
            <summary>
            The string that is returned when the instance is not found.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.__DateFormat">
            <summary>
            The string that is returned when the instance is not found.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.__TimeFormat">
            <summary>
            The string that is returned when the instance is not found.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.Replace(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces the specified text by the specified one in the specified text.
            </summary>
            <param name="text">The text to consider.</param>
            <param name="textToFind">The text to find.</param>
            <param name="textToReplace">The text to replace.</param>
            <param name="isCaseMatched">Indicates whether the case must be considered.</param>
            <param name="isReplacedOnce">Indicates whether the text to find is to be replaced once.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GeneratePassword(System.Int32)">
            <summary>
            Generates a password.
            </summary>
            <param name="charNumber">The character number to consider.</param>
            <returns>Returns the generated password.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.CountOccurences(System.String,System.Char)">
            <summary>
            Gets the number of occurences of a specfied character in the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="character">The character to consider.</param>
            <returns>The number of occurences of a specfied character in the specified string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.CountOccurences(System.String,System.String)">
            <summary>
            Gets the number of occurences of a specfied character in the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="subString">The sub string to consider.</param>
            <returns>The number of occurences of a specfied character in the specified string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.CheckNameFormat(System.String,System.Int32)">
            <summary>
            Returns the string value of the specified settings.
            </summary>
            <param name="stringValue">String value to consider.</param>
            <param name="limitSize">Limit string size to consider.</param>
            <returns>The string value of the specified settings.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetShortString(System.String,System.Int32,System.String)">
            <summary>
            Gets the string shorten to the specified characters.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="charNumber">The number of characters to consider.</param>
            <param name="dotAdded">Indicates whether dots are added.</param>
            <returns>Returns the specified string shorten.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetStringBetween(System.String,System.Char)">
            <summary>
            Gets the sub string contained between the specified characters in the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="character">The character to consider.</param>
            <returns>Returns the sub string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.HashString(System.String,System.String)">
            <summary>
            Hashes the string.
            </summary>
            <param name="st">The string to hash.</param>
            <param name="hashName">The name of the algorithm to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.ToPath(System.String)">
            <summary>
            Converts the specified path according to the environment.
            </summary>
            <param name="st">The string to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetSubstring(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the specified sub string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="startIndex">The start index to consider.</param>
            <param name="endIndex">The end index to consider.</param>
            <returns>The formated path.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetMinimumIndex(System.Int32[])">
            <summary>
            Gets the minimum index from the specified ones.
            </summary>
            <param name="indexes">The indexes to consider.</param>
            <returns>Returns the minimum index.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetStartedString(System.String,System.String,System.String)">
            <summary>
            Gets the string with the specified starting string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="startingString">The starting string to consider.</param>
            <param name="containingString">The string con</param>
            <returns>The formated path.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetEndedString(System.String,System.String)">
            <summary>
            Gets the string with the specified ending string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="endingString">The ending string to consider.</param>
            <returns>The formated path.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetFormatString(System.String,System.Int32,System.String,System.String)">
            <summary>
            Formats the specified string replacing the specified index by the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="index">The index to consider.</param>
            <param name="replaceString">The replacement string to consider.</param>
            <param name="wholeReplaceString">The whole replacement string to consider.</param>
            <example>The string should be formated this way: {0} {1} or { .. {0} .. } { .. {1} .. } and so on.</example>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetIndexOfLastString(System.String,System.String,System.Int32@)">
            <summary>
            Gets the index of the last sub string in the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="stv">The string to search.</param>
            <param name="startIndex">The start index to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetIndexOfLastString(System.String,System.String,System.Int32)">
            <summary>
            Gets the index of the last sub string in the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="stv">The string to search.</param>
            <param name="startIndex">The start index to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetIndexOfNextString(System.String,System.String,System.Int32@)">
            <summary>
            Gets the index of the next sub string in the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="stv">The string to search.</param>
            <param name="startIndex">The start index to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetIndexOfNextString(System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            Gets the index of the next sub string in the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="stv">The string to search.</param>
            <param name="startIndex">The start index to consider.</param>
            <param name="stringComparison">The string comparison to consider.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetString(System.Nullable{System.DateTime})">
            <summary>
            Gets the date string of this instance.
            </summary>
            <param name="date">The date to consider.</param>
            <returns>Returns the date string of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetNormalizedName(System.String)">
            <summary>
            Gets the normalized string from the specified string.
            </summary>
            <param name="st">The string to normalize.</param>
            <returns>Returns the normalized string.</returns>
            <remarks>The normalized string is a string in which only the alphanumeric characters and _ are allowed.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetTitleCasedName(System.String)">
            <summary>
            Gets the titled string from the specified string.
            </summary>
            <param name="st">The string to normalize.</param>
            <returns>Returns the normalized string.</returns>
            <remarks>The normalized string is a string in which only the alphanumeric characters and _ are allowed.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetStringAtIndex(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            Gets the string at the specified index from the specified index.
            </summary>
            <param name="strings">The objects to consider.</param>
            <param name="index">The index to consider.</param>
            <returns>Returns the normalized string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.Concatenate(System.String,System.String,System.String)">
            <summary>
            Concatenates the two specified string only if the second one starts with the specified character. Returns the second string otherwise.
            </summary>
            <param name="st1">The first string to concatenate.</param>
            <param name="st2">The second string to concatenate.</param>
            <param name="charString">The string value to consider.</param>
            <returns>Returns the concatenated string.</returns>
            <remarks>If the leading char is null then the two strings are always concatenated.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.Excluding(System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            Excludes the specified string items from the specified string items.
            </summary>
            <param name="stringItems">The string items to consider.</param>
            <param name="excludingStringItems">The string items to exclude.</param>
            <returns>Returns the excluded string items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.Excluding(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Excludes the specified string items from the specified string items.
            </summary>
            <param name="stringItems">The string items to consider.</param>
            <param name="excludingStringItems">The string items to exclude.</param>
            <returns>Returns the excluded string items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.Adding(System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            Adds the specified string items from the specified string items.
            </summary>
            <param name="stringItems">The string items to consider.</param>
            <param name="addingStringItems">The string items to add.</param>
            <returns>Returns the added string items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.Adding(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Adds the specified string items from the specified string items.
            </summary>
            <param name="stringItems">The string items to consider.</param>
            <param name="addingStringItems">The string items to add.</param>
            <returns>Returns the added string items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetKeyValues(System.String)">
            <summary>
            Get the key values from the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <returns>Returns the added string items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetQuotedString(System.String)">
            <summary>
            Gets the quoted string.
            </summary>
            <param name="st">The string to normalize.</param>
            <returns>Returns the quoted string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetUnquotedString(System.String,System.Char)">
            <summary>
            Gets the unquoted string.
            </summary>
            <param name="st">The string to normalize.</param>
            <param name="quoteChar">The quote character to consider.</param>
            <returns>Returns the quoted string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.ToObject(System.String,BindOpen.Framework.Core.Data.Common.DataValueType,System.String)">
            <summary>
            Gets the object from the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="valueType">The value type to consider.</param>
            <param name="textFormat">The text format to consider.</param>
            <returns>Returns the object corresponding to the specified string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.ToDateTime(System.String,System.String)">
            <summary>
            Gets the date time object from the specified string.
            </summary>
            <param name="st">The string to consider.</param>
            <param name="textFormat">The text format to consider.</param>
            <returns>Returns the object corresponding to the specified string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.ToEnum``1(System.String,``0)">
            <summary>
            Gets the enumration from the specified string.
            </summary>
            <typeparam name="T">The structure to consider.</typeparam>
            <param name="st">The string to consider.</param>
            <param name="defaultEnum">The default enumeration to consider.</param>
            <returns>Returns the object corresponding to the specified string.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Helpers.Strings.StringHelper.GetRandomString(System.String,System.String[])">
            <summary>
            Get a random string from the specified string with the specified length.
            </summary>
            <param name="pattern">The pattern to consider.</param>
            <param name="charLists">The lists of chars to consider.</param>
            <returns>A random password with the specified length.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.DataItem">
            <summary>
            This class represents a data item.
            </summary>
            <remarks>The data item has only an ID, a creation and a last-modification dates.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.#ctor">
            <summary>
            Instantiates a new instance of the DataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Finalize">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.InitializeLifetimeService">
            <summary>
            Initializes the life time service.
            </summary>
            <returns>Null to remain the object's life forever.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.GetPropertyInfo(System.Type,System.String,System.Type[],BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute@,BindOpen.Framework.Core.Application.Scopes.IAppScope)">
            <summary>
            Sets the specified value.
            </summary>
            <param name="objectType">The object type to consider.</param>
            <param name="propertyName">The property name to consider.</param>
            <param name="attributeTypes"></param>
            <param name="attribute">The attribute to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.ToXml(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets the xml string of this instance.
            </summary>
            <param name="log">The log to consider.</param>
            <returns>The Xml string of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.SaveXml(System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Saves this instance to the specified file path.
            </summary>
            <param name="filePath">The path of the file to save.</param>
            <param name="log">The log to consider.</param>
            <returns>True if the saving operation has been done. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Load``1(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Xml.Schema.XmlSchemaSet,System.Boolean)">
            <summary>
            Instantiates a new instance of Log class from a xml file.
            </summary>
            <param name="filePath">The path of the Xml file to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="xmlSchemaSet">The XML schema set to consider for checking.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The load log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Update(System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Check``1(System.Boolean,``0,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Checks this instance.
            </summary>
            <typeparam name="T">The data item class to consider.</typeparam>
            <param name="isExistenceChecked">Indicates whether the carrier existence is checked.</param>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Check(System.Boolean,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Checks this instance.
            </summary>
            <param name="isExistenceChecked">Indicates whether the carrier existence is checked.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Repair``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Repair(System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.DataItem.IsDisposed">
            <summary>
            Indicates whether this instance is disposed.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DataItem.Dispose(System.Boolean)">
            <summary>
            Disposes specifying whether this instance is disposing.
            </summary>
            <param name="isDisposing">Indicates whether this instance is disposing</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.DataItemizationMode">
            <summary>
            This enumeration represents the data element itemization modes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.DataItemizationMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.DataItemizationMode.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.DataItemizationMode.Valued">
            <summary>
            Valued.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.DataItemizationMode.Referenced">
            <summary>
            Referenced.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.DataItemizationMode.Script">
            <summary>
            Script.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.DescribedDataItem">
            <summary>
            This class represents described data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.DescribedDataItem.Description">
            <summary>
            Description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.DescribedDataItem.DescriptionSpecified">
            <summary>
            Specification of the Description property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.#ctor">
            <summary>
            Instantiates a new instance of the DescribedDataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the DescribedDataItem class considering the specified preffix name.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="namePreffix">The preffix of the name of this instance.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the DescribedDataItem class considering the specified preffix name.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="namePreffix">The preffix of the name of this instance.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.Update(BindOpen.Framework.Core.Data.Items.DescribedDataItem)">
            <summary>
            Updates this instance with the base object.
            </summary>
            <param name="updateBaseObject">The update base object to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.AddDescriptionText(System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.AddDescriptionText(System.String,System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.SetDescriptionText(System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.SetDescriptionText(System.String,System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.GetDescriptionText(System.String,System.String)">
            <summary>
            Returns the description label.
            </summary>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue">
            <summary>
            This class represents a data key value.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue.Key">
            <summary>
            Key of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue.Content">
            <summary>
            Content of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue.#ctor">
            <summary>
            Instantiates a new instance of KeyValue class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of KeyValue class specifying
            its user interface language ID and its label.
            </summary>
            <param name="key">Key of this instance.</param>
            <param name="aContent">Content of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue.InitializeLifetimeService">
            <summary>
            Initializes the life time service.
            </summary>
            <returns>Null to remain the object's life forever.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue.GetTextNode(System.String,System.String)">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <param name="nodeName">Name of the text node.</param>
            <param name="indent">Tabulation indent to include in the text.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem">
            <summary>
            This class represents a dictionary data item.
            </summary>
            <example>Titles, Descriptions.</example>
            <seealso cref="T:BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.SingleValue">
            <summary>
            The single '*' value to consider.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.SingleValueSpecified">
            <summary>
            Specification of the SingleValue property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.AvailableKeys">
            <summary>
            Available keys of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.AvailableKeysSpecified">
            <summary>
            Specification of the AvailableKeys property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.Values">
            <summary>
            Values of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.ValuesSpecified">
            <summary>
            Specification of the Values property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.Item(System.String)">
            <summary>
            Text of the specified key.
            </summary>
            <param name="key">The key to consider.</param>
            <returns>Returns the specified text.</returns>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.Item(System.String,System.String)">
            <summary>
            Text of the specified key.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="defaultKey">The default key to consider.</param>
            <returns>Returns the specified text.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.#ctor">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class. 
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class
            specifying the text for the default key.
            </summary>
            <param name="text">The text to consider</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.#ctor(BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue[])">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class specifying the values.
            </summary>
            <param name="values">The values to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class
            specifying the text for the default user interface language ID.
            </summary>
            <param name="key">The variant name to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.#ctor(System.Data.DataRow)">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class
            from a global object/text data row.
            </summary>
            <param name="dataRow">The global object/text row to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.#ctor(System.Object)">
            <summary>
            Instantiates a new instance of the DictionaryDataItem class
            from an object.
            </summary>
            <param name="object1">The object to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.AddValue(BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue)">
            <summary>
            Adds a new value to this instance.
            </summary>
            <param name="dataKeyValue">The value to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.AddValue(System.String)">
            <summary>
            Adds a new value to this instance with the specified key and text.
            </summary>
            <param name="text">The text to consider.</param>
            <returns>Returns the added data key value.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.AddValue(System.String,System.String)">
            <summary>
            Adds a new value to this instance with the specified key and text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
            <returns>Returns the added data key value.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.SetValue(System.String)">
            <summary>
            Sets the text of the default value.
            </summary>
            <param name="text">The text of the value to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.SetValue(System.String,System.String)">
            <summary>
            Sets the text of the default value.
            </summary>
            <param name="key">The key of the value to add.</param>
            <param name="text">The text of the value to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.RemoveValue(System.String)">
            <summary>
            Removes the value with the specified key.
            </summary>
            <param name="key">The key to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.RemoveValue(BindOpen.Framework.Core.Data.Items.Dictionary.DataKeyValue)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="dataKeyValue">The value to remove.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.RemoveValues(System.Collections.Generic.List{System.String})">
            <summary>
            Removes the values of this instance whose keys are not in the specified list.
            </summary>
            <param name="keys">The keys to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.UpdateKey(System.String,System.String)">
            <summary>
            Updates the key of a global value.
            </summary>
            <param name="oldKey">The old name of the global value.</param>
            <param name="newKey">The new name of the global value.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.op_Implicit(System.String)~BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem">
            <summary>
            Converts from string.
            </summary>
            <param name="st">The string to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.Create(System.String)">
            <summary>
            Creates a new instance of the DictionaryDataItem class.
            </summary>
            <param name="stringObject">The string to consider.</param>
            <returns>The collection.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.GetCultureInfoItems">
            <summary>
            Returns the culture information sets.
            </summary>
            <returns>Returns information about all the UI cultures.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.GetDistinctKeys">
            <summary>
            Gets the distinct keys of this instance.
            </summary>
            <returns>Returns the distinct keys of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.HasKey(System.String)">
            <summary>
            Indicates whether this instance has a value for the specified key.
            </summary>
            <param name="key">The key to consider.</param>
            <returns>Returns True if this instance has a value for the specified key.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.GetContent(System.String,System.String)">
            <summary>
            Returns the content corresponding to the specified key.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="alternateKey">The alternate key to used if the key is not found.</param>
            <returns>Returns the text corresponding to the specified user interface language ID.
            Returns empty if there is none.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.GetTextNode(System.String,System.String)">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <param name="nodeName">Name of the text node.</param>
            <param name="indent">Tabulation indent to include in the text.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Documents.Document">
            <summary>
            This class represents a document item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Documents.Document.Container">
            <summary>
            Container of this instance. 
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Documents.Document.Content">
            <summary>
            Content of this instance. 
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Documents.Document.#ctor">
            <summary>
            This instantiates a new instance of the DataSource class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Documents.Document.#ctor(System.String)">
            <summary>
            This instantiates a new instance of the DataSource class.
            </summary>
            <param name="name">The name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Documents.Document.#ctor(BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration,BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration,System.String)">
            <summary>
            This instantiates a new instance of the DataSource class.
            </summary>
            <param name="aContainer">The container to consider.</param>
            <param name="aContent">The content to consider.</param>
            <param name="name">The name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Documents.Document.Update(BindOpen.Framework.Core.Data.Items.Documents.Document,System.String)">
            <summary>
            Updates this instance with the specified document item.
            </summary>
            <param name="aDocumentDataItem">The document item to consider.</param>
            <param name="relativePath">The relative path to consider.</param>
            <returns>The log of the schema update.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Documents.Document.DetectFormat(BindOpen.Framework.Core.Data.Items.Source.DataSource,BindOpen.Framework.Core.System.Diagnostics.Log@)">
            <summary>
            Detects the format of this instance considering the specified data source.
            </summary>
            <param name="dataSource">The data source to consider.</param>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Documents.Document.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.IdentifiedDataItem">
            <summary>
            This class represents an identified data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IdentifiedDataItem.Id">
            <summary>
            ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IdentifiedDataItem.IdSpecified">
            <summary>
            Specification of the ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.IdentifiedDataItem.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the IdentifiedDataItem class.
            </summary>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.IdentifiedDataItem.Key">
            <summary>
            Returns the identifier key.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.IdentifiedDataItem.NewGuid">
            <summary>
            Returns a new Guid.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.IdentifiedDataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.IDescribedDataItem">
            <summary>
            This interface represents an described data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IDescribedDataItem.Title">
            <summary>
            Title of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IDescribedDataItem.Description">
            <summary>
            Description of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.IIdentifiedDataItem">
            <summary>
            This interface represents an identified data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IIdentifiedDataItem.Id">
            <summary>
            ID of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.IIndexedDataItem">
            <summary>
            This interface represents an indexed data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IIndexedDataItem.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.INamedDataItem">
            <summary>
            This interface represents a named data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.INamedDataItem.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.IndexedDataItem">
            <summary>
            This class represents indexed data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IndexedDataItem.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IndexedDataItem.IndexSpecified">
            <summary>
            Specification of the Index property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.IndexedDataItem.#ctor">
            <summary>
            Instantiates a new instance of the IndexedDataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.IndexedDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the IndexedDataItem class considering the specified preffix name.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="namePreffix">The preffix of the name of this instance.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.IStoredDataItem">
            <summary>
            This interface represents an indexed data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IStoredDataItem.CreationDate">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IStoredDataItem.LastModificationDate">
            <summary>
            Last modification date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.IStoredDataItem.IsLocked">
            <summary>
            Indicates whether this instance is locked.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.ITitledDataItem">
            <summary>
            This interface represents an titled data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.ITitledDataItem.Title">
            <summary>
            Title of this instance.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.NamedDataItem">
            <summary>
            This class represents a named data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.NamedDataItem.Name">
            <summary>
            Name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.NamedDataItem.NameSpecified">
            <summary>
            Specification of the Name property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.NamedDataItem.#ctor">
            <summary>
            Instantiates a new instance of the NamedDataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.NamedDataItem.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Instantiates a new instance of the NamedDataItem class considering the specified name and preffix name.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="namePreffix">The preffix of the name of this instance.</param>
            <param name="id">The ID to consider.</param>
            <param name="creationDate">The creation date of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.NamedDataItem.Key">
            <summary>
            Returns the identifier key.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)">
            <summary>
            Returns a new Guid.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.NamedDataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Schema.DataSchema">
            <summary>
            This class represents a data schema.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Schema.DataSchema.RootZone">
            <summary>
            Root zone of this instance. 
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Schema.DataSchema.MetaSchemreference">
            <summary>
            The meta schema reference of this instance. 
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Schema.DataSchema.#ctor">
            <summary>
            Initializes a new instance of the DataSchema class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Schema.DataSchema.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataSchema class.
            </summary>
            <param name="name">The name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Schema.DataSchema.GetElementWithId(System.String,BindOpen.Framework.Core.Data.Elements.Schema.SchemaElement)">
            <summary>
            Gets the schema element with the specified ID.
            </summary>
            <param name="id">The ID of the meta object to consider.</param>
            <param name="parentMetobject1">The parent meta object to consider.</param>
            <returns>The bmeta object with the specified ID.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Sets.DataItemSet`1">
            <summary>
            This class represents a data item set.
            </summary>
            <typeparam name="T">The class of the named data items.</typeparam>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Sets.DataItemSet`1.Items">
            <summary>
            Items of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Sets.DataItemSet`1.ItemsSpecified">
            <summary>
            Specification of the Items property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.DataItemSet`1.#ctor">
            <summary>
            Instantiates a new instance of the DataItemSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.DataItemSet`1.#ctor(BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem,`0[])">
            <summary>
            Instantiates a new instance of the DataItemSet class.
            </summary>
            <param name="items">The items to consider.</param>
            <param name="description">The description to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.DataItemSet`1.#ctor(`0[])">
            <summary>
            Instantiates a new instance of the DataItemSet class.
            </summary>
            <param name="items">The items to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1">
            <summary>
            This class represents a data item set.
            </summary>
            <typeparam name="T">The class of the named data items.</typeparam>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1._Items">
            <summary>
            The items of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Description">
            <summary>
            Description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.DescriptionSpecified">
            <summary>
            Specification of the Description property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Count">
            <summary>
            Returns the number of items.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Item(System.Int32)">
            <summary>
            Returns the element with the specified indexed.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Item(System.String)">
            <summary>
            Returns the element with the specified key.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.#ctor">
            <summary>
            Instantiates a new instance of the GenericDataItemSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.#ctor(BindOpen.Framework.Core.Data.Items.Dictionary.DictionaryDataItem,`0[])">
            <summary>
            Instantiates a new instance of the GenericDataItemSet class.
            </summary>
            <param name="items">The items to consider.</param>
            <param name="description">The description to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.#ctor(`0[])">
            <summary>
            Instantiates a new instance of the GenericDataItemSet class.
            </summary>
            <param name="items">The items to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.ClearItems">
            <summary>
            Clears the items of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Add(`0,BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet{`0})">
            <summary>
            Adds a new item.
            </summary>
            <param name="storedDataItem">The new item to add.</param>
            <param name="referenceCollection">The reference collection to consider.</param>
            <returns>Returns the new item that has been added.
            Returns null if the new item is null or else its name is null.</returns>
            <remarks>The new item must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet{`0})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="items">The items of the item to add.</param>
            <param name="referenceCollection">The reference collection to consider.</param>
            <returns>Returns the new item that has been added.
            Returns null if the new item is null or else its name is null.</returns>
            <remarks>The new item must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Add(`0[])">
            <summary>
            Adds the specified item.
            </summary>
            <param name="items">The items of the item to add.</param>
            <returns>Returns the new item that has been added.
            Returns null if the new item is null or else its name is null.</returns>
            <remarks>The new item must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Remove(System.String[])">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param name="keys">The keys of the item to remove.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.HasItems">
            <summary>
            Returns true if this instance has any item.
            </summary>
            <returns>Returns true if this instance has any item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.HasItem(System.String)">
            <summary>
            Checks if this instance has an item with the specified name.
            </summary>
            <param name="key">The key of the item to check.</param>
            <returns>Returns true if the instance has an item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.GetItem(System.String)">
            <summary>
            Returns the item with the specified name.
            </summary>
            <param name="key">The key of the item to return.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.GetCommonItemKeys(BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet{`0})">
            <summary>
            Gets the common keys with the specified set of elements.
            </summary>
            <param name="dataItemSet">The set of elements to consider.</param>
            <returns>The names of the common object items with the specified set of elements.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Check``1(System.Boolean,``0,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Checks this instance.
            </summary>
            <param name="isExistenceChecked">Indicates whether the carrier existence is checked.</param>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Repair``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="E:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.PropertyChanged">
            <summary>
            Occures when a property of this instance has changed.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Sets.GenericDataItemSet`1.OnPropertyChanged(System.String)">
            <summary>
            Indicates that a property has changed.
            </summary>
            <param name="name">The name of the property that has changed.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Source.DataSource">
            <summary>
            This class represents a data source.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.Kind">
            <summary>
            Kind of the data module of this instance. 
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.KindSpecified">
            <summary>
            Specification of the Kind property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.ModuleName">
            <summary>
            The module name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.ModuleNameSpecified">
            <summary>
            Specification of the ModuleName property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.InstanceName">
            <summary>
            The instance name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.InstanceNameSpecified">
            <summary>
            Specification of the InstanceName property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.Configurations">
            <summary>
            The connectors for this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Source.DataSource.ConfigurationsSpecified">
            <summary>
            Specification of the ConnectorConfigurations property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.#ctor">
            <summary>
            This instantiates a new instance of the DataSource class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.#ctor(System.String,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration[])">
            <summary>
            This instantiates a new instance of the DataSource class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="kind">The kind of the data source to consider.</param>
            <param name="configurations">The configurations to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.AddConfiguration(BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration)">
            <summary>
            Adds the specified connector configuration.
            </summary>
            <param name="connector">The connector to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.AddConfiguration(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String,System.String,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Adds the specified new connector.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="definitionName">The unique name of connector to create.</param>
            <param name="connectionString">The connection string of this instance.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.AddConfiguration(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Adds the specified new connector.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="definitionName">The unique name of connection to create.</param>
            <param name="detail">The detail to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.AddConfiguration(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String,System.String,System.Dynamic.DynamicObject,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Adds the specified new connector.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="definitionName">The unique name of connection to create.</param>
            <param name="dynamicObject">The object parameters to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.RemoveConfiguration(System.String)">
            <summary>
            Removes the specified connector configuration.
            </summary>
            <param name="definitionName">The unique name of the connector definition to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.GetConfiguration(System.String)">
            <summary>
            Gets the specified connector configuration.
            </summary>
            <param name="definitionName">The unique name of the connector definition to consider.</param>
            <returns>The specified connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.HasConfiguration(System.String)">
            <summary>
            Indicates whether this instance has the specified connector configuration.
            </summary>
            <param name="definitionName">The unique name of the connector definition to consider.</param>
            <returns>The data source with the specified data module name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Source.DataSource.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind">
            <summary>
            This enumeration represents the data source kinds.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.Database">
            <summary>
            Database.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.Repository">
            <summary>
            Repository.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.RestApi">
            <summary>
            Rest API.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.SoapAPI">
            <summary>
            SOAP API.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.EmailServer">
            <summary>
            Email server.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.Memory">
            <summary>
            Memory.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Source.DataSourceKind.Console">
            <summary>
            Console.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.StoredDataItem">
            <summary>
            This class represents a stored data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.StoredDataItem.NamePreffix">
            <summary>
            Name preffix of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.StoredDataItem.CreationDate">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.StoredDataItem.CreationDateSpecified">
            <summary>
            Specification of the CreationDate property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.StoredDataItem.LastModificationDate">
            <summary>
            Last modification date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.StoredDataItem.LastModificationDateSpecified">
            <summary>
            Specification of the LastModificationDate property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.StoredDataItem.IsLocked">
            <summary>
            Indicates whether this instance is locked.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.StoredDataItem.IsLockedSpecified">
            <summary>
            Specification of the IsLocked property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.StoredDataItem.#ctor">
            <summary>
            Instantiates a new instance of the StoredDataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.StoredDataItem.#ctor(System.String,System.Nullable{System.DateTime})">
            <summary>
            Instantiates a new instance of the StoredDataItem class considering the specified name and preffix name.
            </summary>
            <param name="id">The ID to consider.</param>
            <param name="creationDate">The creation date of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.StoredDataItem.DeclareUpdate">
            <summary>
            Declares this instance has changed.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.StoredDataItem.Lock(System.Boolean)">
            <summary>
            Locks this instance.
            </summary>
            <param name="isRecursive">Indicates whether the protection is applied to sub objects.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.StoredDataItem.Unlock(System.Boolean)">
            <summary>
            Unlocks this instance.
            </summary>
            <param name="isRecursive">Indicates whether the protection is applied to sub objects.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.StoredDataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Strings.SingleStringValuedDataItem">
            <summary>
            This class represents a single string valued data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Strings.SingleStringValuedDataItem.Value">
            <summary>
            Value of this instance.
            </summary>      
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.SingleStringValuedDataItem.#ctor">
            <summary>
            Instantiates a new instance of the SingleStringValuedDataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.SingleStringValuedDataItem.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the SingleStringValuedDataItem class.
            </summary>
            <param name="value">The value to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection">
            <summary>
            This class represents a collection of string valued items.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.Items">
            <summary>
            Items of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.#ctor">
            <summary>
            Instantiates a new instance of the StringValuedDataCollection class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.#ctor(System.String[][])">
            <summary>
            Instantiates a new instance of the StringValuedDataCollection class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.AddItem(BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem)">
            <summary>
            Adds a new item.
            </summary>
            <param name="basicDataItem">The new item to add.</param>
            <returns>Returns the new item that has been added.
            Returns null if the new item is null or else its name is null.</returns>
            <remarks>The new item must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.AddItem(System.String,System.String)">
            <summary>
            Adds a new item with the specified name, value and value type.
            </summary>
            <param name="name">The name of the item to add.</param>
            <param name="value">The value of the item to add.</param>
            <returns>Returns the new item that has been added.
            Returns null if the new item is null or else its name is null.</returns>
            <remarks>The new item must have a name.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.SeItemValue(System.String,System.String)">
            <summary>
            Sets the value of the item with the specified name.
            </summary>
            <param name="name">The name of the item whose value is to be updated.</param>
            <param name="value">The new value of the item.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.SetItemValue(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Sets the values of the item with the specified name.
            </summary>
            <param name="name">The name of the item whose values are to be updated.</param>
            <param name="values">The new values of the item.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.RemoveItem(System.String)">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param name="name">The unique name of the item to remove.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.GetItemWithName(System.String)">
            <summary>
            Returns the item with the specified name.
            </summary>
            <param name="name">The name of the item to return.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.GetItemValue(System.String)">
            <summary>
            Returns the single object value of the item with the specified name.
            </summary>
            <param name="name">The name of the item whose value must be returned.</param>
            <returns>Returns the single object value of the item with the specified name.
            Returns null if none was found.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.HasItemWithName(System.String)">
            <summary>
            Checks if this instance has an item with the specified name.
            </summary>
            <param name="name">The name of the item to check.</param>
            <returns>Returns true if the instance has an item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.HasItems">
            <summary>
            Returns true if this instance has any item.
            </summary>
            <returns>Returns true if this instance has any item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.GetTextNode(System.String,System.String)">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <param name="nodeName">Name of the text node.</param>
            <param name="indent">Tabulation indent to include in the text.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataCollection.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem">
            <summary>
            This class represents the string valued data item.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem._values">
            <summary>
            Values of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.Values">
            <summary>
            Values of this instance. This can be a single value or a list of values.
            </summary>
            <remarks>Items must be allowed and must not be forbidden. Otherwise, the items will be the default ones..</remarks>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.ValuesSpecified">
            <summary>
            Specification of the Values property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.#ctor">
            <summary>
            Initializes a new instance of the StringValuedDataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StringValuedDataItem class.
            </summary>
            <param name="name">Name of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the StringValuedDataItem class.
            </summary>
            <param name="name">Name of this instance.</param>
            <param name="value">Value of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.HasValue">
            <summary>
            Indicates whether this instance has a value.
            </summary>
            <returns>Returns true if this instance contains a value.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.GetValue">
            <summary>
            Returns the values of this instance.
            </summary>
            <returns>Returns the single value of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.ClearValues">
            <summary>
            Clears the values of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.InitializeValue">
            <summary>
            Initializes the value of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.SetValue(System.String)">
            <summary>
            Sets the single value of this instance.
            </summary>
            <remarks>Values of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..</remarks>
            <param name="value">The String single value of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.SetValues(System.Collections.Generic.List{System.String})">
            <summary>
            Sets the list of values of this instance.
            </summary>
            <param name="values">The String values of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.Strings.StringValuedDataItem.GetTextNode(System.String,System.String)">
            <summary>
            Returns a text node representing this instance.
            </summary>
            <param name="nodeName">Name of the tex node.</param>
            <param name="indent">Tabulation indent to include in the text.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Items.TitledDataItem">
            <summary>
            This class represents titled data item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.TitledDataItem.Title">
            <summary>
            Title of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Items.TitledDataItem.TitleSpecified">
            <summary>
            Specification of the Title property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.#ctor">
            <summary>
            Instantiates a new instance of the TitledDataItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the TitledDataItem class considering the specified preffix name.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="namePreffix">The preffix of the name of this instance.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the TitledDataItem class considering the specified preffix name.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="title">The title of this instance.</param>
            <param name="namePreffix">The preffix of the name of this instance.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.Update(BindOpen.Framework.Core.Data.Items.TitledDataItem)">
            <summary>
            Updates this instance with the base object.
            </summary>
            <param name="updateBaseObject">The update base object to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.AddTitleText(System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.AddTitleText(System.String,System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.SetTitleText(System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.SetTitleText(System.String,System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.GetTitleText(System.String,System.String)">
            <summary>
            Returns the title label.
            </summary>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Items.TitledDataItem.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.References.DataBindingHandler">
            <summary>
            This class represents a data binding handler.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataBindingHandler.Get(BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets the items from the source of this instance and update the target items.
            </summary>
            <param name="aSourceElement">The source element to consider.</param>
            <param name="parameterDetail">The parameter detail to consider.</param>        
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the retrieved items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataBindingHandler.Post(System.Collections.Generic.List{System.Object},BindOpen.Framework.Core.Data.Elements.DataElement@,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Posts the items to the source of this instance.
            </summary>
            <param name="items">The items to consider.</param>
            <param name="aSourceElement">The source element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the posted items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataBindingHandler.Post(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Posts the items to the source of this instance.
            </summary>
            <param name="aItem">The item to consider.</param>
            <param name="aSourceElement">The source element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the posted items.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.References.DataReference">
            <summary>
            This class represents a data reference.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.DataReference.DataHandlerUniqueName">
            <summary>
            The dtaa handler unique name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.DataReference.SourceElement">
            <summary>
            Source element of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.DataReference.PathDetail">
            <summary>
            The path detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.DataReference.PathDetailSpecified">
            <summary>
            Specification of the PathDetail property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.DataReference.Source">
            <summary>
            Source item of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.DataReference.TargetItem">
            <summary>
            Target item of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.#ctor">
            <summary>
            Instantiates a new instance of the DataReference class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.#ctor(System.String,BindOpen.Framework.Core.Data.Elements.DataElement,System.Dynamic.DynamicObject)">
            <summary>
            Instantiates a new instance of the DataReference class.
            </summary>
            <param name="dataHandlerUniqueName">The handler unique name to consider.</param>
            <param name="sourceElement">The source element to consider.</param>
            <param name="dynamicObject">The dynamic object of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.#ctor(System.String,BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Instantiates a new instance of the DataReference class.
            </summary>
            <param name="dataHandlerUniqueName">The handler unique name to consider.</param>
            <param name="sourceElement">The source element to consider.</param>
            <param name="pathDetail">The path detail to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.#ctor(System.String,BindOpen.Framework.Core.Data.Items.DataItem,System.Dynamic.DynamicObject)">
            <summary>
            Instantiates a new instance of the DataReference class.
            </summary>
            <param name="dataHandlerUniqueName">The handler unique name to consider.</param>
            <param name="sourceItem">The source item to consider.</param>
            <param name="dynamicObject">The dynamic object of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.#ctor(System.String,BindOpen.Framework.Core.Data.Items.DataItem,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Instantiates a new instance of the DataReference class.
            </summary>
            <param name="dataHandlerUniqueName">The handler unique name to consider.</param>
            <param name="sourceItem">The source item to consider.</param>
            <param name="pathDetail">The path detail to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.GetPrimarySource">
            <summary>
            Gets the primary source of this instance.
            </summary>
            <returns>Returns the initial source of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.GetPrimarySourceValueType">
            <summary>
            Gets the value type of the primary source of this instance.
            </summary>
            <returns>Returns the value type of the primary source of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.GetDataSource">
            <summary>
            Gets the initial data source of this instance.
            </summary>
            <returns>Returns the initial data source of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.GetDataSourceKind">
            <summary>
            Gets the initial data source kind of this instance.
            </summary>
            <returns>Returns the initial data source kind of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.Get(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets the items from the source of this instance and update the target items.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the retrieved items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.Post(System.Collections.Generic.List{System.Object},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Posts the items to the source of this instance.
            </summary>
            <param name="items">The items to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the posted items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.DataReference.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.References.TBaseItemReference`1">
            <summary>
            This class represents a base item reference.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.Reference">
            <summary>
            The reference of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.ReferenceSpecified">
            <summary>
            Specification of the Reference property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.Item">
            <summary>
            The item of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.#ctor">
            <summary>
            Creates a new instance of the TBaseItemReference class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.#ctor(`0)">
            <summary>
            Creates a new instance of the TBaseItemReference class.
            </summary>
            <param name="item">The item to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.#ctor(BindOpen.Framework.Core.Data.References.DataReference)">
            <summary>
            Creates a new instance of the TBaseItemReference class.
            </summary>
            <param name="reference">The reference to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.Update(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates the items of this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the items of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned job.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TBaseItemReference`1.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.References.TItemReference`1">
            <summary>
            This class represents an item reference.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.TItemReference`1.ObjectItem">
            <summary>
            The item of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.References.TItemReference`1.ObjectItemSpecified">
            <summary>
            Specification of the ObjectItem property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TItemReference`1.#ctor">
            <summary>
            Creates a new instance of the TItemReference class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TItemReference`1.#ctor(`0)">
            <summary>
            Creates a new instance of the TItemReference class.
            </summary>
            <param name="item">The item to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.References.TItemReference`1.#ctor(BindOpen.Framework.Core.Data.References.DataReference)">
            <summary>
            Creates a new instance of the TItemReference class.
            </summary>
            <param name="reference">The reference to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement">
            <summary>
            This class represents the data constraint statement.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.#ctor">
            <summary>
            Instantiates a new instance of the DataConstraintStatement class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.AddConstraint(BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration)">
            <summary>
            Adds the specified constraint.
            </summary>
            <param name="routine">The constraint to add.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,BindOpen.Framework.Core.Data.Items.Sets.DataItemSet{BindOpen.Framework.Core.Application.Commands.Command},BindOpen.Framework.Core.Data.Items.Sets.DataItemSet{BindOpen.Framework.Core.System.Diagnostics.Events.ConditionalEvent})">
            <summary>
            Adds the specified constraint.
            </summary>
            <param name="name">The name of constraint to create.</param>
            <param name="definitionName">The definition name to create.</param>
            <param name="parameterDetail">The parameter detail to consider.</param>
            <param name="commandSet">The command set to consider.</param>
            <param name="outputEventSet">The output event set to consider.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Framework.Core.Data.Common.DataValueType)">
            <summary>
            Sets the constraint parameter value.
            </summary>
            <param name="constraintName">The name of the constraint to return.</param>
            <param name="definitionName">The name of the definition to return.</param>
            <param name="parameterName">The name of the parameter to return.</param>
            <param name="dataValueType">The name of the parameter to return.</param>
            <returns>Returns the specified constrainst parameter.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Framework.Core.Data.Common.DataValueType)">
            <summary>
            Sets the constraint parameter value.
            </summary>
            <param name="constraintName">The name of the constraint to return.</param>
            <param name="definitionName">The name of the definition to return.</param>
            <param name="parameterName">The name of the parameter to return.</param>
            <param name="value">The value to consider.</param>
            <param name="dataValueType">The name of the parameter to return.</param>
            <returns>Returns the specified constrainst parameter.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.GetConstraint(System.String)">
            <summary>
            Returns the constraint with the specified name.
            </summary>
            <param name="name">The name of the item to return.</param>
            <returns>Returns the item with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.GetConstraintParameter(System.String,System.String)">
            <summary>
            Returns the constraint parameter.
            </summary>
            <param name="constraintName">The name of the constraint to return.</param>
            <param name="parameterName">The name of the parameter to return.</param>
            <returns>Returns the specified constrainst parameter.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.GetConstraintParameterValue(System.String,System.String)">
            <summary>
            Returns the constraint parameter value.
            </summary>
            <param name="constraintName">The name of the constraint to return.</param>
            <param name="parameterName">The name of the parameter to return.</param>
            <returns>Returns the specified constrainst parameter.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.CheckItem(System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,System.Boolean,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Check value.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="dataElement">The element to consider.</param>
            <param name="isDeepCheck">Indicates whether other rules than allowed and forbidden values are checked.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Constraints.DataConstraintStatement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.Constraints.TextFormatKind">
            <summary>
            This enumeration lists the possible kinds of text formats.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Constraints.TextFormatKind.None">
            <summary>
            No format.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Constraints.TextFormatKind.Email">
            <summary>
            Email format.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Constraints.TextFormatKind.StrongPassword">
            <summary>
            Strong password (Must be at least 10 characters,
            Must contain at least one one lower case letter, one upper case letter, one digit and one special character
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.DataAreaKind">
            <summary>
            This enumeration lists the possible kinds of data areas.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.DataAreaKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.DataAreaKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.DataAreaKind.Constraints">
            <summary>
            Constraint attributes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.DataAreaKind.Design">
            <summary>
            Design attribute.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.DataAreaKind.Items">
            <summary>
            Item attribute.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.DataAreaKind.Properties">
            <summary>
            Property attribute.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.DataAreaSpecification">
            <summary>
            This class represents a data area specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataAreaSpecification.AreaName">
            <summary>
            The name of the area of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataAreaSpecification.#ctor">
            <summary>
            Initializes a new instance of the DataAreaSpecification class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataAreaSpecification.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataAreaSpecification class.
            </summary>
            <param name="arename">The name of the area to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataAreaSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new instance of the DataAreaSpecification class.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataAreaSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.DataSpecification">
            <summary>
            This abstract class represents a data specification.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataSpecification.RequirementLevel">
            <summary>
            The requirement level of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataSpecification.RequirementScript">
            <summary>
            The requirement script of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataSpecification.RequirementScriptSpecified">
            <summary>
            Specification of the RequirementScript property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataSpecification.InheritanceLevel">
            <summary>
            The level of inheritance of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataSpecification.SpecificationLevels">
            <summary>
            Levels of specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataSpecification.SpecificationLevelsSpecified">
            <summary>
            Specification of the SpecificationLevels property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.DataSpecification.AccessibilityLevel">
            <summary>
            Level of accessibility of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataSpecification.#ctor">
            <summary>
            Initializes a new data specification.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataSpecification.#ctor(BindOpen.Framework.Core.Data.Common.AccessibilityLevel,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.SpecificationLevel})">
            <summary>
            Initializes a new data element specification.
            </summary>
            <param name="accessibilityLevel">The accessibilty level of this instance.</param>
            <param name="specificationLevels">The specification levels of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Framework.Core.Data.Items.DataItem)">
            <summary>
            Indicates whether this instance is compatible with the specified data item.
            </summary>
            <param name="item">The data item to consider.</param>
            <returns>True if this instance is compatible with the specified data item.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataSpecification.Update(BindOpen.Framework.Core.Data.Elements.DataElementSpecification,System.Collections.Generic.List{System.String})">
            <summary>
            Update this instance with the specified collections.
            </summary>
            <param name="referenceSpecification">The reference specification to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <returns>Returns the log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataSpecification.Check(BindOpen.Framework.Core.Data.Specification.DataSpecification)">
            <summary>
            Check this instance with the specified collections on the specific element areas.
            </summary>
            <param name="referenceSpecification">The reference specification to consider.</param>
            <returns>Returns the log of the operation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataSpecification.Repair(BindOpen.Framework.Core.Data.Specification.DataSpecification)">
            <summary>
            Update this instance with the specified collections.
            </summary>
            <param name="referenceSpecification">The reference specification to consider.</param>
            <returns>Returns the log of the operation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.DataSpecification.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.Design.DataElementDesignStatement">
            <summary>
            This class represents a data element design statement.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Design.DataElementDesignStatement.ControlWidth">
            <summary>
            Control with of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Design.DataElementDesignStatement.ControlWidthSpecified">
            <summary>
            Specification of the ControlWidth property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Design.DataElementDesignStatement.ControlType">
            <summary>
            Control type of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Design.DataElementDesignStatement.#ctor">
            <summary>
            Initializes a new instance of the DataElementDesignStatement class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType">
            <summary>
            This enumeration lists the possible design control types.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.Auto">
            <summary>
            Auto.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.TextBox">
            <summary>
            Text box.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.CheckBox">
            <summary>
            Check box.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.RadioButtonList">
            <summary>
            Radio button list.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.Calendar">
            <summary>
            Calendar.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.ListBox">
            <summary>
            List box.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.ComboBox">
            <summary>
            Combo box.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.Label">
            <summary>
            Label.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.LinkButton">
            <summary>
            Linkbutton.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.Hyperlink">
            <summary>
            Hyerplink.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.DownloadLinkButton">
            <summary>
            Download Linkbutton.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.MemoTextBox">
            <summary>
            Memo Textbox.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.PasswordTextBox">
            <summary>
            Password Textbox.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.EntityEditor">
            <summary>
            Entity editor.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.ProgressBar">
            <summary>
            Progress bar.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.TimeSelector">
            <summary>
            Time selector.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.WeekDaySelector">
            <summary>
            Week day selector.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.DictionaryEditor">
            <summary>
            Global object editor.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.DatabaseTableEditor">
            <summary>
            Database table editor.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.EmailEditor">
            <summary>
            Email editor.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.CarrierConfigurationEditor">
            <summary>
            Data carrier editor.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.DataSourceEditor">
            <summary>
            Data source editor.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.DocumentEditor">
            <summary>
            Document editor.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.ListEditor">
            <summary>
            Editor of list.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Data.Specification.Design.DesignControlType.Custom">
            <summary>
            Custom control using schema.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.Design.DataControlTypeExtension">
            <summary>
            This class represents an extension of the DataValueType enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Design.DataControlTypeExtension.GetDefaultControlType(BindOpen.Framework.Core.Data.Common.DataValueType)">
            <summary>
            Gets the default control type.
            </summary>
            <param name="valueType">The object to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Design.DataControlTypeExtension.GetDefaultControlType(System.Type)">
            <summary>
            Gets the default control type.
            </summary>
            <param name="aType">The type to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter">
            <summary>
            This interface specifies the data value filter.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.AddedValues">
            <summary>
            The added values of this instance.
            </summary>
            <remarks>If empty then all the values are added.</remarks>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.AddedValuesSpecified">
            <summary>
            Specification of the AddedValues property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.RemovedValues">
            <summary>
            The removed values of this instance.
            </summary>
            <remarks>If empty then no value is removed.</remarks>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.RemovedValuesSpecified">
            <summary>
            Specification of the RemovedValues property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.#ctor">
            <summary>
            Instantiates a new instance of the DataValueFilter class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates a new instance of the DataValueFilter class specifying the action kind.
            </summary>
            <param name="addedValues">The allowed values to consider.</param>
            <param name="removedValues">The forbidden values to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.GetValues(System.Collections.Generic.List{System.String})">
            <summary>
            Gets the values allowed by this instance.
            </summary>
            <param name="allValues">All the values to consider.</param>
            <returns>Returns all the values allowed by this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.IsValueAllowed(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Indicates whether the value is allowed by this instance.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="allValues">All the values to consider.</param>
            <returns>Returns True if the specified is validated by this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.Repair(System.Collections.Generic.List{System.String})">
            <summary>
            Repairs this instance.
            </summary>
            <param name="allValues">All the values to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilter.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilterStatement">
            <summary>
            This interface specifies the value filter statement.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilterStatement.Specifications">
            <summary>
            Specifications of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Data.Specification.Filters.DataValueFilterStatement.#ctor">
            <summary>
            Instantiates a new instance of the DataValueFilterStatement class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.AppExtension">
            <summary>
            This class represents an application extension.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.AppExtension._Libraries">
            <summary>
            Libraries of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.AppExtension._appDomain">
            <summary>
            The application domain of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtension.Libraries">
            <summary>
            Libraries of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtension.AppDomain">
            <summary>
            Application domain of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.#ctor">
            <summary>
            Instantiates a new instance of the AppExtension class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.#ctor(System.AppDomain)">
            <summary>
            Instantiates a new instance of the AppExtension class.
            </summary>
            <param name="appDomain">The application domain to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetLibraryNames">
            <summary>
            Returns the names of the libraries.
            </summary>
            <returns>Returns the names of the libraries of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetLibrary(System.String)">
            <summary>
            Returns the specified library.
            </summary>
            <param name="name">The name of the library to consider.</param>
            <returns>The library with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetLibraryDefinition(System.String)">
            <summary>
            Returns the specified library definition.
            </summary>
            <param name="name">The name of the library to consider.</param>
            <returns>The library with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetLibraries(System.Collections.Generic.List{System.String})">
            <summary>
            Returns the specified library.
            </summary>
            <param name="names">The names of the libraries to consider.</param>
            <returns>The libraries with the specified names.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetLibraryDefinitions">
            <summary>
            Returns the library definitions of this instance.
            </summary>
            <returns>Returns the library definitions of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetItemDefinitions``1(System.Collections.Generic.List{System.String})">
            <summary>
            Returns the item definitions of this instance.
            </summary>
            <param name="libraryNames">The names of libraries to consider.</param>
            <returns>The script words of specified library names.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetItemDefinitionWithUniqueName``1(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Returns the item definition with the specified unique name.
            </summary>
            <param name="uniqueName">The unique name of item to return.</param>
            <param name="libraryNames">The names of libraries to consider.</param>
            <returns>The item with the specified unique name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetParentScriptWordDefinitions(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Returns the possible parent definitions of the specified script word definition.
            </summary>
            <param name="definitionName">The definition name to consider.</param>
            <param name="libraryNames">The names of libraries to consider.</param>
            <returns>The parent definitions of the specified script word definition.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.AddLibrary(BindOpen.Framework.Core.Extensions.Libraries.Library)">
            <summary>
            Adds the specified library.
            </summary>
            <param name="library">The dynamic library to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetAsssembly(System.String)">
            <summary>
            Gets the specified assembly.
            </summary>
            <param name="assemblyName">The name of the assembly to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetItemClassReference(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind,System.String,BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition@)">
            <summary>
            Gets the extension item class reference of the specified object.
            </summary>
            <param name="extensionItemKind">The extension item kind to consider.</param>
            <param name="uniqueName">The unique name of the extension item defintion to consider.</param>
            <param name="extensionItemDefinition">The corresponding library item definition.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetItemClassReference(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind,System.String)">
            <summary>
            Gets the extension item class reference of the specified object.
            </summary>
            <param name="extensionItemKind">The extension item kind to consider.</param>
            <param name="uniqueName">The unique name of the extension item defintion to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetViewerClassReference(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind,System.String,System.String)">
            <summary>
            Gets the class reference of the specified viewer.
            </summary>
            <param name="extensionItemKind">The extension item kind to consider.</param>
            <param name="uniqueName">The unique name of the library item to consider.</param>
            <param name="viewerKey">The viewer key to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.CreateConfiguration``1(System.String,System.String,BindOpen.Framework.Core.System.Diagnostics.Log,System.Object[])">
            <summary>
            Creates the instance of the specified definition.
            </summary>
            <param name="definitionName">The unique name of the definition to consider.</param>
            <param name="xmlString">The XML string to consider.</param>
            <param name="log">The log to consider.</param>
            <param name="parameters">The object parameters to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetItemType(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind,System.String)">
            <summary>
            Gets the type of the specified library item.
            </summary>
            <param name="extensionItemKind">The extension item kind to consider.</param>
            <param name="uniqueName">The unique name of the object to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.CreateInstance(BindOpen.Framework.Core.System.Assemblies.AssemblyHelper.ClassReference,System.Object@,System.Object[])">
            <summary>
            Creates the instance of the specified extension object instance type.
            </summary>
            <param name="classReference">The class reference to consider.</param>
            <param name="object1">The object to consider.</param>
            <param name="attributes">The attributes to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadDataItemInstance(BindOpen.Framework.Core.System.Assemblies.AssemblyHelper.ClassReference,System.String,System.Object@)">
            <summary>
            Loads the specified instance.
            </summary>
            <param name="classReference">The class reference to consider.</param>
            <param name="xmlString">The XML string to consider.</param>
            <param name="object1">The object to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetTypeFromAssemblyReference(BindOpen.Framework.Core.System.Assemblies.AssemblyHelper.ClassReference)">
            <summary>
            Gets the specified type from the specified assembly reference.
            </summary>
            <param name="classReference">The class reference to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(BindOpen.Framework.Core.Extensions.AppExtensionConfiguration)">
            <summary>
            Loads the specified library.
            </summary>
            <param name="extensionConfiguration">The extension loading order to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex,System.String,System.String,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind})">
            <summary>
            Loads the specified library.
            </summary>
            <param name="libraryIndex">The library index to consider.</param>
            <param name="libraryName">The name of libraries to consider.</param>
            <param name="libraryFolderPath">The path of the library folder to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <param name="dataSourceKinds">The kinds of data sources to consider.</param>
            <returns>The log of the load task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex,System.Collections.Generic.List{System.String},System.String,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind})">
            <summary>
            Loads the specified library.
            </summary>
            <param name="libraryIndex">The library index to consider.</param>
            <param name="libraryNames">The names of libraries to consider.</param>
            <param name="libraryFolderPath">The path of the library folder to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <param name="dataSourceKinds">The kinds of data sources to consider.</param>
            <returns>The log of the load task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Libraries.Library}@,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind},System.String)">
            <summary>
            Loads the specified library.
            </summary>
            <param name="libraryIndex">The library index to consider.</param>
            <param name="loadedLibraries">The loaded libraries to consider.</param>
            <param name="libraryNames">The names of libraries to consider.</param>
            <param name="libraryFolderPath">The path of the library folder to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <param name="dataSourceKinds">The kinds of data sources to consider.</param>
            <returns>The log of the load task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibraryFromFile(System.String,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind},System.String)">
            <summary>
            Loads the specifed libraries in the specified way.
            </summary>
            <param name="completeFilePath">The file path to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <returns>The log of the load task.</returns>
            <remarks>If null then we load the existing library names.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibraryFromFile(System.String,BindOpen.Framework.Core.Extensions.Libraries.Library@,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind},System.String)">
            <summary>
            Loads the specifed libraries in the specified way.
            </summary>
            <param name="completeFilePath">The file path to consider.</param>
            <param name="loadedLibrary">The loaded library to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <returns>The log of the load task.</returns>
            <remarks>If null then we load the existing library names.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibraryFromFile(System.String,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Libraries.Library}@,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind},System.String)">
            <summary>
            Loads the specifed libraries in the specified way.
            </summary>
            <param name="completeFilePath">The file path to consider.</param>
            <param name="loadedLibraries">The loaded libraries to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <returns>The log of the load task.</returns>
            <remarks>If null then we load the existing library names.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(System.String,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind})">
            <summary>
            Loads the specifed libraries in the specified way.
            </summary>
            <param name="libraryAssemblyName">The library assembly name to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <returns>The log of the load task.</returns>
            <remarks>If null then we load the existing library names.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(System.String,BindOpen.Framework.Core.Extensions.Libraries.Library@,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind})">
            <summary>
            Loads the specifed libraries in the specified way.
            </summary>
            <param name="libraryAssemblyName">The library assembly name to consider.</param>
            <param name="loadedLibrary">The loaded library to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <returns>The log of the load task.</returns>
            <remarks>If null then we load the existing library names.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind})">
            <summary>
            Loads the specifed libraries in the specified way.
            </summary>
            <param name="libraryAssemblyNames">The library assembly names to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <returns>The log of the load task.</returns>
            <remarks>If null then we load the existing library names.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.LoadLibrary(System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Libraries.Library}@,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind})">
            <summary>
            Loads the specifed libraries in the specified way.
            </summary>
            <param name="libraryAssemblyNames">The library assembly names to consider.</param>
            <param name="loadedLibraries">The loaded libraries to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <returns>The log of the load task.</returns>
            <remarks>If null then we load the existing library names.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetDictionaryType(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind)">
            <summary>
            Gets the dictionary type of the specified extension item kind.
            </summary>
            <param name="libraryItemKind">The extension item kind to consider.</param>
            <returns>The Xml string of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtension.GetClassName(System.String)">
            <summary>
            Gets the class name of the specified complete name.
            </summary>
            <param name="completeName">The complete name to consider.</param>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration">
            <summary>
            This class represents the extension configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.Filters">
            <summary>
            The filters of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.DefaultSourceKinds">
            <summary>
            The source kinds of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.DefaultFolderPath">
            <summary>
            The path of the folder of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.#ctor(BindOpen.Framework.Core.Extensions.AppExtensionFilter[])">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
            <param name="filters">The filters to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.#ctor(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind},BindOpen.Framework.Core.Extensions.AppExtensionFilter[])">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
            <param name="sourceKinds">The source kinds to consider.</param>
            <param name="filters">The filters to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.#ctor(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind},System.String,BindOpen.Framework.Core.Extensions.AppExtensionFilter[])">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
            <param name="filters">The filters to consider.</param>
            <param name="sourceKinds">The source kinds to consider.</param>
            <param name="libraryFolderPath">The librayr folder path to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.#ctor(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind},System.String)">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
            <param name="defaultSourceKinds">The source kinds to consider.</param>
            <param name="defaultLibraryFolderPath">The librayr folder path to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.AddExtensionFilter(BindOpen.Framework.Core.Extensions.AppExtensionFilter)">
            <summary>
            Adds the specified fileter.
            </summary>
            <param name="filter">The filter to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.AddExtension(System.String,System.String,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind},System.String)">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
            <param name="libraryName">The library name to consider.</param>
            <param name="libraryFileName">The library file name to consider.</param>
            <param name="sourceKinds">The source kinds to consider.</param>
            <param name="libraryFolderPath">The librayr folder path to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.Merge(BindOpen.Framework.Core.Extensions.AppExtensionConfiguration)">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.GetFilters">
            <summary>
            Gets the filters of this instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionConfiguration.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.AppExtensionFilter">
            <summary>
            This class represents the extension filter.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtensionFilter.FileName">
            <summary>
            The file name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtensionFilter.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtensionFilter.SourceKinds">
            <summary>
            The source kinds of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.AppExtensionFilter.FolderPath">
            <summary>
            The path of the folder of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionFilter.#ctor">
            <summary>
            Instantiates a new instance of the AppExtensionFilterItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionFilter.#ctor(System.String,System.String,System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind},System.String)">
            <summary>
            Instantiates a new instance of the AppExtensionConfiguration class.
            </summary>
            <param name="libraryName">The library name to consider.</param>
            <param name="libraryFileName">The library file name to consider.</param>
            <param name="sourceKinds">The source kinds to consider.</param>
            <param name="libraryFolderPath">The librayr folder path to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.AppExtensionFilter.ToDefinition">
            <summary>
            Gets the library definition from this instance.
            </summary>
            <returns>Gets the library definition from this instance.</returns>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.GroupId">
            <summary>
            ID of the group of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.GroupIdSpecified">
            <summary>
            Specification of the GroupId property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.ValueType">
            <summary>
            The value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.Aliases">
            <summary>
            The aliases of the entry.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.AreaSpecifications">
            <summary>
            The area specifications of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.IsAllocatable">
            <summary>
            Indicates whether the instance can be allocated.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.AvailableItemizationModes">
            <summary>
            The available itemization modes of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.DefaultStringItems">
            <summary>
            Default string items of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.MinimumItemNumber">
            <summary>
            Minimum item number of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.MaximumItemNumber">
            <summary>
            Maximum item number of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.IsValueList">
            <summary>
            Indicates whether the value of this instance is a list.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.ItemRequirementLevel">
            <summary>
            The item requirement level of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.ItemSpecificationLevels">
            <summary>
            Levels of specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Attributes.DataElementAttribute.#ctor">
            <summary>
            Instantiates a new instance of the DataElementAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Attributes.DetailPropertyAttribute">
            <summary>
            This class represents a detail property attribute.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Attributes.DetailPropertyAttribute.#ctor">
            <summary>
            Instantiates a new instance of the DetailPropertyAttribute class.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.Id">
            <summary>
            The ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.Title">
            <summary>
            The title of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.Description">
            <summary>
            The description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.CreationDate">
            <summary>
            The creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.LastModificationDate">
            <summary>
            The last modification date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Attributes.ExtensionItemAttribute.#ctor">
            <summary>
            Instantiates a new instance of the ExtensionItemAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Attributes.ParameterAttribute">
            <summary>
            This class represents a parameter attribute.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Attributes.ParameterAttribute.#ctor">
            <summary>
            Instantiates a new instance of the ParameterAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Attributes.ScalarAttribute">
            <summary>
            This class represents an scalar attribute.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Attributes.ScalarAttribute.#ctor">
            <summary>
            Instantiates a new instance of the ScalarAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Attributes.TaskInputAttribute">
            <summary>
            This class represents a input detail property attribute.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Attributes.TaskInputAttribute.#ctor">
            <summary>
            Instantiates a new instance of the InputDetailPropertyAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Attributes.TaskOutputAttribute">
            <summary>
            This class represents a output detail property attribute.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Attributes.TaskOutputAttribute.#ctor">
            <summary>
            Instantiates a new instance of the OutputAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.BasicExtensionUniqueName">
            <summary>
            This enumeration represents the possible basic extension unique names.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.BasicExtensionUniqueName.Standard">
            <summary>
            Standard.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.BasicExtensionUniqueName.Database">
            <summary>
            Database.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.BasicExtensionUniqueName.Session">
            <summary>
            Session.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.BasicExtensionUniqueName.FormsGrids">
            <summary>
            Forms and grids.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.BasicExtensionUniqueName.Messages">
            <summary>
            Messages.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.BasicExtensionUniqueName.Bpm">
            <summary>
            BPM.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind">
            <summary>
            This enumeration represents the possible kinds of library items.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Task">
            <summary>
            Task.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Carrier">
            <summary>
            Carrier.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Connector">
            <summary>
            Connector.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.ContextExtension">
            <summary>
            Context extension.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Entity">
            <summary>
            Entity.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Format">
            <summary>
            Format.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Handler">
            <summary>
            Handler.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.Metrics">
            <summary>
            Metrics.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.RoutineConfiguration">
            <summary>
            RoutineConfiguration.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind.ScriptWord">
            <summary>
            Script word.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKindExtension">
            <summary>
            This class represents an extension item kind extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKindExtension.GetExtensionItemKind(BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition)">
            <summary>
            Gets the extension item kind corresponding to the specified object.
            </summary>
            <param name="appExtensionItemDefinition">The application extension item to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKindExtension.GetExtensionItemKind(System.Type)">
            <summary>
            Gets the extension item kind corresponding to the specified type.
            </summary>
            <param name="type">The type to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind">
            <summary>
            This enumeration represents the possible kinds of library item viewers.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.Connector">
            <summary>
            Connector.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.Metrics">
            <summary>
            Metrics.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.ScriptWord">
            <summary>
            Script word.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.Task">
            <summary>
            Task.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.DataQuery">
            <summary>
            Data query.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.DataClass">
            <summary>
            Data class.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Common.AppExtensionViewerKind.FormatConfiguration">
            <summary>
            Data format.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration">
            <summary>
            This class represents a carrier configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.Path">
            <summary>
            Path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.PathSpecified">
            <summary>
            Specification of the Path property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.ParentPath">
            <summary>
            The parent path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.ParentPathSpecified">
            <summary>
            Specification of the ParentPath property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.Detail">
            <summary>
            The detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.DetailSpecified">
            <summary>
            Specification of the Detail property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.Flag">
            <summary>
            The information flag of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.FlagSpecified">
            <summary>
            Specification of the Flag property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.IsReadonly">
            <summary>
            Indicates whether this instance is read only.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.LastAccessDate">
            <summary>
            The date of last access of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.LastAccessDateSpecified">
            <summary>
            Specification of the LastAccessDate property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.LastWriteDate">
            <summary>
            The date of last write of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.LastWriteDateSpecified">
            <summary>
            Specification of the LastWriteDate property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the CarrierConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.#ctor(System.String,System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Instantiates a new instance of the CarrierConfiguration class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="path">The path to consider.</param>
            <param name="detail">The detail to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.NewDetail">
            <summary>
            Gets the detail of this instance and instantiates it if it is null.
            </summary>
            <returns>Returns the detail of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.Check``1(System.Boolean,``0,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Checks this instance.
            </summary>
            <param name="isExistenceChecked">Indicates whether the carrier existence is checked.</param>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.Repair``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfigurationFactory">
            <summary>
            This class represents a carrier configuration factory.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfigurationFactory.CreateConfiguration(BindOpen.Framework.Core.Application.Scopes.AppScope,System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a connector of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="carrierUniqueName">The unique name of connector to create.</param>
            <param name="path">The path to consider.</param>
            <param name="detail">The detail to consider.</param>
            <param name="relativePath">The relative path to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfigurationFactory.CreateConfiguration(BindOpen.Framework.Core.Application.Scopes.AppScope,System.String,System.String,System.String,System.Dynamic.DynamicObject,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a connector of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="carrierUniqueName">The unique name of connection to create.</param>
            <param name="path">The path to consider.</param>
            <param name="pathDynamicObject">The path dynamic object to consider.</param>
            <param name="relativePath">The relative path to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration">
            <summary>
            This class represents a connector configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.DataSourceKind">
            <summary>
            The data source kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.Detail">
            <summary>
            Detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.DetailSpecified">
            <summary>
            Specification of the Detail property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.ConnectionString">
            <summary>
            The connection string of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.ConnectionStringSpecified">
            <summary>
            Specification of the ConnectionString property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the ConnectorConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.#ctor(System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            This instantiates a new instance of the ConnectorConfiguration class.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="connectionString">The connection string of this instance.</param>
            <param name="detail">The path detail to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.NewDetail">
            <summary>
            Gets the detail of this instance and instantiates it if it is null.
            </summary>
            <returns>Returns the detail of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.UpdateConnectionString(System.String)">
            <summary>
            Sets the connection string with the specified string.
            </summary>
            <param name="connectionString">The connection string to consider.</param>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.SetDefinition(BindOpen.Framework.Core.Extensions.Definition.Connectors.ConnectorDefinition,System.Boolean)">
            <summary>
            Sets the definition of this instance.
            </summary>
            <param name="definition">The definition to consider.</param>
            <param name="isDefinitionChecked">Indicates whether the definition must be checked.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned connector of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.Check``1(System.Boolean,``0,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Checks this instance.
            </summary>
            <param name="isExistenceChecked">Indicates whether the carrier existence is checked.</param>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration.Repair``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfigurationFactory">
            <summary>
            This class represents a connector configuration factory.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfigurationFactory.Create(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String,System.String,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a connector of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="definitionName">The unique name of connector to create.</param>
            <param name="connectionString">The connection string of this instance.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfigurationFactory.Create(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String,System.String,System.Dynamic.DynamicObject,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a connector of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="definitionName">The unique name of connection to create.</param>
            <param name="dynamicObject">The object parameters to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfigurationFactory.Create(BindOpen.Framework.Core.Application.Scopes.IAppScope,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a connector of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="name">The name of connector to create.</param>
            <param name="definitionName">The unique name of connection to create.</param>
            <param name="detail">The detail to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration">
            <summary>
            This class represents an entity configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration.Detail">
            <summary>
            The detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration.Schema">
            <summary>
            The schema of this instance. 
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the EntityConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration.#ctor(System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            This instantiates a new instance of the EntityConfiguration class.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="detail">The path detail to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfigurationFactory">
            <summary>
            This class represents a entity configuration factory.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Formats.FormatConfiguration">
            <summary>
            This class represents an format.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Formats.FormatConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the FormatConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Formats.FormatConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            This instantiates a new instance of the FormatConfiguration class.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Formats.FormatConfiguration.LoadFromXmlString(System.String)">
            <summary>
            Instantiates a new instance of SettingsDefinition class from a xml string.
            </summary>
            <param name="xmlString">The Xml string to load.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Formats.FormatConfiguration.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Metrics.MetricsConfiguration">
            <summary>
            This class represents a metrics configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Metrics.MetricsConfiguration.ValueScript">
            <summary>
            Value script of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Metrics.MetricsConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the MetricsConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Metrics.MetricsConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            This instantiates a new instance of the MetricsConfiguration class.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Metrics.MetricsConfiguration.GetValue(BindOpen.Framework.Core.System.Scripting.ScriptInterpreter,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Gets the value of this instance.
            </summary>
            <param name="scriptInterpreter">The script interpreter to consider.</param>
            <param name="scriptVariableSet">The interpretation variables to consider.</param>
            <returns>Returns the value of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Metrics.MetricsConfiguration.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Routines.BasicRoutineKind">
            <summary>
            This enumeration represents the basic routine kinds.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Routines.BasicRoutineKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Routines.BasicRoutineKind.ItemMustNotBeEmpty">
            <summary>
            RoutineConfiguration that checks that item is not empty.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Routines.BasicRoutineKind.ItemMustBeInList">
            <summary>
            RoutineConfiguration that checks that item is in list.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration">
            <summary>
            This class represents a routine configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.ParameterDetail">
            <summary>
            The parameter detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.CommandSet">
            <summary>
            The command set of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.OutputEventSet">
            <summary>
            The output event set of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the RoutineConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.#ctor(System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,BindOpen.Framework.Core.Data.Items.Sets.DataItemSet{BindOpen.Framework.Core.Application.Commands.Command},BindOpen.Framework.Core.Data.Items.Sets.DataItemSet{BindOpen.Framework.Core.System.Diagnostics.Events.ConditionalEvent})">
            <summary>
            Instantiates a new instance of the RoutineConfiguration class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The defintion unique name to consider.</param>
            <param name="parameterDetail">The parameter detail to consider.</param>
            <param name="commandSet">The command set to consider.</param>
            <param name="outputEventSet">The output event set to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.NewParameterDetail">
            <summary>
            Gets the detail of this instance and instantiates it if it is null.
            </summary>
            <returns>Returns the detail of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.NewCommandSet">
            <summary>
            Gets the command set of this instance and instantiates it if it is null.
            </summary>
            <returns>Returns the detail of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.NewOutputEventSet">
            <summary>
            Gets the output event set of this instance and instantiates it if it is null.
            </summary>
            <returns>Returns the detail of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a cloned instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfigurationFactory">
            <summary>
            This class represents a routine configuration factory.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfigurationFactory.CreateConfiguration(BindOpen.Framework.Core.Application.Scopes.AppScope,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a routine of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="routineUniqueName">The unique name of connection to create.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfigurationFactory.CreateConfiguration(BindOpen.Framework.Core.Application.Scopes.AppScope,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet,BindOpen.Framework.Core.Data.Items.Sets.DataItemSet{BindOpen.Framework.Core.Application.Commands.Command},BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a routine of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="routineUniqueName">The unique name of connection to create.</param>
            <param name="parameterDetail">The parameter detail to consider.</param>
            <param name="aCommandSet">The command set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfigurationFactory.CreateConfiguration(BindOpen.Framework.Core.Application.Scopes.AppScope,System.String,BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Creates a routine of the specified unique name.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="routineUniqueName">The unique name of connection to create.</param>
            <param name="referenceRoutineConfiguration">The reference routine configuration to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created connector.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord">
            <summary>
            This class represents a script word configuration.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.Kind">
            <summary>
            Kind of this instance.
            </summary>
            <example>Script word, syntax, text...</example>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.ParameterDetail">
            <summary>
            Parameter detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.Parent">
            <summary>
            Parent of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.SubScriptWord">
            <summary>
            Sub script words of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.Item">
            <summary>
            The item of this instance that is the result of interpretation.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.StringItem">
            <summary>
            The item of this instance as a string.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.#ctor">
            <summary>
            Instantiates a new instance of the ScriptWord class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of the ScriptWord class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.NewParameterDetail">
            <summary>
            Gets the detail of this instance and instantiates it if it is null.
            </summary>
            <returns>Returns the detail of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.Root">
            <summary>
            Get the root script word of this instance.
            </summary>
            <returns>The root script word of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.Last">
            <summary>
            Gets the last target of this instance.
            </summary>
            <returns>Returns the last target of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1">
            <summary>
            This class represents an application extension item configuration.
            </summary>
            <typeparam name="T">The definition class of this instance.</typeparam>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.DefinitionUniqueId">
            <summary>
            Definition unique ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.DefinitionUniqueIdSpecified">
            <summary>
            Specification of the DefinitionUniqueName property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.Definition">
            <summary>
            The definition of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.Group">
            <summary>
            The group of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.GroupSpecified">
            <summary>
            Specification of the Group property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.#ctor">
            <summary>
            Instantiates a new instance of the TAppExtensionItemConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.#ctor(System.String,System.String,`0,System.String)">
            <summary>
            Instantiates a new instance of the TAppExtensionItemConfiguration class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="definition">The definition to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.GetExtensionItemKind">
            <summary>
            Gets the extension item kind of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.InitializeDefinition">
            <summary>
            Initializes the definition of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.SetDefinition(`0,System.Boolean)">
            <summary>
            Sets the definition of this instance.
            </summary>
            <param name="definition">The definition to consider.</param>
            <param name="isDefinitionChecked">Indicates whether the definition must be checked.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.SetDefinition(BindOpen.Framework.Core.Extensions.AppExtension,System.String)">
            <summary>
            Sets the specififed definition.
            </summary>
            <param name="appExtension">The application extension to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1">
            <summary>
            This class represents an application extension titled item configuration.
            </summary>
            <typeparam name="T">The definition class of this instance.</typeparam>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.Title">
            <summary>
            Title of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.TitleSpecified">
            <summary>
            Specification of the Title property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.Description">
            <summary>
            Description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.DescriptionSpecified">
            <summary>
            Specification of the Description property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.#ctor">
            <summary>
            Instantiates a new instance of the TAppExtensionTitledItemConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.#ctor(System.String,System.String,`0,System.String)">
            <summary>
            Creates a new instance of the TAppExtensionTitledItemConfiguration class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="definition">The definition to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.AddTitleText(System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.SetTitleText(System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)">
            <summary>
            Adds the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)">
            <summary>
            Sets the title text.
            </summary>
            <param name="key">The key to consider.</param>
            <param name="text">The text to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)">
            <summary>
            Returns the title label.
            </summary>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)">
            <summary>
            Returns the description label.
            </summary>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionTitledItemConfiguration`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration">
            <summary>
            This class represents an task.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.Detail">
            <summary>
            Detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.DetailSpecified">
            <summary>
            Specification of the DetailSpecified property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.MaximumIndex">
            <summary>
            Maximum index of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.InputDetail">
            <summary>
            Input detail of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.OutputDetail"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.InputDetailSpecified">
            <summary>
            Specification of the InputSpecified property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.OutputDetail">
            <summary>
            Output detail of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.InputDetail"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.OutputDetailSpecified">
            <summary>
            Specification of the OutputSpecified property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.#ctor">
            <summary>
            Instantiates a new instance of the TaskConfiguration class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.#ctor(System.String,System.String,System.String,BindOpen.Framework.Core.Data.Elements.Sets.DataElementSet)">
            <summary>
            Instantiates a new instance of the TaskConfiguration class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="inputDetail">The input detail to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.GetEntries(BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind[])">
            <summary>
            Gets the specified entries.
            </summary>
            <param name="taskEntryKinds">The kind end entries to consider.</param>
            <returns>True if this instance is configurable.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.GetEntryWithName(System.String,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind[])">
            <summary>
            Returns the entry of the specified kind with the specified unique name.
            </summary>
            <param name="uniqueName">The unique name to consider.</param>
            <param name="taskEntryKinds">The kind end entries to consider.</param>
            <returns>Returns the input with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.GetEntryValueWithName(System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind[])">
            <summary>
            Gets the value of the specified entry.
            </summary>
            <param name="name">The name of the entry to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to populate.</param>
            <param name="taskEntryKinds">The kind end entries to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.IsCompatibleWith(BindOpen.Framework.Core.Data.Elements.Sets.DataElementSpecificationSet,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind)">
            <summary>
            Indicates whether this instance has compatible entries with the specified element collection.
            </summary>
            <param name="dataElementSpecificationSet">The set of element specifications to consider.</param>
            <param name="taskEntryKind">The task entry kind to consider.</param>
            <returns>True if this instance is compatible with the specified element collection.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.IsCompatibleWith(System.Collections.Generic.List{BindOpen.Framework.Core.Data.Elements.DataElementSpecification},BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind)">
            <summary>
            Indicates whether this instance has compatible entries with the specified elements.
            </summary>
            <param name="dataElementSpecifications">The data elements to consider.</param>
            <param name="taskEntryKind">The kind end entry to consider.</param>
            <returns>True if this instance is compatible with the specified data elements.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.IsConfigurable(BindOpen.Framework.Core.Data.Common.SpecificationLevel)">
            <summary>
            Indicates whether this instance is configurable.
            </summary>
            <returns>True if this instance is configurable.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.UpdateProperty(BindOpen.Framework.Core.Data.Elements.DataElement,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates the relevant property based on the specified object attribute.
            </summary>
            <param name="dataElement">The object attribute to consider.</param>
            <param name="taskEntryKind">The task entry kind to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of the update task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.UpdateInputPropertiesFromInputDetail(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates the input properties from input detail.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of the update task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.UpdateNonScalarOutputPropertiesFromOutputDetail(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates the non-value output properties from output detail.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>The log of the update task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.UpdateOutputDetailFromOutputProperties">
            <summary>
            Updates output detail from the output properties.
            </summary>
            <returns>The log of the update task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.UpdateAbsolutePaths(System.String)">
            <summary>
            Updates the relative paths of this instance.
            </summary>
            <param name="relativePath">The relative path to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the cloned metrics definition.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.Update``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Updates this instance.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
            <remarks>Put reference collections as null if you do not want to repair this instance.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.Check``1(System.Boolean,``0,System.Collections.Generic.List{System.String},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Checks this instance.
            </summary>
            <param name="isExistenceChecked">Indicates whether the carrier existence is checked.</param>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration.Repair``1(``0,System.Collections.Generic.List{System.String},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Common.UpdateMode},BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Repairs this instance with the specified definition.
            </summary>
            <param name="item">The item to consider.</param>
            <param name="specificationAreas">The specification areas to consider.</param>
            <param name="updateModes">The update modes to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <returns>Log of the operation.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfigurationFactory">
            <summary>
            This class represents a task configuration factory.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind">
            <summary>
            This enumeration represents the possible task entry kinds.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind.Input">
            <summary>
            Input.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind.ScalarOutput">
            <summary>
            Scalar output.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind.NonScalarOutput">
            <summary>
            Non-scalar output.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKindExtension">
            <summary>
            This class represents an extension of the TaskEntryKind enumeration.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKindExtension.GetTitle(BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskEntryKind)">
            <summary>
            Returns the title of the specified entry kind.
            </summary>
            <param name="taskEntryKind">The entry kind to consider.</param>
            <returns>The result object.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.factories.FormatConfigurationFactory">
            <summary>
            This class represents a format configuration factory.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition">
            <summary>
            This class represents the definition of application extension item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.UniqueId">
            <summary>
            The unique ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.ImageUrl">
            <summary>
            Url of the image representing this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.ImageUrlSpecified">
            <summary>
            Specification of the ImageUrl property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.LibraryName">
            <summary>
            Business library ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.IsEditable">
            <summary>
            Indicates whether this instance is editable.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.IsIndexed">
            <summary>
            Indicates whether this instance is indexed.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.#ctor">
            <summary>
            Instantiates a new instance of the AppExtensionItemDefinition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the AppExtensionItemDefinition class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="preffix">The preffix to consider.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.Key">
            <summary>
            Returns the identifier key.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition.GetText(BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat,System.String)">
            <summary>
            Returns a text summarizing this instance.
            </summary>
            <param name="logFormat">The log format to consider.</param>
            <param name="uiCulture">The UI culture to consider.</param>
            <returns>A text summarizing this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemGroup">
            <summary>
            This class represents the group of application extension items.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemGroup.SubGroups">
            <summary>
            Sub groups of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemGroup.#ctor">
            <summary>
            Instantiates a new instance of the AppExtensionItemGroup class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemGroup.GetGroupWithName(System.String)">
            <summary>
            Returns the group with the specified name.
            </summary>
            <param name="name">The name of the sub group to return.</param>
            <returns>Returns the sub group with the specified name.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierAttribute">
            <summary>
            This class represents an attribute of carrier definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierAttribute.ItemClass">
            <summary>
            The item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierAttribute.DataSourceKind">
            <summary>
            The data source kind of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierAttribute.#ctor">
            <summary>
            Instantiates a new instance of the CarrierAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierDefinition">
            <summary>
            This class represents a script word definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierDefinition.ItemClass">
            <summary>
            The item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierDefinition.DataSourceKind">
            <summary>
            The data source kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierDefinition.PathSpecification">
            <summary>
            The set of element specifications of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierDefinition.#ctor">
            <summary>
            Instantiates a new instance of the CarrierDefinition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierDefinition.GetText(BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat,System.String)">
            <summary>
            Returns a text summarizing this instance.
            </summary>
            <param name="logFormat">The log format to consider.</param>
            <param name="uiCulture">The UI culture to consider.</param>
            <returns>A text summarizing this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Connectors.ConnectorDefinition">
            <summary>
            This class represents a connector definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Connectors.ConnectorDefinition.ItemClass">
            <summary>
            Item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Connectors.ConnectorDefinition.DataSourceKind">
            <summary>
            Data source kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Connectors.ConnectorDefinition.DetailSpecification">
            <summary>
            The data source element specification of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Connectors.ConnectorDefinition.#ctor">
            <summary>
            Instantiates a new instance of the ConnectorDefinition class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition">
            <summary>
            This class represents the entity definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.ItemClass">
            <summary>
            Item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.Kind">
            <summary>
            The kind of this instance. 
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.ViewerClass">
            <summary>
            Viewer class of this instance.
            </summary>
            <remarks>Class names using the following format: winForm=xxx.xxx.xxx;webForm=xxx.xxx.xxx</remarks>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.FormatDefinitions">
            <summary>
            Formats of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.PossibleMetaSchemas">
            <summary>
            The possible meta schemas of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.#ctor">
            <summary>
            Instantiates a new instance of the EntityDefinition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.GetFormatWithUniqueName(System.String)">
            <summary>
            Gets the format with the specified unique name.
            </summary>
            <param name="uniqueName">Unique name of the application module.</param>
            <returns>The current visitor application module.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.GetFormatWithName(System.String)">
            <summary>
            Gets the format with the specified name.
            </summary>
            <param name="name">Name of the application module.</param>
            <returns>The current visitor application module.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition.GetFormatWithId(System.String)">
            <summary>
            Gets the format with the specified ID.
            </summary>
            <param ID="id">Id of the application module.</param>
            <returns>The current visitor application module.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityKind">
            <summary>
            This enumeration lists all the possible kinds of entities.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityKind.Carrier">
            <summary>
            Data carrier.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityKind.Zone">
            <summary>
            Data zone.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Entities.EntityKind.SimpleItem">
            <summary>
            Simple item.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Formats.FormatDefinition">
            <summary>
            This class represents the format definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Formats.FormatDefinition.ItemClass">
            <summary>
            Item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Formats.FormatDefinition.ViewerClass">
            <summary>
            Viewer class of this instance.
            </summary>
            <remarks>Class using the following format: winForm=xxx.xxx.xxx;webForm=xxx.xxx.xxx</remarks>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Formats.FormatDefinition.DataSourceKind">
            <summary>
            Data source kind of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Formats.FormatDefinition.#ctor">
            <summary>
            Instantiates a new instance of the FormatDefinition class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition">
            <summary>
            This class represents a handler definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.CallingClass">
            <summary>
            The calling class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.GetFunctionName">
            <summary>
            Name of the GET function.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.PostFunctionName">
            <summary>
            Name of the POST function.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.SourceSpecification">
            <summary>
            The source specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.ParameterSpecification">
            <summary>
            The parameter specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.TargetSpecification">
            <summary>
            The target specification of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.RuntimeFunction_Get">
            <summary>
            Runtime GET function of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.RuntimeFunction_Post">
            <summary>
            Runtime POST function of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Handlers.HandlerDefinition.#ctor">
            <summary>
            Instantiates a new instance of the HandlerDefinition class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Metrics.MetricsDefinition">
            <summary>
            This class represents a metrics definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Metrics.MetricsDefinition.ItemClass">
            <summary>
            Item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Metrics.MetricsDefinition.UnitCode">
            <summary>
            Unit code of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Metrics.MetricsDefinition.#ctor">
            <summary>
            Instantiates a new instance of the MetricsDefinition class. 
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Routines.RoutineDefinition">
            <summary>
            This class represents a routine definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Routines.RoutineDefinition.ItemClass">
            <summary>
            The item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Routines.RoutineDefinition.ParameterStatement">
            <summary>
            The parameter statement of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Routines.RoutineDefinition.Commands">
            <summary>
            The commands of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Routines.RoutineDefinition.OutputResultCodes">
            <summary>
            The output result codes of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Routines.RoutineDefinition.#ctor">
            <summary>
            Initializes a new instance of the RoutineDefinition class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition">
            <summary>
            This class represents a script word definition.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.CallingClass">
            <summary>
            The calling class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.Kind">
            <summary>
            Kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RuntimeFunctionName">
            <summary>
            Name of the runtime function.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.ReferenceUniqueName">
            <summary>
            Reference unique name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.ReturnValueType">
            <summary>
            The return value type of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.ParameterSpecification">
            <summary>
            Parameter specification of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.IsRepeatedParameters">
            <summary>
            Indicates whether this instance has unlimited parameters. If true, parameters have 
            the same value type.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterValueType"/>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterName"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterValueType">
            <summary>
            Value type of parameters of this instance when parameters are repeated.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.IsRepeatedParameters"/>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterName"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterDescription">
            <summary>
            Description of parameters of this instance when parameters are repeated.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.IsRepeatedParameters"/>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterName"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterName">
            <summary>
            Name of parameters of this instance when parameters are repeated.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.IsRepeatedParameters"/>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RepeatedParameterValueType"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.MaxParameterNumber">
            <summary>
            Maximum number of parameters of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.MinParameterNumber">
            <summary>
            Minimum number of parameters of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.Children">
            <summary>
            The definitions of the sub words of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.RuntimeFunction">
            <summary>
            Calling function of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.#ctor">
            <summary>
            Instantiates a new instance of the ScriptWordDefinition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.GetDefaultRuntimeFunctionName">
            <summary>
            Returns the default runtime function name.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.GetRepeatedParameterDescriptionText(System.String,System.String)">
            <summary>
            Returns the repeated parameter description text.
            </summary>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition.GetText(BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat,System.String)">
            <summary>
            Returns a text summarizing this instance.
            </summary>
            <param name="logFormat">The log format to consider.</param>
            <param name="uiCulture">The UI culture to consider.</param>
            <returns>A text summarizing this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition">
            <summary>
            This class represents a task definition.
            </summary>
            <seealso cref="T:BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.ItemClass">
            <summary>
            Item class of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.GroupName">
            <summary>
            Name of the group of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.IsExecutable">
            <summary>
            Indicates whether this instance is executable.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.InputSpecification">
            <summary>
            Input statement of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.OutputSpecification"/>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.OutputSpecification">
            <summary>
            Output statement of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.InputSpecification"/>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.#ctor">
            <summary>
            Instantiates a new instance of the TaskDefinition class. 
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.#ctor(System.String,System.String,System.String)">
            <summary>
            Instantiates a new instance of the TaskDefinition class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="preffix">The preffix to consider.</param>
            <param name="id">The ID to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.CustomCheck">
            <summary>
            Checks this instance in a custom way.
            </summary>
            <returns>Returns the check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition.Repair(BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition)">
            <summary>
            Repairs this instance basing on the specified definition task.
            </summary>
            <param name="taskDefinition">The definition task to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.TAppExtensionItemIndex`1">
            <summary>
            This class represents an application extension item index.
            </summary>
            <typeparam name="T">The class of this extension item definition.</typeparam>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.TAppExtensionItemIndex`1.LibraryId">
            <summary>
            ID of the library of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.TAppExtensionItemIndex`1.LibraryName">
            <summary>
            Name of the library of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.TAppExtensionItemIndex`1.Definitions">
            <summary>
            Definitions of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.TAppExtensionItemIndex`1.Groups">
            <summary>
            Groups of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.TAppExtensionItemIndex`1.#ctor">
            <summary>
            Instantiates a new instance of the TAppExtensionItemIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.ConnectorIndex">
            <summary>
            This class represents a connector index.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.ConnectorIndex.#ctor">
            <summary>
            Instantiates a new instance of the ConnectorIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.ConnectorIndexAttribute">
            <summary>
            This class represents an attribute of connector index.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.ConnectorIndexAttribute.Filters">
            <summary>
            The filters of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.ConnectorIndexAttribute.DefaultSourceKinds">
            <summary>
            The source kinds of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.ConnectorIndexAttribute.DefaultFolderPath">
            <summary>
            The path of the folder of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.ConnectorIndexAttribute.#ctor">
            <summary>
            Instantiates a new instance of the ConnectorIndexAttribute class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.CarrierConfigurationIndex">
            <summary>
            This class represents a carrier index.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.CarrierConfigurationIndex.#ctor">
            <summary>
            Instantiates a new instance of the CarrierConfigurationIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.DataHandlerIndex">
            <summary>
            This class represents a handler index.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.DataHandlerIndex.#ctor">
            <summary>
            Instantiates a new instance of the DataHandlerIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.EntityIndex">
            <summary>
            This class represents an entity index.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.EntityIndex.#ctor">
            <summary>
            Instantiates a new instance of the EntityIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex">
            <summary>
            This class represents a library index.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex.Definitions">
            <summary>
            Definitions of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex.#ctor">
            <summary>
            Instantiates a new instance of LibraryIndex class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex.GetLibraryNames">
            <summary>
            Gets the names of the libraries of this instance.
            </summary>
            <returns>Returns the names of the libraries of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex.GetDefinition(System.String)">
            <summary>
            Gets the specified library definition with the specified name.
            </summary>
            <param name="name">The name of the library to consider.</param>
            <returns>Returns the library definition with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex.GetDefinitions(System.Collections.Generic.List{System.String})">
            <summary>
            Gets the specified library definitions.
            </summary>
            <param name="names">The names of the libraries to consider.</param>
            <returns>Returns the library definitions with the specified names.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.LibraryIndex.Load(System.AppDomain,System.String,System.String)">
            <summary>
            Gets the central library indexation.
            </summary>
            <param name="appDomain">The application domain to consider.</param>
            <param name="assemblyName">The name of the assembly to consider.</param>
            <param name="resourceFullName">The full name of the resource to consider.</param>
            <returns>The central indexation of this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.MetricsIndex">
            <summary>
            This class represents a metrics index.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.MetricsIndex.#ctor">
            <summary>
            Instantiates a new instance of the MetricsIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.RoutineConfigurationIndex">
            <summary>
            This class represents an routine index.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.RoutineConfigurationIndex.#ctor">
            <summary>
            Instantiates a new instance of the RoutineConfigurationIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.ScriptWordIndex">
            <summary>
            This class represents a script word index.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Indexes.ScriptWordIndex.DefinitionClass">
            <summary>
            The definition class of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.ScriptWordIndex.#ctor">
            <summary>
            Instantiates a new instance of the ScriptWordIndex class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.ScriptWordIndex.GetDefinitionsWithExactName(System.String,BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition)">
            <summary>
            Returns the word definitions with the specified name.
            </summary>
            <param name="name">The name of the script words to return.</param>
            <param name="parentDefinition">The parent definition.</param>
            <returns>The script words with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.ScriptWordIndex.GetDefinitionsWithApproximativeName(System.String,BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition)">
            <summary>
            Gets the word definitions approximatively with the specified name.
            </summary>
            <param name="name">The name of the script words to return.</param>
            <param name="parentDefinition">The parent definition.</param>
            <returns>The script words with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.ScriptWordIndex.IsWordMatching(BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord,BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition)">
            <summary>
            Determines whether the specified script word corresponds to the specified definition.
            </summary>
            <param name="scriptWord">The script word to consider.</param>
            <param name="scriptWordDefinition">The script word definition to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Indexes.TaskIndex">
            <summary>
            This class represents a task index.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Indexes.TaskIndex.#ctor">
            <summary>
            Instantiates a new instance of the TaskIndex class.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Libraries.Library">
            <summary>
            This class represents an library.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._sourceKind">
            <summary>
            The data source kind of this instance.
            </summary>        
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._carrierDefinitions">
            <summary>
            The carrier definitions of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._taskDefinitions">
            <summary>
            The task definitions of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._connectorDefinitions">
            <summary>
            The connector definitions of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._entityDefinitions">
            <summary>
            The class definitions of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._handlerDefinitions">
            <summary>
            The reference definitions of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._routineDefinitions">
            <summary>
            The routine definitions of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._metricsDefinitions">
            <summary>
            The metrics definitions of this instance.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.Library._scriptWordDefinitions">
            <summary>
            The script word definitions of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.Library.DefinitionName">
            <summary>
            Definition unique name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.Library.Definition">
            <summary>
            The definition of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.Library.Assembly">
            <summary>
            The assembly of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.Library.SourceKind">
            <summary>
            The ExtensionDataContext kind of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.#ctor">
            <summary>
            Instantiates a new instance of Library class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.#ctor(BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition)">
            <summary>
            Instantiates a new instance of Library class from a library instance.
            </summary>
            <param name="definition">Business library definition to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.LoadItemIndex(System.Reflection.Assembly,BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Loads the specified library item index.
            </summary>
            <param name="assembly">The assembly to consider.</param>
            <param name="libraryItemKind">The extension item kind to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the number of items.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.UpdateItemIndex(BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition,System.Reflection.Assembly,System.Int32@,System.String,BindOpen.Framework.Core.System.Diagnostics.Log,System.Boolean)">
            <summary>
            Updates the specified item index.
            </summary>
            <param name="extensionItemDefinition">The extension item definition to update.</param>
            <param name="assembly">The assembly to consider.</param>
            <param name="count">The number of added items to consider.</param>
            <param name="defaultDefinitionClass">The default definition class to consider.</param>
            <param name="log">The log to consider.</param>
            <param name="mustAddDefinition">Indicates whether the defitinion must be added.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.UpdateClassFullName(System.String,BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind,System.String)">
            <summary>
            Updates the specified class full name considering the assembly name of this instance and the specified extension item kind.
            </summary>
            <param name="classFullName">The class full name to update.</param>
            <param name="libraryItemKind">The extension item kind to consider.</param>
            <param name="defaultClassFullName">The default class full name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.GetDefaultClassName(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind)">
            <summary>
            Gets the default class name of the specified item kind.
            </summary>
            <param name="extensionItemKind">The extension item kind to consider.</param>
            <returns>Returns the class of the specified dictionary.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.AssignRuntimeFunction(System.Reflection.Assembly,BindOpen.Framework.Core.Extensions.Definition.AppExtensionItemDefinition,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Assigns runtime function.
            </summary>
            <param name="assembly">The assembly to consider.</param>
            <param name="extensionItemDefinition">The extension item definition to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the class of the specified dictionary.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.GetNormalizedName">
            <summary>
            Gets the normalized name of this instance.
            </summary>
            <returns>Returns the normalized name of this instance.</returns>
            <remarks>The normalized name is the name in which only the alphanumeric characters and _ are allowed.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.GetItemDefinitions``1">
            <summary>
            Returns the item definitions of this instance.
            </summary>
            <returns>The item words of specified library names.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.GetItemDefinitionWithUniqueName``1(System.String)">
            <summary>
            Returns the item definition with the specified unique name.
            </summary>
            <param name="uniqueName">The unique name of item to return.</param>
            <returns>The item with the specified unique name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.GetScriptWordDefinitionWithUniqueName(System.String,BindOpen.Framework.Core.Extensions.Definition.Scriptwords.ScriptWordDefinition)">
            <summary>
            Returns the script word definition with the specified unique name.
            </summary>
            <param name="uniqueName">The unique name of script word to return.</param>
            <param name="parentDefinition">The parent definition to return.</param>
            <returns>The script word with the specified unique name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.Library.Initialize(BindOpen.Framework.Core.Extensions.AppExtension)">
            <summary>
            Inializes the specified library.
            </summary>
            <param name="appExtension">The application extension to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition">
            <summary>
            This class represents the definition of a library.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition._usingAssemblyFileNames">
            <summary>
            The names of the using assembly files of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.GroupName">
            <summary>
            Name of the group of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.AssemblyName">
            <summary>
            Name of the assembly where the library can be loaded.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.RootNamespace">
            <summary>
            Root name space of this intance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.FileName">
            <summary>
            File name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.UsingAssemblyFileNames">
            <summary>
            Names of the using assembly files of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.ItemIndexFullNameDictionary">
            <summary>
            Dictionary full names of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.#ctor">
            <summary>
            Instantiates a new instance of LibraryDefinition class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.GetClassNameWithoutAssembly(System.String)">
            <summary>
            Gets the root namespace.
            </summary>
            <param name="className">The class name to consider.</param>
            <returns>Returns the root namspace.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.GetRootNamespace">
            <summary>
            Gets the root namespace.
            </summary>
            <returns>Returns the root namspace.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.GetDefaultClassNameSpace(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind)">
            <summary>
            Gets the default class name space of the specified item kind.
            </summary>
            <param name="extensionItemKind">The extension item kind to consider.</param>
            <returns>Returns the class of the specified dictionary.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.GetItemIndexResourceFullName(BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind)">
            <summary>
            Gets the full name of the specified dictionary resource.
            </summary>
            <param name="extensionItemKind">The extension item kind to consider.</param>
            <returns>Returns the class of the specified dictionary.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition.Load(System.Reflection.Assembly,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Loads a definition from the specified assembly.
            </summary>
            <param name="assembly">The assembly to consider.</param>
            <param name="resourceFullName">The full name of the resouce to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The created library.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Libraries.LibraryLoader">
            <summary>
            This class represents a loader of library.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryLoader.LoadLibrary(System.AppDomain,BindOpen.Framework.Core.Extensions.Libraries.LibraryDefinition,BindOpen.Framework.Core.System.Diagnostics.Log,System.Collections.Generic.List{BindOpen.Framework.Core.Extensions.Common.AppExtensionItemKind},System.Collections.Generic.List{BindOpen.Framework.Core.Data.Items.Source.DataSourceKind},System.String)">
            <summary>
            Loads the library of this instance.
            </summary>
            <param name="appDomain">The application domain to consider.</param>
            <param name="libraryDefinition">The library definition to consider.</param>
            <param name="log">The log to consider.</param>
            <param name="extensionItemKinds">The kinds of extension items to consider.</param>
            <param name="dataSourceKinds">The kinds of data sources to consider.</param>
            <param name="libraryFolderPath">The library definition to consider.</param>
            <returns>The log of the load task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Libraries.LibraryLoader.Load_WebService(BindOpen.Framework.Core.System.Diagnostics.Log@)">
            <summary>
            Loads the script dictionary from the web service.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier">
            <summary>
            This class represents a carrier.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.RelativePath">
            <summary>
            Relative path of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.#ctor">
            <summary>
            Instantiates a new instance of the Carrier class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.#ctor(System.String,System.String,BindOpen.Framework.Core.Extensions.Configuration.Carriers.CarrierConfiguration,System.String,System.String,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of the Carrier class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="configuration">The configuration to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="relativePath">The relative path to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.SetConfiguration(BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{BindOpen.Framework.Core.Extensions.Definition.Carriers.CarrierDefinition})">
            <summary>
            Sets the specififed configuration.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.SetPath(System.String,System.String)">
            <summary>
            Sets the path of this instance.
            </summary>
            <param name="path">The new path to consider. Null to update the existing one.</param>
            <param name="relativePath">The new relative path to consider. Null to keep the existing one.</param>
            <returns>Returns True if this instance exists. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.Set(System.Object,System.String)">
            <summary>
            Sets the specified value.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.Get``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.Get``1(``0,System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
            <param name="defaultValue">The default value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Carriers.Carrier.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector">
            <summary>
            This class represents a connector.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.#ctor">
            <summary>
            Instantiates a new instance of the Connector class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.#ctor(System.String,System.String,BindOpen.Framework.Core.Extensions.Configuration.Connectors.ConnectorConfiguration,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of the Connector class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="configuration">The configuration to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.SetConfiguration(BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{BindOpen.Framework.Core.Extensions.Definition.Connectors.ConnectorDefinition})">
            <summary>
            Sets the specififed configuration.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.Set(System.Object,System.String)">
            <summary>
            Sets the specified value.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.Get``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.Get``1(``0,System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
            <param name="defaultValue">The default value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.Open">
            <summary>
            Opens a connection.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.Close">
            <summary>
            Closes the existing connection.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Connectors.Connector.IsConnected">
            <summary>
            Indicates whether the instance is connected.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity">
            <summary>
            This class represents an data entity item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity.#ctor">
            <summary>
            Instantiates a new instance of the Entity class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity.#ctor(System.String,System.String,BindOpen.Framework.Core.Extensions.Configuration.Entities.EntityConfiguration,System.String,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of the Entity class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="configuration">The configuration to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity.SetConfiguration(BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{BindOpen.Framework.Core.Extensions.Definition.Entities.EntityDefinition})">
            <summary>
            Sets the specififed configuration.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity.Set(System.Object,System.String)">
            <summary>
            Sets the specified value.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity.Get``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Entities.Entity.Get``1(``0,System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
            <param name="defaultValue">The default value to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Formats.Format">
            <summary>
            This class represents an format.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.Formats.Format.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Formats.Format.#ctor">
            <summary>
            Instantiates a new instance of the Format class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Formats.Format.#ctor(System.String,System.String,BindOpen.Framework.Core.Extensions.Configuration.Formats.FormatConfiguration,System.String,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of the Format class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="configuration">The configuration to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Formats.Format.SetConfiguration(BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{BindOpen.Framework.Core.Extensions.Definition.Formats.FormatDefinition})">
            <summary>
            Sets the specififed configuration.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Handlers.HandlerGetFunction">
            <summary>
            This delegate represents a handler GET function.
            </summary>
            <param name="sourceElement">The source element to consider.</param>
            <param name="pathDetail">The path detail to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="alog">The log to consider.</param>
            <returns>Returns the target objects.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Handlers.HandlerPostFunction">
            <summary>
            This delegate represents a handler POST function.
            </summary>
            <param name="aTargetObject">The target object to consider.</param>
            <param name="aSourceDataElement">The source data element to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="alog">The log to consider.</param>
            <returns>Returns the source object.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.ITAppExtensionRuntimeItem`1">
            <summary>
            This class represents an application extension runtime item.
            </summary>
            <typeparam name="T">The definition class of this instance.</typeparam>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.ITAppExtensionRuntimeItem`1.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.ITAppExtensionRuntimeItem`1.SetConfiguration(BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{`0})">
            <summary>
            Sets the specififed configuration.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine">
            <summary>
            This class represents a routine.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.#ctor">
            <summary>
            Instantiates a new instance of the Routine class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.#ctor(System.String,System.String,BindOpen.Framework.Core.Extensions.Configuration.Routines.RoutineConfiguration,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of the Routine class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="configuration">The configuration to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.SetConfiguration(BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{BindOpen.Framework.Core.Extensions.Definition.Routines.RoutineDefinition})">
            <summary>
            Sets the specififed configuration.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.Set(System.Object,System.String)">
            <summary>
            Sets the specified value.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.Get``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.Get``1(``0,System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
            <param name="defaultValue">The default value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.Execute(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,System.Object[])">
            <summary>
            Executes this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="aItem">The item to use.</param>
            <param name="dataElement">The element to use.</param>
            <param name="objects">The objects to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Routines.Routine.CustomExecute(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,System.Object,BindOpen.Framework.Core.Data.Elements.DataElement,System.Object[])">
            <summary>
            Executes customly this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="item">The item to use.</param>
            <param name="dataElement">The element to use.</param>
            <param name="objects">The objects to use.</param>
            <returns>The log of check log.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Scriptwords.ScriptWordFunction">
            <summary>
            This delegate represents a script word function.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task">
            <summary>
            This class represents an task.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.AppScope">
            <summary>
            The application scope of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.#ctor">
            <summary>
            Instantiates a new instance of the Task class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.#ctor(System.String,System.String,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration,System.String,BindOpen.Framework.Core.Application.Scopes.IAppScope)">
            <summary>
            Instantiates a new instance of the Task class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="definitionName">The definition name to consider.</param>
            <param name="configuration">The configuration to consider.</param>
            <param name="namePreffix">The name preffix to consider.</param>
            <param name="appScope">The application scope to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.SetConfiguration(BindOpen.Framework.Core.Extensions.Configuration.TAppExtensionItemConfiguration{BindOpen.Framework.Core.Extensions.Definition.Tasks.TaskDefinition})">
            <summary>
            Sets the specififed configuration.
            </summary>
            <param name="configuration">The configuration to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.Set(System.Object,System.String)">
            <summary>
            Sets the specified value.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.Get``1(System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.Get``1(``0,System.String)">
            <summary>
            Gets the specified value.
            </summary>
            <param name="propertyName">The calling property name to consider.</param>
            <param name="defaultValue">The default value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.Execute(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.Data.Common.RuntimeMode)">
            <summary>
            Executes this instance.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use for execution.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>Returns the output value of the execution.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.Extensions.Runtime.Tasks.Task.Execute(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.Data.Common.RuntimeMode)">
            <summary>
            Executes this instance.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="scriptVariableSet">The script variable set to use for execution.</param>
            <param name="runtimeMode">The runtime mode to consider.</param>
            <returns>Returns the output value of the execution.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Assemblies.AppDomainPool">
            <summary>
            This class represents an assembly pool.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AppDomainPool.#ctor">
            <summary>
            Instantiates a new instance of AppDomainPool class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AppDomainPool.GetAppDomain(System.String)">
            <summary>
            Gets the specified application domain.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AppDomainPool.Allocate(System.String,System.String)">
            <summary>
            Allocates an application domain specifying its ID and its owner.
            </summary>
            <param name="appDomainId">The ID of the application domain to consider.</param>
            <param name="ownerId">The ID of the owner.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AppDomainPool.Deallocate(System.String,System.String)">
            <summary>
            Deallocates the specified application domain.
            </summary>
            <param name="appDomainId">The ID of the application domain to consider.</param>
            <param name="ownerId">The ID of the owner.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AppDomainPool.LoadAssemblyFromFile(System.AppDomain,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets the assembly of this instance from file.
            </summary>
            <param name="appDomain">Application domain to consider.</param>
            <param name="filePath">Path of the file to use.</param>
            <param name="log">The loading log to consider.</param>
            <returns>The assembly of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AppDomainPool.LoadAssembly(System.AppDomain,System.String,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Gets the assembly of this instance from embed resource.
            </summary>
            <param name="appDomain">Application domain to consider.</param>
            <param name="assemblyName">The assembly name to use.</param>
            <param name="log">The loading log to consider.</param>
            <returns>The assembly of this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Assemblies.AssemblyHelper">
            <summary>
            This structure represents a string manager.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Assemblies.AssemblyHelper.ClassReference">
            <summary>
            This structure represents an class reference.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Assemblies.AssemblyHelper.ClassReference.AssemblyName">
            <summary>
            Library name.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Assemblies.AssemblyHelper.ClassReference.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AssemblyHelper.GetClassReference(System.String)">
            <summary>
            Dertermines the assembly reference from the specified complete class name.
            </summary>
            <param name="completeClassName">The complete class name to consider.</param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Assemblies.AssemblyResolver">
            <summary>
            This class represents an assembly resolver.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Assemblies.AssemblyResolver.Resolve(System.AppDomain)">
            <summary>
            Resolves the domain i.e. initializes the assembly resolving routines.
            </summary>
            <param name="appDomain">The domain to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Events.ConditionalEvent">
            <summary>
            This class represents a conditional event.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.ConditionalEvent.ConditionScript">
            <summary>
            Condition script of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.ConditionalEvent.#ctor">
            <summary>
            Instantiates a new instance of the ConditionalEvent class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.ConditionalEvent.#ctor(System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Instantiates a new instance of the ConditionalEvent class.
            </summary>
            <param name="conditionScript">The condition script of this instance.</param>
            <param name="kind">The kind of this instance.</param>
            <param name="title">The title of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="date">The date of this instance.</param>
            <param name="id">The ID of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.ConditionalEvent.#ctor(System.String,System.Exception,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.Nullable{System.DateTime},System.String)">
            <summary>
            Instantiates a new instance of the ConditionalEvent class.
            </summary>
            <param name="aConditionScript">The condition script of this instance.</param>
            <param name="exception">The exception to consider.</param>
            <param name="criticality">The criticality to consider.</param>
            <param name="date">The date of this instance.</param>
            <param name="id">The ID of this instance.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Events.Event">
            <summary>
            This class represents an event.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.Kind">
            <summary>
            Kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.Date">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.DateSpecified">
            <summary>
            Specification of the Date property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.CreationDate">
            <summary>
            Creation date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.CreationDateSpecified">
            <summary>
            Specification of the CreationDate property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.LongDescription">
            <summary>
            Long description of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.LongDescriptionSpecified">
            <summary>
            Specification of the LongDescription property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.Detail">
            <summary>
            Detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.DetailSpecified">
            <summary>
            Specification of the Detail property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Events.Event.Criticality">
            <summary>
            Criticality of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.Event.#ctor">
            <summary>
            Instantiates a new instance of the LogEvent class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.Event.#ctor(BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Instantiates a new instance of the LogEvent class.
            </summary>
            <param name="kind">The kind of this instance.</param>
            <param name="title">The title of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="date">The date of this instance.</param>
            <param name="id">The ID of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.Event.#ctor(System.Exception,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.Nullable{System.DateTime},System.String)">
            <summary>
            Instantiates a new instance of the LogEvent class.
            </summary>
            <param name="exception">The exception to consider.</param>
            <param name="criticality">The criticality to consider.</param>
            <param name="date">The date of this instance.</param>
            <param name="id">The ID of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.Event.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.Event.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality">
            <summary>
            This enumeration lists the possible event criticalities.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality.Medium">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality.VeryHigh">
            <summary>
            Very high.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind">
            <summary>
            This enumeration lists the possible event kinds.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.Any">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.Checkpoint">
            <summary>
            Checkpoint.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.Warning">
            <summary>
            Warning.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Events.EventKind.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Events.EventKindExtension">
            <summary>
            This class represents a event kind extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.EventKindExtension.Max(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.Events.EventKind})">
            <summary>
            Gets the maximum kind of events of the specified event kinds.
            </summary>
            <param name="eventKinds">The event kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind)">
            <summary>
            Gets the maximum between the two specified event kinds.
            </summary>
            <param name="eventKind1">The first event kind to consider.</param>
            <param name="eventKind2">The second event kind to consider.</param>
            <returns>True if the first event kind is greater than the second one.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind)">
            <summary>
            Indicates whether the first event kind is greater than the second one.
            </summary>
            <param name="eventKind1">The first event kind to consider.</param>
            <param name="eventKind2">The second event kind to consider.</param>
            <returns>True if the first event kind is greater than the second one.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Log">
            <summary>
            This class represents a logger of tasks.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Execution">
            <summary>
            Execution of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.ExecutionSpecified">
            <summary>
            Specification of the Execution property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Task">
            <summary>
            Logged by this instance. By default, a new task is initialized when this instance is initialized.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.TaskSpecified">
            <summary>
            Specification of the Task property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogEventPredicate">
            <summary>
            Function that filters event.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Detail">
            <summary>
            Detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.DetailSpecified">
            <summary>
            Specification of the Detail property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Item(System.String)">
            <summary>
            The event with the specified ID.
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Events">
            <summary>
            Events of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Errors"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Warnings"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Messages"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Exceptions"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Checkpoints"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.EventsSpecified">
            <summary>
            Specification of the Events property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Errors">
            <summary>
            Errors of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Events"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Warnings"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Messages"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Exceptions"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Checkpoints"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Warnings">
            <summary>
            Warnings of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Errors"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Events"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Messages"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Exceptions"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Checkpoints"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Messages">
            <summary>
            Messages of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Errors"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Warnings"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Events"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Exceptions"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Checkpoints"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Exceptions">
            <summary>
            Exceptions of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Errors"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Warnings"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Messages"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Events"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Checkpoints"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Checkpoints">
            <summary>
            Checkpoints of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Errors"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Warnings"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Messages"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Exceptions"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Events"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs">
            <summary>
            Logs of this instance.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Errors"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Warnings"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Messages"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Exceptions"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.Events"/>
            <seealso cref="P:BindOpen.Framework.Core.System.Diagnostics.Log.SubLogs"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Parent">
            <summary>
            Parent of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Event">
            <summary>
            Parent of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Root">
            <summary>
            Root of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Level">
            <summary>
            Specification of the Task property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Log.Loggers">
            <summary>
            Loggers of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.#ctor">
            <summary>
            Instantiates a new instance of the Log class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.#ctor(BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger[])">
            <summary>
            Instantiates a new instance of the Log class.
            </summary>
            <param name="loggers">The loggers to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.#ctor(System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger[])">
            <summary>
            Instantiates a new instance of the Log class.
            </summary>
            <param name="eventFinder">The function that filters event.</param>
            <param name="loggers">The loggers to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.#ctor(BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger[])">
            <summary>
            Instantiates a new instance of the Log class.
            </summary>
            <param name="task">The task to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="loggers">The loggers to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.#ctor(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Instantiates a new instance of the Log class specifying parent.
            </summary>
            <param name="parentLog">The parent logger to consider.</param>
            <param name="task">The task to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddLoggers(BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger[])">
            <summary>
            Adds the specified loggers.
            </summary>
            <param name="loggers">The loggers to add.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.WriteLog(BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration,BindOpen.Framework.Core.System.Diagnostics.LoggerMode)">
            <summary>
            Logs the specified task.
            </summary>
            <param name="task">The task to log.</param>
            <param name="mode">The mode to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.WriteLog(BindOpen.Framework.Core.System.Diagnostics.LogEvent,BindOpen.Framework.Core.System.Diagnostics.LoggerMode)">
            <summary>
            Logs the specified event.
            </summary>
            <param name="logEvent">The event to log.</param>
            <param name="mode">The mode to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.WriteLog(System.String,System.Object,BindOpen.Framework.Core.System.Diagnostics.LoggerMode)">
            <summary>
            Logs the specified element.
            </summary>
            <param name="elementName">The element name to log.</param>
            <param name="elementValue">The element value to log.</param>
            <param name="mode">The mode to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.WriteLog(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.System.Diagnostics.LoggerMode)">
            <summary>
            Logs the specified child log.
            </summary>
            <param name="childLog">The child log to consider.</param>
            <param name="mode">The mode to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddEvent(BindOpen.Framework.Core.System.Diagnostics.LogEvent,BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds a new log event.
            </summary>
            <param name="logEvent">The log event to add.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddEvent(BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime},BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the specified log event.
            </summary>
            <param name="kind">The kind of this instance.</param>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="source">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddWarning(System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime},BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the specified warning.
            </summary>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="aSource">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddError(System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime},BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the specified error.
            </summary>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="aSource">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddCheckpoint(System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime},BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the specified checkpoint.
            </summary>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="source">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddMessage(System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime},BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the specified message.
            </summary>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="source">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddException(System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime},BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the specified exception.
            </summary>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="source">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddException(System.Exception,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the specified exception.
            </summary>
            <param name="exception">The exception to consider.</param>
            <param name="criticality">The criticality to consider.</param>
            <param name="resultCode">The result code to consider.</param>
            <param name="source">The ExtensionDataContext to consider.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddEvents(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Adds the events of the specified log.
            </summary>
            <param name="log">The log whose task results must be added.</param>
            <param name="kinds">The event kinds to add.</param>
            <returns>Returns the added events.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddEvents(BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log},BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Adds the events of the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
            <param name="kinds">The event kinds to add.</param>
            <returns>Returns the added events.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.Append(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Adds the events of the specified log.
            </summary>
            <param name="log">The log whose task results must be added.</param>
            <returns>Returns the added events.</returns>
            <remarks>This function equals to AddEventsexcept except that it does not allow to filter with log event kinds.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.Append(BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log})">
            <summary>
            Adds the events of the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
            <returns>Returns the added events.</returns>
            <remarks>This function equals to AddEventsexcept except that it does not allow to filter with log event kinds.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.ClearEvents(System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Clears the specified events.
            </summary>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
            <param name="kinds">The kinds to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.Sanitize">
            <summary>
            Sanitize this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddSubLog(BindOpen.Framework.Core.System.Diagnostics.Log,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log},BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Adds the specified warning.
            </summary>
            <param name="eventKind">The event kind of this instance.</param>
            <param name="childLog">The child log of this instance.</param>
            <param name="logFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="aSource">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.AddSubLog(System.Predicate{BindOpen.Framework.Core.System.Diagnostics.Log},BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Adds the specified warning.
            </summary>
            <param name="eventKind">The event kind of this instance.</param>
            <param name="filterFinder">The filter function to consider. If true then the child log is added otherwise it is not.</param>
            <param name="title">The title of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="aSource">The ExtensionDataContext of this instance.</param>
            <param name="date">The date to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.RemoveSubLog(BindOpen.Framework.Core.System.Diagnostics.Log,System.Boolean)">
            <summary>
            Removes the specified child log.
            </summary>
            <param name="childLog">The child log to remove.</param>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.RemoveSubLog(System.String,System.Boolean)">
            <summary>
            Removes the child log with the specified ID.
            </summary>
            <param name="id">The ID to consider.</param>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetLogger(System.String)">
            <summary>
            Gets the logger with the specified name.
            </summary>
            <param name="name">The name of the logger to consider.</param>
            <returns>Returns the logger with the specified name.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetLogger(BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat)">
            <summary>
            Gets the logger with the specified format.
            </summary>
            <param name="format">The name of the format to consider.</param>
            <returns>Returns the logger with the specified format.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetLoggers(BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat[])">
            <summary>
            Gets the loggers with the specified formats.
            </summary>
            <param name="formats">The log formats to consider.</param>
            <returns>The loggers with the specified formats.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetTitleText(System.String,System.String)">
            <summary>
            Returns the title label.
            </summary>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetDescriptionText(System.String,System.String)">
            <summary>
            Returns the description label.
            </summary>
            <param name="variantName">The variant variant name to consider.</param>
            <param name="defaultVariantName">The default variant name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetEventWithId(System.String,System.Boolean)">
            <summary>
            Returns the event of this instance with the specified ID.
            </summary>
            <param name="id">The ID of the event to return.</param>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
            <returns>The event of this instance with the specified ID.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetEvents(System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Gets the specified events of this instance.
            </summary>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
            <param name="kinds">The kinds to consider.</param>
            <returns>Returns the specified events of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetEventCount(System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Returns the number of the specified events of this instance.
            </summary>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
            <param name="kinds">The kinds to consider.</param>
            <returns>The number of the specified events of this instance.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetMaxEventKind(System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Gets the warnings, errors or exceptions of this instance.
            </summary>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
            <param name="kinds">The kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasEvent(System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Indicates whether this instance has the specified events.
            </summary>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <param name="kinds">The event kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasEvent(BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Indicates whether this instance has the specified events.
            </summary>
            <param name="kinds">The event kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasWarnings(System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Checks this instance has any warnings.
            </summary>
            <param name="kinds">The event kinds to consider.</param>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasErrors(System.Boolean)">
            <summary>
            Checks this instance has any errors.
            </summary>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasExceptions(System.Boolean)">
            <summary>
            Checks this instance has any exceptions.
            </summary>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasMessages(System.Boolean)">
            <summary>
            Checks this instance has any messages.
            </summary>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasErrorsOrExceptions(System.Boolean)">
            <summary>
            Checks this instance has any errors or exceptions.
            </summary>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasErrorsOrExceptionsOrWarnings(System.Boolean)">
            <summary>
            Checks this instance has any warnings, errors or exceptions.
            </summary>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetRoot">
            <summary>
            Returns the log root.
            </summary>
            <returns>The log root.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.GetSubLogWithId(System.String,System.Boolean)">
            <summary>
            Returns the sub log with the specified ID.
            </summary>
            <param name="id">The ID of the log to return.</param>
            <param name="isRecursive">Indicates whether the search must be recursive.</param>
            <returns>The child with the specified ID.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.HasSubLog">
            <summary>
            Checks this instance has child log.
            </summary>
            <returns>True if this instance has child log. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.BuildTree(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Builds the tree of the specified log.
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.SetFilePath(System.String,System.Boolean,System.String)">
            <summary>
            Sets the log file location.
            </summary>
            <param name="newFolderPath">The new folder path to consider.</param>
            <param name="isFileToBeMoved">Indicates whether the file must be moved.</param>
            <param name="newFileName">The new file name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.End(BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus)">
            <summary>
            Ends this instance specifying the status.
            </summary>
            <param name="status">The new status to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.Load``1(System.String,BindOpen.Framework.Core.Application.Scopes.AppScope,System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Log,System.Boolean)">
            <summary>
            Instantiates a new instance of Log class from a xml file.
            </summary>
            <param name="filePath">The path of the Xml file to load.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="isCheckXml">Indicates whether the file must be checked.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The load log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.LoadFromString``1(System.String,BindOpen.Framework.Core.Application.Scopes.AppScope,System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Instantiates a new instance of Log class from a xml string.
            </summary>
            <param name="xmlString">The Xml string to load.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="isCheckXml">Indicates whether the file must be checked.</param>
            <param name="loadLog">The output log of the load task.</param>
            <returns>The log defined in the Xml file.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.Save">
            <summary>
            Saves this instance.
            </summary>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.Save``1(System.String)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="logFilePath">The path of the log file to save.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Log.ToString``1">
            <summary>
            Gets the xml string of this instance.
            </summary>
            <returns>The Xml string of this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.LogEvent">
            <summary>
            This class represents a log event.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.LogEvent.LogEventStackTrace">
            <summary>
            This structures defines the stack trace of a task result.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LogEvent.LogEventStackTrace.FullClassName">
            <summary>
            The name of the full class.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LogEvent.LogEventStackTrace.MethodName">
            <summary>
            The name of the called method.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LogEvent.LogEventStackTrace.MethodParams">
            <summary>
            Parameters of the called method.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LogEvent.LogEventStackTrace.FilePath">
            <summary>
            Path of the called file.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LogEvent.LogEventStackTrace.LineNumber">
            <summary>
            Called line number.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.ResultCode">
            <summary>
            Result code of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.ResultCodeSpecified">
            <summary>
            Specification of the ResultCode property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.Source">
            <summary>
            Source of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.SourceSpecified">
            <summary>
            Specification of the Source property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.StackTraces">
            <summary>
            Stack traces of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.StackTracesSpecified">
            <summary>
            Specification of the stack traces of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.Log">
            <summary>
            The log of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.Parent">
            <summary>
            Parent of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.Root">
            <summary>
            Root of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.LogEvent.Level">
            <summary>
            Specification of the Task property of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEvent.#ctor">
            <summary>
            Instantiates a new instance of the LogEvent class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEvent.#ctor(BindOpen.Framework.Core.System.Diagnostics.Events.EventKind,System.String,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Instantiates a new instance of the LogEvent class.
            </summary>
            <param name="kind">The kind of this instance.</param>
            <param name="title">The title of this instance.</param>
            <param name="criticality">The criticality of this instance.</param>
            <param name="description">The description of this instance.</param>
            <param name="resultCode">The result code of this instance.</param>
            <param name="source">The ExtensionDataContext of this instance.</param>
            <param name="date">The date of this instance.</param>
            <param name="id">The ID of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEvent.#ctor(System.Exception,BindOpen.Framework.Core.System.Diagnostics.Events.EventCriticality,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Instantiates a new instance of the LogEvent class.
            </summary>
            <param name="exception">The exception to consider.</param>
            <param name="criticality">The criticality to consider.</param>
            <param name="resultCode">The result code to consider.</param>
            <param name="source">The ExtensionDataContext to consider.</param>
            <param name="date">The date of this instance.</param>
            <param name="id">The ID of this instance.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEvent.#ctor(BindOpen.Framework.Core.System.Diagnostics.Events.Event)">
            <summary>
            Instantiates a new instance of the LogEvent class.
            </summary>
            <param name="event1">The event to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEvent.GetMaxEventKind(System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Gets the warnings, errors or exceptions of this instance.
            </summary>
            <param name="isRecursive">Indicate whether the search is recursive.</param>
            <param name="kinds">The kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEvent.UpdateStorageInfo(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for storage.
            </summary>
            <param name="log">The log to update.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEvent.UpdateRuntimeInfo(BindOpen.Framework.Core.Application.Scopes.IAppScope,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Updates information for runtime.
            </summary>
            <param name="appScope">The application scope to consider.</param>
            <param name="log">The log to update.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension">
            <summary>
            This class represents a log event extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.GetEvents(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent},BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Gets the specified events of this instance.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <param name="kinds">The event kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.GetWarnings(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Gets the warnings of this instance.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.GetErrors(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Gets the errors of this instance.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.GetExceptions(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Gets the exceptions of this instance.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.GetMessages(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Gets the messages of this instance.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.GetErrorOrExceptions(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Gets the errors or exceptions of this instance.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.GetErrorOrExceptionOrWarnings(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Gets the warnings, errors or exceptions of this instance.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.Has(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent},BindOpen.Framework.Core.System.Diagnostics.Events.EventKind[])">
            <summary>
            Indicates whether this instance has the specified events.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <param name="kinds">The event kinds to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.HasWarnings(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Indicates whether this instance has any warnings.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.HasErrors(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Indicates whether this instance has any errors.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.HasExceptions(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Indicates whether this instance has any exceptions.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.HasMessages(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Indicates whether this instance has any messages.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.HasErrorsOrExceptions(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Indicates whether this instance has any errors or exceptions.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.LogEventExtension.HasErrorOrExceptionOrWarnings(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Indicates whether this instance has any warnings, errors or exceptions.
            </summary>
            <param name="logEvents">The log events to consider.</param>
            <returns>True if this instance has the specified events. False otherwise.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger">
            <summary>
            This interface represents a logger.
            </summary>
            <remarks>The output format is YAML.</remarks>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.Filepath">
            <summary>
            File path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.FolderPath">
            <summary>
            Folder path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.Mode">
            <summary>
            The mode of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.OutputKind">
            <summary>
            The output kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.Format">
            <summary>
            The format of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.IsVerbose">
            <summary>
            Indicates whether this instance is verbose.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.UICulture">
            <summary>
            The UI culture of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.Log">
            <summary>
            The log of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.EventFinder">
            <summary>
            Function that filters event.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.WriteLog(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Logs the specified log.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.WriteTask(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration)">
            <summary>
            Logs the specified task.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="task">The task to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.WriteEvent(BindOpen.Framework.Core.System.Diagnostics.LogEvent)">
            <summary>
            Logs the specified event.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logEvent">The log event to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.WriteDetailElement(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Object)">
            <summary>
            Logs the specified element.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="elementName">The element name to consider.</param>
            <param name="elementValue">The element value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.WriteChildLog(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Logs the specified child log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="childLog">The child log to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.Write(System.String)">
            <summary>
            Writes the specified text to the output kind of this instance.
            </summary>
            <param name="text">The text to write.</param>
            <returns>Returns true whether the text has been written.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.IsHistoryRequired">
            <summary>
            Indicates whether this instance requires all the event history to be maintained.
            </summary>
            <returns>Returns True if this instance requires all the event history.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.SetLog(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Sets the specified log.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.DeleteExpiredLogs(System.Int32)">
            <summary>
            Delete the logs older than the specified day number.
            </summary>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.SetFileName(System.String)">
            <summary>
            Sets the name of the file of this instance.
            </summary>
            <param name="fileName">The name of the file to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.SetFilePath(System.String,System.Boolean,System.String)">
            <summary>
            Sets the log file location.
            </summary>
            <param name="newFolderPath">The new folder path to consider.</param>
            <param name="isFileToBeMoved">Indicates whether the file must be moved.</param>
            <param name="newFileName">The new file name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.LoadLog(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Boolean)">
            <summary>
            Instantiates a new instance of Log class from a xml file.
            </summary>
            <param name="filePath">The path of the Xml file to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The load log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.LoadLogFromString(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of Log class from a xml string.
            </summary>
            <param name="xmlString">The Xml string to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <returns>The log defined in the Xml file.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.Save(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Boolean)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logFilePath">The path of the log file to save.</param>
            <param name="isAppended">Indicates whether the new content is appended if one alreay exists.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.Save(System.Boolean)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="isAppended">Indicates whether the new content is appended if one alreay exists.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.ToString(BindOpen.Framework.Core.System.Diagnostics.Log,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ILogger.ToString(BindOpen.Framework.Core.System.Diagnostics.LogEvent,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified event.
            </summary>
            <param name="logEvent">The log event to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified event.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger">
            <summary>
            This class represents a JSON logger.
            </summary>
            <remarks>The output format is JSON.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.#ctor">
            <summary>
            Instantiates a new instance of the JsonLogger class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.#ctor(System.String,BindOpen.Framework.Core.System.Diagnostics.LoggerMode,System.String,System.String,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,System.Boolean,System.String,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},System.Int32)">
            <summary>
            Instantiates a new instance of the JsonLogger class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="mode">The mode to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <param name="fileName">The file name to consider.</param>
            <param name="outputKind">The output kind to consider.</param>
            <param name="isVerbose">Indicates whether .</param>
            <param name="uiCulture">The folder path to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.WriteTask(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration)">
            <summary>
            Logs the specified task.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="task">The task to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.WriteEvent(BindOpen.Framework.Core.System.Diagnostics.LogEvent)">
            <summary>
            Logs the specified record.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.WriteDetailElement(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Object)">
            <summary>
            Logs the specified element.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="elementName">The element name to consider.</param>
            <param name="elementValue">The element value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.WriteChildLog(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Logs the specified record.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="childLog">The child log to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.LoadLog(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Boolean)">
            <summary>
            Instantiates a new instance of Log class from a xml file.
            </summary>
            <param name="filePath">The path of the Xml file to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The load log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.LoadLogFromString(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of Log class from a xml string.
            </summary>
            <param name="xmlString">The Xml string to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <returns>The log defined in the Xml file.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.Save(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Boolean)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logFilePath">The path of the log file to save.</param>
            <param name="isAppended">Indicates whether the new content is appended if one alreay exists.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.JsonLogger.ToString(BindOpen.Framework.Core.System.Diagnostics.Log,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified log.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute">
            <summary>
            This enumeration lists the possible log attributes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Id">
            <summary>
            The ID of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Name">
            <summary>
            The name of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Title">
            <summary>
            The title of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Description">
            <summary>
            The description of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Detail">
            <summary>
            The detail of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Events">
            <summary>
            The events of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_Id">
            <summary>
            The ID of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_Name">
            <summary>
            The name of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_Title">
            <summary>
            The title of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_Description">
            <summary>
            The description of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_MaximumIndex">
            <summary>
            The maximum index of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_Detail">
            <summary>
            The detail of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_InputDetail">
            <summary>
            The input detail of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__Task_OutputDetail">
            <summary>
            The output detail of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_Detail">
            <summary>
            The detail of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_Location">
            <summary>
            The location of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_Status">
            <summary>
            The status of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_State">
            <summary>
            The state of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_CustomStatus">
            <summary>
            The custom status of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_ProgressIndex">
            <summary>
            The progress index of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_ProgressMax">
            <summary>
            The progress maximum of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_StartDate">
            <summary>
            The start date of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_RestartDate">
            <summary>
            The restart date of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_EndDate">
            <summary>
            The end date of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_Duration">
            <summary>
            The duration of the process execution of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogAttribute.__ProcessExecution_ResultLevel">
            <summary>
            The result level of the process execution of the log.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute">
            <summary>
            This enumeration lists the possible log event attributes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute.__Id">
            <summary>
            The ID of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute.__Name">
            <summary>
            The name of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute.__Title">
            <summary>
            The title of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute.__Description">
            <summary>
            The description of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute.__ResultCode">
            <summary>
            The detail of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute.__Source">
            <summary>
            The ID of the task of the log.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogEventAttribute.__StackTrace">
            <summary>
            The name of the task of the log.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat">
            <summary>
            This enumeration lists the possible log formats.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.Json">
            <summary>
            Json.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.Snap">
            <summary>
            Snap.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.Report">
            <summary>
            Report.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.Yaml">
            <summary>
            YAML.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat.Xml">
            <summary>
            XML.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger">
            <summary>
            This class represents a logger.
            </summary>
            <remarks>The output format is YAML.</remarks>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.__DefaultName">
            <summary>
            The default name to consider.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.Filepath">
            <summary>
            File path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.FolderPath">
            <summary>
            Folder path of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.Mode">
            <summary>
            The mode of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.OutputKind">
            <summary>
            The output kind of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.Format">
            <summary>
            The format of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.IsVerbose">
            <summary>
            Indicates whether this instance is verbose.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.UICulture">
            <summary>
            The UI culture of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.Log">
            <summary>
            The log of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.EventFinder">
            <summary>
            Function that filters event.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.#ctor">
            <summary>
            Instantiates a new instance of the Logger class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.#ctor(System.String,BindOpen.Framework.Core.System.Diagnostics.Loggers.LogFormat,BindOpen.Framework.Core.System.Diagnostics.LoggerMode,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,System.Boolean,System.String,System.String,System.String,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},System.Int32)">
            <summary>
            Instantiates a new instance of the Logger class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="logFormat">The log format to consider.</param>
            <param name="mode">The mode to consider.</param>
            <param name="outputKind">The output kind to consider.</param>
            <param name="isVerbose">Indicates whether .</param>
            <param name="uiCulture">The folder path to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <param name="fileName">The file name to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.WriteLog(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Logs the specified log.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.WriteTask(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration)">
            <summary>
            Logs the specified task.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="task">The task to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.WriteEvent(BindOpen.Framework.Core.System.Diagnostics.LogEvent)">
            <summary>
            Logs the specified event.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logEvent">The log event to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.WriteDetailElement(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Object)">
            <summary>
            Logs the specified element.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="elementName">The element name to consider.</param>
            <param name="elementValue">The element value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.WriteChildLog(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Logs the specified child log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="childLog">The child log to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.Write(System.String)">
            <summary>
            Writes the specified text to the output kind of this instance.
            </summary>
            <param name="text">The text to write.</param>
            <returns>Returns true whether the text has been written.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.WriteToConsole(System.String)">
            <summary>
            Writes the specified text to the console of this instance.
            </summary>
            <param name="text">The text to write.</param>
            <returns>Returns true whether the text has been written.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.WriteToFile(System.String)">
            <summary>
            Writes the specified text to the file of this instance.
            </summary>
            <param name="text">The text to write.</param>
            <returns>Returns true whether the text has been written.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.IsHistoryRequired">
            <summary>
            Indicates whether this instance requires all the event history to be maintained.
            </summary>
            <returns>Returns True if this instance requires all the event history.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.SetLog(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Sets the specified log.
            </summary>
            <param name="log">The log to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.DeleteExpiredLogs(System.Int32)">
            <summary>
            Delete the logs older than the specified day number.
            </summary>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.SetFileName(System.String)">
            <summary>
            Sets the name of the file of this instance.
            </summary>
            <param name="fileName">The name of the file to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.SetFilePath(System.String,System.Boolean,System.String)">
            <summary>
            Sets the log file location.
            </summary>
            <param name="newFolderPath">The new folder path to consider.</param>
            <param name="isFileToBeMoved">Indicates whether the file must be moved.</param>
            <param name="newFileName">The new file name to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.LoadLog(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Boolean)">
            <summary>
            Instantiates a new instance of Log class from a xml file.
            </summary>
            <param name="filePath">The path of the Xml file to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The load log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.LoadLogFromString(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of Log class from a xml string.
            </summary>
            <param name="xmlString">The Xml string to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <returns>The log defined in the Xml file.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.Save(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Boolean)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logFilePath">The path of the log file to save.</param>
            <param name="isAppended">Indicates whether the new content is appended if one alreay exists.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.Save(System.Boolean)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="isAppended">Indicates whether the new content is appended if one alreay exists.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.ToString(BindOpen.Framework.Core.System.Diagnostics.Log,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.Logger.ToString(BindOpen.Framework.Core.System.Diagnostics.LogEvent,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified event.
            </summary>
            <param name="logEvent">The log event to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified event.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.LoggerFactory">
            <summary>
            This class represents a logger.
            </summary>
            <remarks>The output format is YAML.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.LoggerFactory.Create``1(System.String,BindOpen.Framework.Core.System.Diagnostics.LoggerMode,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,System.Boolean,System.String,System.String,System.String,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},System.Int32)">
            <summary>
            Creates the specified logger.
            </summary>
            <typeparam name="T">The logger class to consider.</typeparam>
            <param name="name">The name to consider.</param>
            <param name="logFormat">The format to consider.</param>
            <param name="mode">The mode to consider.</param>
            <param name="outputKind">The output kind to consider.</param>
            <param name="isVerbose">Indicates whether .</param>
            <param name="uiCulture">The folder path to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <param name="fileName">The file name to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="expirationDayNumber">The expiration day number to consider.</param>
            <returns>Returns the specified logger.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger">
            <summary>
            This class represents a YAML logger.
            </summary>
            <remarks>The output format is YAML.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger.#ctor">
            <summary>
            Instantiates a new instance of the ReportLogger class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger.#ctor(System.String,BindOpen.Framework.Core.System.Diagnostics.LoggerMode,System.String,System.String,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,System.Boolean,System.String,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},System.Int32)">
            <summary>
            Instantiates a new instance of the ReportLogger class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="mode">The mode to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <param name="fileName">The file name to consider.</param>
            <param name="outputKind">The output kind to consider.</param>
            <param name="isVerbose">Indicates whether .</param>
            <param name="uiCulture">The folder path to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger.WriteTask(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration)">
            <summary>
            Logs the specified task.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="task">The task to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger.WriteEvent(BindOpen.Framework.Core.System.Diagnostics.LogEvent)">
            <summary>
            Logs the specified record.
            </summary>
            <param name="logEvent">The log event to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger.WriteDetailElement(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Object)">
            <summary>
            Logs the specified element.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="elementName">The element name to consider.</param>
            <param name="elementValue">The element value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger.WriteChildLog(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Logs the specified record.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="childLog">The child log to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.ReportLogger.Save(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Boolean)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logFilePath">The path of the log file to save.</param>
            <param name="isAppended">Indicates whether the new content is appended if one alreay exists.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.SnapLogger">
            <summary>
            This class represents a Snap logger.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.SnapLogger.#ctor">
            <summary>
            Instantiates a new instance of the SnapLogger class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.SnapLogger.#ctor(System.String,BindOpen.Framework.Core.System.Diagnostics.LoggerMode,System.String,System.String,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,System.Boolean,System.String,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},System.Int32)">
            <summary>
            Instantiates a new instance of the SnapLogger class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="mode">The mode to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <param name="fileName">The file name to consider.</param>
            <param name="outputKind">The output kind to consider.</param>
            <param name="isVerbose">Indicates whether .</param>
            <param name="uiCulture">The folder path to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.SnapLogger.ToString(BindOpen.Framework.Core.System.Diagnostics.Log,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.SnapLogger.ToString(BindOpen.Framework.Core.System.Diagnostics.LogEvent,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified event.
            </summary>
            <param name="logEvent">The log event to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified event.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.SnapLogger.WriteEvent(BindOpen.Framework.Core.System.Diagnostics.LogEvent)">
            <summary>
            Logs the specified record.
            </summary>
            <param name="logEvent">The log event to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger">
            <summary>
            This class represents a XML logger.
            </summary>
            <remarks>The output format is YAML.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.#ctor">
            <summary>
            Instantiates a new instance of the XmlLogger class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.#ctor(System.String,BindOpen.Framework.Core.System.Diagnostics.LoggerMode,System.String,System.String,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,System.Boolean,System.String,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},System.Int32)">
            <summary>
            Instantiates a new instance of the XmlLogger class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="mode">The mode to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <param name="fileName">The file name to consider.</param>
            <param name="outputKind">The output kind to consider.</param>
            <param name="isVerbose">Indicates whether .</param>
            <param name="uiCulture">The folder path to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.WriteTask(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Extensions.Configuration.Tasks.TaskConfiguration)">
            <summary>
            Logs the specified task.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="task">The task to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.WriteEvent(BindOpen.Framework.Core.System.Diagnostics.LogEvent)">
            <summary>
            Logs the specified record.
            </summary>
            <param name="logEvent">The log event to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.WriteDetailElement(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Object)">
            <summary>
            Logs the specified element.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="elementName">The element name to consider.</param>
            <param name="elementValue">The element value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.WriteChildLog(BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Logs the specified record.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="childLog">The child log to log.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.IsHistoryRequired">
            <summary>
            Indicates whether this instance requires all the event history to be maintained.
            </summary>
            <returns>Returns True if this instance requires all the event history.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.LoadLog(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.IAppScope,System.Boolean)">
            <summary>
            Instantiates a new instance of Log class from a xml file.
            </summary>
            <param name="filePath">The path of the Xml file to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <param name="mustFileExist">Indicates whether the file must exist.</param>
            <returns>The load log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.LoadLogFromString(System.String,BindOpen.Framework.Core.System.Diagnostics.Log,BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of Log class from a xml string.
            </summary>
            <param name="xmlString">The Xml string to load.</param>
            <param name="loadLog">The output log of the load task.</param>
            <param name="appScope">The application scope to consider.</param>
            <returns>The log defined in the Xml file.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.Save(BindOpen.Framework.Core.System.Diagnostics.Log,System.String,System.Boolean)">
            <summary>
            Saves this instance in the specified log file.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="logFilePath">The path of the log file to save.</param>
            <param name="isAppended">Indicates whether the new content is appended if one alreay exists.</param>
            <returns>Returns the saving log.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.XmlLogger.ToString(BindOpen.Framework.Core.System.Diagnostics.Log,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified log.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.Loggers.YamlLogger">
            <summary>
            This class represents a YAML logger.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.YamlLogger.#ctor">
            <summary>
            Instantiates a new instance of the YamlLogger class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.YamlLogger.#ctor(System.String,BindOpen.Framework.Core.System.Diagnostics.LoggerMode,System.String,System.String,BindOpen.Framework.Core.Data.Items.Source.DataSourceKind,System.Boolean,System.String,System.Predicate{BindOpen.Framework.Core.System.Diagnostics.LogEvent},System.Int32)">
            <summary>
            Instantiates a new instance of the YamlLogger class.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="mode">The mode to consider.</param>
            <param name="folderPath">The folder path to consider.</param>
            <param name="fileName">The file name to consider.</param>
            <param name="outputKind">The output kind to consider.</param>
            <param name="isVerbose">Indicates whether .</param>
            <param name="uiCulture">The folder path to consider.</param>
            <param name="eventFinder">The function that filters event.</param>
            <param name="expirationDayNumber">The number of expiration days to consider.</param>
            <remarks>With expiration day number equaling to -1, no files expires. Equaling to 0, all files except the current one expires.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Diagnostics.Loggers.YamlLogger.ToString(BindOpen.Framework.Core.System.Diagnostics.Log,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the string representing to the specified log.
            </summary>
            <param name="log">The log to consider.</param>
            <param name="attributeNames">The attribute names to consider.</param>
            <returns>The string representing to the specified log.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Diagnostics.LoggerMode">
            <summary>
            This enumeration lists log modes.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LoggerMode.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LoggerMode.Off">
            <summary>
            Off.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LoggerMode.Manual">
            <summary>
            Manual.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Diagnostics.LoggerMode.Auto">
            <summary>
            Automatic.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Helpers.SystemHelper">
            <summary>
            This class represents a instance of system helper.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Helpers.SystemHelper.GetCurrentTimeStamp">
            <summary>
            Returns the current time stamp.
            </summary>
            <returns>The current time stamp</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Processing.ProcessExecution">
            <summary>
            This class represents the process execution.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.Detail">
            <summary>
            Detail of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.DetailSpecified">
            <summary>
            Specification of the PropertyDetail property of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.Location">
            <summary>
            Location of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.LocationSpecified">
            <summary>
            Specification of the Location of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.ProgressIndex">
            <summary>
            Progression index of this instance. By default it is set to 0.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.ProgressMax"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.ProgressMax">
            <summary>
            Maximum progression of this instance. By default, it is set to 100.
            </summary>
            <seealso cref="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.ProgressIndex"/>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.Status">
            <summary>
            Status of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.State">
            <summary>
            State of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.CustomStatus">
            <summary>
            Custom status of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.CustomStatusSpecified">
            <summary>
            Specification of the CustomStatus of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.StartDate">
            <summary>
            Start date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.StartDateSpecified">
            <summary>
            Specification of the StartDate of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.RestartDate">
            <summary>
            Re-start date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.RestartDateSpecified">
            <summary>
            Specification of the RestartDate of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.EndDate">
            <summary>
            End date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.EndDateSpecified">
            <summary>
            Specification of the EndDate of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.Duration">
            <summary>
            End date of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.DurationSpecified">
            <summary>
            Specification of the Duration of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.ProcessExecution.ResultLevel">
            <summary>
            Result level of this instance. Over a certain value the result can be considered 
            as satisfying.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.#ctor">
            <summary>
            Instantiates a new instance of the LogEventExecution class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.#ctor(BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Instantiates a new instance of the LogEventExecution class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.GetState(System.String)">
            <summary>
            Get the process execution state.
            </summary>
            <param name="aString">The execution state string.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.GetStatus(System.String)">
            <summary>
            Get the process execution status.
            </summary>
            <param name="aString">The execution status string.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.GetStatuses(BindOpen.Framework.Core.System.Processing.ProcessExecutionState)">
            <summary>
            Get the process execution statuses corresponding to the specified state.
            </summary>
            <param name="aState">The state to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.GetDefaultStatus(BindOpen.Framework.Core.System.Processing.ProcessExecutionState)">
            <summary>
            Gets the default status of the specified state.
            </summary>
            <param name="aProcessExecutionState">The state to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.GetState(BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus)">
            <summary>
            Get the process execution statuse corresponding to the specified state.
            </summary>
            <param name="status">The status to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.End(BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus)">
            <summary>
            Ends this instance specifying the status.
            </summary>
            <param name="status">The new status to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.Restart">
            <summary>
            Restarts this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.Resume">
            <summary>
            Resumes this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecution.AddDetail(System.String,System.Object)">
            <summary>
            Sets the specified detail attribute.
            </summary>
            <param name="name">The name of the attribute to set.</param>
            <param name="value">The value of the attribute to set.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Processing.ProcessExecutionState">
            <summary>
            This enumeration represents the possible process execution states.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionState.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionState.Pending">
            <summary>
            Pending.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionState.Ended">
            <summary>
            Ended.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus">
            <summary>
            This enumeration represents the possible process execution statuses.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.NothingDone">
            <summary>
            Nothing done.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Processing">
            <summary>
            Processing.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Waiting">
            <summary>
            Waiting.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Queueing">
            <summary>
            Queueing.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Stopped">
            <summary>
            Stopped.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Stopped_Exception">
            <summary>
            Stopped with exceptions (system error).
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Stopped_Error">
            <summary>
            Stopped with errors (configuration error).
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Stopped_User">
            <summary>
            Stopped by user.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatus.Completed">
            <summary>
            Completed.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatusExtension">
            <summary>
            This class represents a process execution status helper.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.ProcessExecutionStatusExtension.GetStatus(System.Collections.Generic.List{BindOpen.Framework.Core.System.Diagnostics.LogEvent})">
            <summary>
            Executes this instance.
            </summary>
            <param name="events">The events to consider.</param>
            <returns>Returns the output value of the execution.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Processing.Resources.ResourceAllocation">
            <summary>
            This class represents an resource allocation.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.Resources.ResourceAllocation.AllocatedResourceId">
            <summary>
            The allocated resource ID of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Processing.Resources.ResourceAllocation.OwnerId">
            <summary>
            The owner ID of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.Resources.ResourceAllocation.#ctor">
            <summary>
            Instantiates a new instance of ResourceAllocation class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Processing.Resources.ResourceAllocation.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of ResourceAllocation class.
            </summary>
            <param name="aAllocatedResourceId">Allocated resource ID to consider.</param>
            <param name="aOwnerId">The owner ID to consider.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Scripting.ScriptFormatHelper">
            <summary>
            This class represents a script format helper.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptFormatHelper.Format(System.String,System.Int32)">
            <summary>
            Formats the specified script string considering the specified number of tabulations.
            </summary>
            <param name="script">The script to format.</param>
            <param name="aTabulationNumber">The number of tabulations.</param>
            <returns>Returns the formated script.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptFormatHelper.LiteralizeScript(System.String)">
            <summary>
            Returns the specified script literalized.
            </summary>
            <param name="script">The script to literalize.</param>
            <returns>The specified script literalized.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptFormatHelper.DeliteralizeScript(System.String)">
            <summary>
            Returns the specified script deliteralized.
            </summary>
            <param name="script">The script to deliteralize.</param>
            <returns>The specified script deliteralized.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter">
            <summary>
            This class represents a script interpreter. A script interpreter allows to interpret a script
            using script dictionnaries and data context, providing a log for the interpretation task.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.#ctor">
            <summary>
            Instantiates a new instance of the ScriptInterpreter class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.#ctor(BindOpen.Framework.Core.Application.Scopes.AppScope)">
            <summary>
            Instantiates a new instance of the ScriptInterpreter class.
            </summary>
            <param name="appScope">The application scope used to interprete.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.LoadDefinitions(System.Collections.Generic.List{System.String})">
            <summary>
            Loads the specified libraries.
            </summary>
            <param name="libraryNames">The names of libraries to load.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.Evaluate(BindOpen.Framework.Core.Data.Expression.DataExpression,System.String@,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Evaluates the specified data expression.
            </summary>
            <param name="dataExpression">The data expression to consider.</param>
            <param name="resultScript">The result script to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Literal or script value according to the specified default mode.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.Evaluate(BindOpen.Framework.Core.Data.Expression.DataExpression,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Evaluates the specified data expression.
            </summary>
            <param name="dataExpression">The data expression to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Literal or script value according to the specified default mode.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.Evaluate(System.String,System.String@,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Evaluates the specified script using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="resultScript">The result script to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.Evaluate(System.String,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Evaluates the specified script using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.Interprete(BindOpen.Framework.Core.Data.Expression.DataExpression,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Interprets the specified script using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="dataExpression">The data expression to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.Interprete(System.String,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Interprets the specified script using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.EvaluateScript(System.String,BindOpen.Framework.Core.Data.Expression.DataExpressionKind,System.String@,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Interprets the specified script using the defined script words of this instance
            of the specified libraries.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="resultScript">The result script to consider.</param>
            <param name="dataExpressionKind">The expression kind to consider.</param>
            <param name="scriptVariableSet">The script variable set to use.</param>
            <param name="log">The log to consider.</param>
            <returns>The log of the interpretation task.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptInterpreter.FindNextScriptWord(System.String@,BindOpen.Framework.Core.Extensions.Configuration.Scriptwords.ScriptWord,System.Int32@,System.Int32,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet,System.Boolean,BindOpen.Framework.Core.System.Diagnostics.Log)">
            <summary>
            Finds the next script words at the specified index.
            </summary>
            <param name="script">The script to consider.</param>
            <param name="parentScriptWord">The parent script word to consider.</param>
            <param name="index">The index to consider.</param>
            <param name="offsetIndex">The offset index to consider.</param>
            <param name="scriptVariableSet"></param>
            <param name="isSimulationModeOn">Indicates whether the simulation mode is on.</param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Scripting.ScriptItem">
            <summary>
            This class represents a script item.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Scripting.ScriptItem.Name">
            <summary>
            The name of this instance.
            </summary>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Scripting.ScriptItem.Kind">
            <summary>
            Kind of this instance.
            </summary>
            <example>Script word, syntax, text...</example>
        </member>
        <member name="P:BindOpen.Framework.Core.System.Scripting.ScriptItem.Index">
            <summary>
            The index of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptItem.#ctor">
            <summary>
            Instantiates a new instance of the ScriptItem class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptItem.#ctor(BindOpen.Framework.Core.System.Scripting.ScriptItemKind,System.String,System.Int32)">
            <summary>
            Instantiates a new instance of the ScriptItem class.
            </summary>
            <param name="kind">The kind of the instance.</param>
            <param name="name">The name of the instance.</param>
            <param name="index">The index of the instance.</param>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Scripting.ScriptItemKind">
            <summary>
            This enumeration lists the possible kinds of script items.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptItemKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptItemKind.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptItemKind.Function">
            <summary>
            Function.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptItemKind.Variable">
            <summary>
            Variable.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptItemKind.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptItemKind.Syntax">
            <summary>
            Syntax.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptItemKind.Literal">
            <summary>
            Literal.
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Scripting.ScriptItemKindExtension">
            <summary>
            This class represents an specification level extension.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptItemKindExtension.IsFunctionOrVariable(BindOpen.Framework.Core.System.Scripting.ScriptItemKind)">
            <summary>
            Indicates whether the specified element kind is a script word kind.
            </summary>
            <param name="scriptItemKind">The kind to consider.</param>
            <returns>Returns true if the specified element is a script word kind.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper">
            <summary>
            This class represents a string parser.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.Symbol_Var">
            <summary>
            The leading character of the variable.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.Symbol_Fun">
            <summary>
            The leading character of the function.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.SyntaxItems">
            <summary>
            The syntax items of this class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.GetValueFromText(System.String)">
            <summary>
            Returns the string value from a text.
            </summary>
            <param name="text">The text from which the string value is retrieved.</param>
            <returns>The string value from a text</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.GetParameterValue(System.String,System.String,System.Boolean)">
            <summary>
            Returns the parameter value included into the specified text.
            </summary>
            <remarks>The inluding text must be formated this way: parameter1="value";parameter2="value".</remarks>
            <param name="stringValue">The string to parse.</param>
            <param name="parameterName">Name of the parameter to consider.</param>
            <param name="isMatchCase">Indicates whether the search is case sensitive.</param>
            <returns>The value of the specified parameter.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.GetIndexOfNextString(System.String,System.String,System.Int32)">
            <summary>
            Returns the position of stv in st from index taking in account the closing ponctuation (,{,[. 
            </summary>
            <param name="st">The string to parse.</param>
            <param name="stv">The string to look for.</param>
            <param name="indexDeb">The start index.</param>
            <returns>The position of the next stv into st from index position.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.GetIndexOfLastString(System.String,System.String,System.Int32)">
            <summary>
            Returns the last position of stv in st from index taking in account the closing ponctuation (,{,[. 
            </summary>
            <param name="st">The string to parse.</param>
            <param name="stv">The string to look for.</param>
            <param name="indexDeb">The start index.</param>
            <returns>The position of the next stv into st from index position.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.FindScriptItems(System.String)">
            <summary>
            Returns the items that are in the specified script.
            </summary>
            <param name="script">The script to analyse.</param>
            <returns>The items that are in the specified script.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.GetScriptBlock(System.String,System.Int32)">
            <summary>
            Returns the first script block in the specified script from the specified index.
            </summary>
            <param name="script">The script to analyse.</param>
            <param name="index">The index position to begin analyse.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptParsingHelper.GetWordDefinitions(BindOpen.Framework.Core.System.Scripting.ScriptInterpreter,System.String,System.Int32,System.Boolean,BindOpen.Framework.Core.System.Scripting.ScriptVariableSet)">
            <summary>
            Gets the possible definitions corresponding to the specified script.
            </summary>
            <param name="scriptInterpreter">The script interpreter to consider.</param>
            <param name="script">The script to analyse.</param>
            <param name="index">The index position of the parent script word.</param>
            <param name="isSuggest">False if all the child script words of the parent must be returned.
            <param name="scriptVariableSet">The script variable set to use.</param>
            True if only the child script words similar to the child script word present in the script
            must be returned.</param>
            <returns>Returns the possible child script word definitions.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Scripting.ScriptVariableSet">
            <summary>
            This class represents a script variable box that allows to store interpretation variables.
            </summary>
            <remarks>Interpreation variables are variables that cannot be evaluated directly though definitions. Example current objects.</remarks>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptVariableSet.#ctor">
            <summary>
            Instantiates a new instance of the ScriptVariableSet class.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptVariableSet.GetValue(System.String)">
            <summary>
            Gets the value of the specified variable.
            </summary>
            <param name="variableName">The name of the variable to consider.</param>
            <returns>Returns the value of the specified variable.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptVariableSet.Has(System.String)">
            <summary>
            Indicates whether this instance has the specified variable.
            </summary>
            <param name="variableName">The name of the variable to consider.</param>
            <returns>Returns True if this instance has the specified variable.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptVariableSet.SetValue(BindOpen.Framework.Core.Data.Items.StoredDataItem)">
            <summary>
            Adds the specified named data item.
            </summary>
            <param name="storedDataItem">The named data item to consider.</param>
            <returns>Returns true if the specified item has been added.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptVariableSet.SetValue(System.String,System.Object)">
            <summary>
            Adds the specified named data item.
            </summary>
            <param name="name">The name to consider.</param>
            <param name="value">The value to consider.</param>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Scripting.ScriptVariableSet.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns a clone of this instance.</returns>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Versioning.UpdateLevel">
            <summary>
            This enumeration lists all the possible update levels.
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Versioning.UpdateLevel.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Versioning.UpdateLevel.Minor">
            <summary>
            Minor
            </summary>
        </member>
        <member name="F:BindOpen.Framework.Core.System.Versioning.UpdateLevel.Major">
            <summary>
            Major
            </summary>
        </member>
        <member name="T:BindOpen.Framework.Core.System.Versioning.VersioningHelper">
            <summary>
            This class represents a versioning helper.
            </summary>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Versioning.VersioningHelper.GetVersionElement(System.String,System.Int32)">
            <summary>
            Gets the specified version element.
            </summary>
            <param name="version">The new version to consider.</param>
            <param name="level">The base-0 level to consider.</param>
            <returns>The version element at the specified level.</returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Versioning.VersioningHelper.GetVersion(System.String,System.Int32)">
            <summary>
            Gets the specified version.
            </summary>
            <param name="version">The new version to consider.</param>
            <param name="level">The level to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Versioning.VersioningHelper.GetVersion(System.Int32[])">
            <summary>
            Gets the specified version.
            </summary>
            <param name="numbers">The version section numbers to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Versioning.VersioningHelper.GetVersion(System.String[])">
            <summary>
            Gets the specified version.
            </summary>
            <param name="numbers">The version section numbers to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Versioning.VersioningHelper.IsVersionMajor(System.String,System.String,System.Int32)">
            <summary>
            Indicates whether the specified new version is a major update of the specified current version considering the 
            specified major update level.
            </summary>
            <param name="newVersion">The new version to consider.</param>
            <param name="currentVersion">the current version to consider.</param>
            <param name="majorUpdateLevel">The major update level to consider.</param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Framework.Core.System.Versioning.VersioningHelper.GetIncrementedVersion(System.String,System.String,System.String)">
            <summary>
            Gets the incremented version considering the versioning format.
            </summary>
            <param name="currentVersion">The current version to consider.</param>
            <param name="versioningFormat">The versioning format to consider.</param>
            <param name="historicVersion">The historic version to consider.</param>
            <returns>The URL of the setup file of the new update. Null if there is no new update.</returns>
        </member>
        <member name="T:BindOpen.Framework.Runtime.Application.Services.IOptionSpecItem">
            <summary>
            This interface defines the option specification item.
            </summary>
        </member>
        <member name="T:cor_base_wdl.application.entities.EntityUniqueName_Basic">
            <summary>
            This enumeration represents the possible basic entitie unique names.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Any">
            <summary>
            Any.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.BpmProject">
            <summary>
            Project.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.DocumentLibrary">
            <summary>
            Document library.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Document">
            <summary>
            Document.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.DocumentFolder">
            <summary>
            Document collection.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.ConnectionParameterStatement">
            <summary>
            Connection.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Task">
            <summary>
            Task.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.BusinessRole">
            <summary>
            Business role.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.LibrarySchemaElement">
            <summary>
            Library schema element.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.DataSchemaElement">
            <summary>
            Information schema element.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.DataSchema">
            <summary>
            Data schema.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.OperationRuleSet">
            <summary>
            Operation rule.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.MasterData">
            <summary>
            Master data.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.DocumentSchemaElement">
            <summary>
            Document schema element.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.OrganizationRule">
            <summary>
            Organization rule.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Action">
            <summary>
            Action.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.ActionProfile">
            <summary>
            Action profile.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.OptionProfile">
            <summary>
            Option profile.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Spreadsheet">
            <summary>
            Spreadsheet.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Picture">
            <summary>
            Picture.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Video">
            <summary>
            Video.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.News">
            <summary>
            News.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.RssNews">
            <summary>
            RSS News.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Resource">
            <summary>
            Resource.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.SocialNetwork">
            <summary>
            SocialNetwork.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.SubmissionForm">
            <summary>
            Submission form.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.DataForm">
            <summary>
            Data form.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Visitor">
            <summary>
            Visitor.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.VisitorSelection">
            <summary>
            Visitor selection.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.BusinessObject">
            <summary>
            BusinessObject.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.SystemData">
            <summary>
            System data.
            </summary>
        </member>
        <member name="F:cor_base_wdl.application.entities.EntityUniqueName_Basic.Command">
            <summary>
            Command.
            </summary>
        </member>
    </members>
</doc>
